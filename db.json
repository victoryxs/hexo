{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1},{"_id":"themes/next/source/js/search-toggle.js","path":"js/search-toggle.js","modified":1},{"_id":"themes/next/source/js/motion_global.js","path":"js/motion_global.js","modified":1},{"_id":"themes/next/source/js/motion_fallback.js","path":"js/motion_fallback.js","modified":1},{"_id":"themes/next/source/js/helpers.js","path":"js/helpers.js","modified":1},{"_id":"themes/next/source/js/fancy-box.js","path":"js/fancy-box.js","modified":1},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":1},{"_id":"themes/next/source/js/analytics_google-analytics.js","path":"js/analytics_google-analytics.js","modified":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","path":"images/bkdefault_avatar.jpg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","path":"fonts/icon-linecons/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","path":"fonts/icon-linecons/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","path":"fonts/icon-linecons/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","path":"fonts/icon-linecons/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","path":"fonts/icon-icomoon/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","path":"fonts/icon-icomoon/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","path":"fonts/icon-icomoon/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","path":"fonts/icon-icomoon/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","path":"fonts/icon-fifty-shades/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","path":"fonts/icon-fifty-shades/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","path":"fonts/icon-fifty-shades/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","path":"fonts/icon-fifty-shades/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","path":"fonts/icon-feather/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","path":"fonts/icon-feather/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","path":"fonts/icon-feather/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","path":"fonts/icon-feather/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","path":"fonts/icon-default/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","path":"fonts/icon-default/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","path":"fonts/icon-default/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","path":"fonts/icon-default/icomoon.eot","modified":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1}],"Cache":[{"_id":"source/_posts/FoldingText工具.md","shasum":"2bf0684c401e0ab587d8fe78f1c8d549e7d34cff","modified":1436513332000},{"_id":"source/_posts/IntelliJ-IDEA14-教程.md","shasum":"4f12e9af31a438c1564ae2ca1ce67ae87255f303","modified":1437624253000},{"_id":"source/_posts/Mac软件推荐.md","shasum":"129e8769bfbc2472ea9a711a0338f527bae610c0","modified":1436513004000},{"_id":"source/404.html","shasum":"c529c9996250082ea7eb024078bef33e88e01353","modified":1436334960000},{"_id":"source/_posts/取代PPT的mdpress.md","shasum":"87e24e00b2978972828d9c916cd3fe0585bd81e9","modified":1437842779000},{"_id":"source/_posts/iterm2-zsh-oh-my-zsh-配置.md","shasum":"de4f6db79f1c7dc1067315ba75c71d66d3cb87a3","modified":1437571070000},{"_id":"source/_posts/利用github和hexo搭建静态博客.md","shasum":"68e715d0582c914d35a89fa00ca8949ac57f03dc","modified":1436449787000},{"_id":"source/_posts/慢跑鞋入门.md","shasum":"2d337ba367b8f444c8a0a563b081b6b34d29b553","modified":1437395785000},{"_id":"source/_posts/每日一题-Count-and-Say.md","shasum":"12911f3007b9c679506db1a2883b6f635f319341","modified":1438086106000},{"_id":"source/_posts/每日一题-Compare-Version-Numbers.md","shasum":"6fae0c8bacce06e9e0986472395008d2ff59741a","modified":1438042541000},{"_id":"source/_posts/每日一题-Length-of-Last-Word.md","shasum":"72fad8f976255b8a72dee6fafa74d424861c3114","modified":1437973707000},{"_id":"source/_posts/每日一题-Longest-Common-Prefix.md","shasum":"d79d473f3922e98e39a9667ae66560ab5c802b94","modified":1437904060000},{"_id":"source/_posts/每日一题-Roman-to-Integer.md","shasum":"d1b8566fcbef0ad009af3ba29bd08bdbed5a1856","modified":1437875393000},{"_id":"source/_posts/每日一题-String-to-Integer.md","shasum":"0f40aa459ee28f87c9af0a86f867ce41fcb29517","modified":1437811589000},{"_id":"source/_posts/每日一题-ZigZag-Conversion.md","shasum":"9db7ae79daafbc2ede6bf962484fa069ce6ea431","modified":1437723800000},{"_id":"source/_posts/每日一题-add-Binary.md","shasum":"b0eaa2c7211b5adfa671196f2688a4ed68713626","modified":1437641798000},{"_id":"source/_posts/每日一题-Valid-Parentheses.md","shasum":"75f14d2741e490864b9f933ad01ce03a5bc5c624","modified":1437786394000},{"_id":"source/about/index.md","shasum":"220bd36ade2a46a6e653f36c462f22e91a83c3c4","modified":1436415469000},{"_id":"source/_posts/每日一题-Valid-Palindrome.md","shasum":"bd095dc4d2ebbc7e4a98722f14466760486afd27","modified":1437793319000},{"_id":"source/categories/index.md","shasum":"a6c1ed11b6bb66eea8f699a37070be48c9f6e653","modified":1436333517000},{"_id":"source/guestbook/index.md","shasum":"ab6e4c7ef46d5546b9380b3a3231fd9df6bdcc56","modified":1436435089000},{"_id":"source/images/avatar.jpg","shasum":"c8c78534fac0eec586b4eb9df57c44a99a89a6e4","modified":1436334101000},{"_id":"source/tags/index.md","shasum":"f8a2cb5f78cfa5b3af082e4312295a52453561d0","modified":1436333219000},{"_id":"themes/next/source/css/_common/_page/home.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/README.md","shasum":"aa16555d1aa1d80666ab9085042e118cdb7f5ef2","modified":1435512456000},{"_id":"themes/next/bower.json","shasum":"1a681eeb5bff68be34e4e5226678c6cd3a7a12cc","modified":1435512456000},{"_id":"themes/next/_config.yml","shasum":"fba7bf7de41431cb0de543b89034b9950c487e65","modified":1437268371000},{"_id":"themes/next/README.en.md","shasum":"1771ed0b5e5dec42bd2c497d2c3e0861d464f030","modified":1435512456000},{"_id":"themes/next/languages/de.yml","shasum":"784bea46de28a3113d7c91621740f521dae09dce","modified":1435512456000},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"eea72130f71954bcf5ef294f1ccd28b3ba1b5231","modified":1436414230000},{"_id":"themes/next/languages/fr-FR.yml","shasum":"9ee1011db6307df957684c83f39ac7499391924c","modified":1435512456000},{"_id":"themes/next/languages/default.yml","shasum":"d0cad2843283dd2a62cb8d1a2ed182a368210aca","modified":1435512456000},{"_id":"themes/next/languages/ru.yml","shasum":"60cc1fb273adfd84137a207dd9d0d00f08605ccd","modified":1435512456000},{"_id":"themes/next/languages/zh-hk.yml","shasum":"e58766e0af5abf0705ccca4a5fc86d1be03db198","modified":1435512456000},{"_id":"themes/next/languages/zh-tw.yml","shasum":"d34c5781a231978e66852784ad00c9895a7de022","modified":1435512456000},{"_id":"themes/next/layout/_layout.swig","shasum":"1f97eaa9d7a88e39aa72c6165dd4459fc3b7421e","modified":1436340079000},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"f557c443e7d5f76bb53482189eb1c90d09331a6f","modified":1435512456000},{"_id":"themes/next/layout/_macro/post.swig","shasum":"852055e4044aa25d46d61f5d4929173c8dc97430","modified":1436442656000},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"72eac86e77cd84955eddc2c0a11b82461714c809","modified":1437582824000},{"_id":"themes/next/layout/_partials/head.swig","shasum":"3c7bb56ab8c15fbe19c091c33bfc16dc479da33c","modified":1435512456000},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"c13f4c28e04da43fc892f9d53547b4119746808e","modified":1437724462000},{"_id":"themes/next/layout/_partials/header.swig","shasum":"e0395fe527fe675349844ec40760075713f78954","modified":1437195866000},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"33d3d6c4417ea88e602dcb116b0604a1955dc5fe","modified":1435512456000},{"_id":"themes/next/layout/_partials/old-browsers.swig","shasum":"dbbfea810bf3a2ed9c83b9a6683037175aacfc67","modified":1435512456000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"ee0c2540e8178f390051af7d365a42ae68375afa","modified":1435512456000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"94beb0764ccbbba0c9f5c9886cc656bf879bcfd5","modified":1435512456000},{"_id":"themes/next/layout/_partials/search.swig","shasum":"8a18d32e2a257dafaaba75353692db901e1dddc5","modified":1435512456000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"63315fcf210799f894208c9f512737096df84962","modified":1435512456000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1435512456000},{"_id":"themes/next/layout/_scripts/analytics/baidu-analytics.swig","shasum":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1435512456000},{"_id":"themes/next/layout/_scripts/baidushare.swig","shasum":"d726361945437cf6e48067b3dd041b7e36e98d85","modified":1435512456000},{"_id":"themes/next/layout/_scripts/analytics/google-analytics.swig","shasum":"8210537cc42519aba6291d94e3d328032838bd3e","modified":1435512456000},{"_id":"themes/next/layout/_scripts/bootstrap.scrollspy.swig","shasum":"85295f126836b95f0837d03e58228bb3cf8c4490","modified":1435512456000},{"_id":"themes/next/layout/_scripts/comments/disqus.swig","shasum":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1435512456000},{"_id":"themes/next/layout/_scripts/comments/duoshuo.swig","shasum":"8e8f89976c5be14857017093f399ef5edad8ce89","modified":1435512456000},{"_id":"themes/next/layout/_scripts/fancy-box.swig","shasum":"41b4ff1446060c88c33bf666a32277dcf12129f0","modified":1435512456000},{"_id":"themes/next/layout/_scripts/helpers.swig","shasum":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1435512456000},{"_id":"themes/next/layout/_scripts/mathjax.swig","shasum":"abc52fefb276c52cbb19de5c214521dfcf2a10fd","modified":1435512456000},{"_id":"themes/next/layout/_scripts/motion.swig","shasum":"817705bfd1a1282cb6bf59094afe507e11455aa0","modified":1435512456000},{"_id":"themes/next/layout/archive.swig","shasum":"27b258cb0111ba29247c3971b9584432f0836c77","modified":1435512456000},{"_id":"themes/next/layout/index.swig","shasum":"493580984b5976c8029a4cc8c630a4b6dd48fcfc","modified":1435512456000},{"_id":"themes/next/layout/category.swig","shasum":"624d0a5c4f3e936b15539c35d6c06ba9338a4414","modified":1435512456000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"7fcd57c9f5b64635f2bd4cc8ee7c98d36dceda7a","modified":1435512456000},{"_id":"themes/next/layout/page.swig","shasum":"cf5fa12bd10fe5608cf794dae7e3739628821833","modified":1436431416000},{"_id":"themes/next/layout/tag.swig","shasum":"f1dcfbc0eef76f1f6be29f31a343338d5bbfe814","modified":1435512456000},{"_id":"themes/next/layout/post.swig","shasum":"7aa87056753fa67e47e9246d00093d3512d3fc9e","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/back-to-top.styl","shasum":"88cd66910260006aa8e9e795df4948d4b67bfa11","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/comments.styl","shasum":"54e73681ba6f57ef961138f94d2ee8ac845990c3","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/buttons.styl","shasum":"81063e0979f04a0f9af37f321d7321dda9abf593","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/duoshuo.styl","shasum":"b54d0c5a911303cb2fd4bfc84134811a502e5653","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/gallery.styl","shasum":"fa6e23ebddb6f235803b51974f36be2a43b2c9c4","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/jiathis.styl","shasum":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/pagination.styl","shasum":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-collapse.styl","shasum":"8f9e8f5f65956ccf1d52ff8526392803dff579d3","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","shasum":"4b82dbbb6e536e6e8ee3cec6e62c2fd4bea60a09","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-type.styl","shasum":"40b593134bf96d1d6095b3439d47820659d7f10b","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/tag-cloud.styl","shasum":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/helpers.styl","shasum":"41a31d651b60b4f458fc56a1d191dfbbdcb6d794","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/base.styl","shasum":"ff75d9d6b2949588964bb62223ebe88d89127b96","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/scaffolding.styl","shasum":"d776e241cf650b00ee1dd21b9ff377c250d9eeaa","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/normalize.styl","shasum":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/tables.styl","shasum":"be6c1a04595cf38673511366a3d89fcdb046f533","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-default.styl","shasum":"2d61bde579d838c4f3239ca38285070db6e75d5f","modified":1436419747000},{"_id":"themes/next/source/css/_common/_fonts/icon-feather.styl","shasum":"f49f8966496166bd62f79f75a3277d4d5b1102e8","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-fifty-shades.styl","shasum":"90e68936ea0f26af93c2c517fe1b891538f9c1b1","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-linecons.styl","shasum":"e63ecfa510b6b74abd169e5a786382bde9e07e57","modified":1436677993000},{"_id":"themes/next/source/css/_common/_fonts/icon-font.styl","shasum":"1e83380b44e3b1d976e6d28bb24c5f38cb6cfa61","modified":1436419798000},{"_id":"themes/next/source/css/_common/_page/archive.styl","shasum":"dff879f55ca65fa79c07e9098719e53eeea7ac88","modified":1435512456000},{"_id":"themes/next/source/css/_common/_page/categories.styl","shasum":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1435512456000},{"_id":"themes/next/source/css/_common/_page/post-detail.styl","shasum":"73796f6f13caa7151a2ee8e55755627e0d189f55","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/body.styl","shasum":"ca1a4766cbe25baac757c6b47a4858d221afdc40","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/footer.styl","shasum":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/layout.styl","shasum":"4daaadd156ece64ae05908ad6bb0159c8a27c071","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/header.styl","shasum":"c561330bf3caa3eb958df561fef004c4ac190490","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/media.styl","shasum":"fa9809d2ecc753cf32f70803c1d0821c405211f4","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/sidebar.styl","shasum":"d57e1769ebd2c472d2b27d17a706d3f564f94033","modified":1435512456000},{"_id":"themes/next/source/css/_common/_vendor/highlight/theme.styl","shasum":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1435512456000},{"_id":"themes/next/source/css/_common/_vendor/highlight/highlight.styl","shasum":"6259f4780f2aae1e6f85b892d8822c1c7ebc28bc","modified":1435512456000},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"68b6859fb48fe8358e567fc324f218cecfc3a533","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"66985fe77bd323f7f8f634908e17166f51e96e95","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/_menu.styl","shasum":"4bba29cece65ffc5122f4e052063dea4439fe4ae","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/_search.styl","shasum":"05045d24850a982dc8069012c86c878b130b60eb","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"b0037a87ee1a613f315c331e8ecf1673c6d82211","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/index.styl","shasum":"2588e55132e10d82c0608f03c2c72a2bace8fa4e","modified":1435512456000},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"f5dda1ca48c1b73a0bd34e08413de57699f24083","modified":1435512456000},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"59acc8bf6e6b55f576b001e520e048cd0ca801fb","modified":1435512456000},{"_id":"themes/next/source/css/main.styl","shasum":"b05c342e94ded24a5f2b203cedf77d3faa817fd5","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","shasum":"a58d5e893c6faefc90d5c2589cc314dff8ffca7a","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","shasum":"4f18f0bb815b1aeba57739069c3416106240b7c1","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","shasum":"e6452f07b050ee0ff265b3b99a1e7ef82eb561b2","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","shasum":"4d0adc55240f331c6de225e23afd76ea5318da9c","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","shasum":"6d0eb1a5bfef4f2bf77089bd090e88c5b2f7944d","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","shasum":"8c865cffa3845be32406737fcc0466cf9cd965b3","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","shasum":"690836f81c0feb1a49e2253d4f984ad543414986","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","shasum":"9159eea8641b840e0f7aa6e087dae414044ecdd3","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","shasum":"f27c3643af6ed6f3d29a0be0c8dbea9b157857db","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","shasum":"e0b5e4a23a949bac499908bcef2fae56430e230e","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","shasum":"088a16303b0700e1c9e2c6962240b4c2f0fc3aa4","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","shasum":"f0790da03008b6cb3ae4215cbb656cb4b4599633","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","shasum":"f399713d1c9400d4d3373e38991a7e362a754a94","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","shasum":"e316347805eb93425faa678611c5e42a7152da8f","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","shasum":"176695cc0dc12daba049b2bb889397a7bf2e553c","modified":1435512456000},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","shasum":"b687bb4bfbe35a32b592c24d652ba80cfdc770fc","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","shasum":"c8ec218adabc788b17f976f60dd1c5fa872d9fc4","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","shasum":"d1ed08a17670fa259df02c1d52dc9ce754343775","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1435512456000},{"_id":"themes/next/source/images/cc-by.svg","shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1435512456000},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1435512456000},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1435512456000},{"_id":"themes/next/source/js/fancy-box.js","shasum":"18b0ff55461d091b515a1b9e5f843fd2a7516c34","modified":1435512456000},{"_id":"themes/next/source/js/analytics_google-analytics.js","shasum":"f60bcf719bb55280a219c81d8ae50433aa28cf1a","modified":1435512456000},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1435512456000},{"_id":"themes/next/source/js/helpers.js","shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335","modified":1435512456000},{"_id":"themes/next/source/js/motion_fallback.js","shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e","modified":1435512456000},{"_id":"themes/next/source/js/motion_global.js","shasum":"8d8f5966826067f48517382cfe4630ec4a1e3f9d","modified":1435512456000},{"_id":"themes/next/source/js/search-toggle.js","shasum":"0bf617514cd86307f0678a226761341100dd86d4","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"53360764b429c212f424399384417ccc233bb3be","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","shasum":"888a285a4a7329210b2210742c673611c27425eb","modified":1435512456000},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1435512456000},{"_id":"public/images/avatar.jpg","modified":1438086122703,"shasum":"c8c78534fac0eec586b4eb9df57c44a99a89a6e4"},{"_id":"public/vendors/velocity/velocity.ui.min.js","modified":1438086122710,"shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908"},{"_id":"public/vendors/velocity/velocity.ui.js","modified":1438086122713,"shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df"},{"_id":"public/vendors/velocity/velocity.min.js","modified":1438086122718,"shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6"},{"_id":"public/vendors/velocity/velocity.js","modified":1438086122720,"shasum":"9f08181baea0cc0e906703b7e5df9111b9ef3373"},{"_id":"public/vendors/velocity/bower.json","modified":1438086122723,"shasum":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409"},{"_id":"public/vendors/jquery/index.js","modified":1438086122725,"shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","modified":1438086122727,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","modified":1438086122729,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","modified":1438086122731,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1438086122734,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1438086122736,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1438086122739,"shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1438086122741,"shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1438086122743,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1438086122746,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","modified":1438086122748,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","modified":1438086122750,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","modified":1438086122755,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","modified":1438086122758,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","modified":1438086122761,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/vendors/fancybox/source/blank.gif","modified":1438086122763,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/js/search-toggle.js","modified":1438086122765,"shasum":"0bf617514cd86307f0678a226761341100dd86d4"},{"_id":"public/js/motion_global.js","modified":1438086122768,"shasum":"8d8f5966826067f48517382cfe4630ec4a1e3f9d"},{"_id":"public/js/motion_fallback.js","modified":1438086122771,"shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e"},{"_id":"public/js/helpers.js","modified":1438086122775,"shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335"},{"_id":"public/js/fancy-box.js","modified":1438086122777,"shasum":"18b0ff55461d091b515a1b9e5f843fd2a7516c34"},{"_id":"public/js/bootstrap.scrollspy.js","modified":1438086122779,"shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625"},{"_id":"public/js/analytics_google-analytics.js","modified":1438086122781,"shasum":"f60bcf719bb55280a219c81d8ae50433aa28cf1a"},{"_id":"public/images/searchicon.png","modified":1438086122782,"shasum":"67727a6a969be0b2659b908518fa6706eed307b8"},{"_id":"public/images/cc-zero.svg","modified":1438086122784,"shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030"},{"_id":"public/images/cc-by.svg","modified":1438086122788,"shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e"},{"_id":"public/images/cc-by-sa.svg","modified":1438086122791,"shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e"},{"_id":"public/images/cc-by-nd.svg","modified":1438086122795,"shasum":"c563508ce9ced1e66948024ba1153400ac0e0621"},{"_id":"public/images/cc-by-nc.svg","modified":1438086122797,"shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7"},{"_id":"public/images/cc-by-nc-sa.svg","modified":1438086122799,"shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e"},{"_id":"public/images/cc-by-nc-nd.svg","modified":1438086122802,"shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564"},{"_id":"public/images/bkdefault_avatar.jpg","modified":1438086122805,"shasum":"b687bb4bfbe35a32b592c24d652ba80cfdc770fc"},{"_id":"public/fonts/icon-linecons/icomoon.woff","modified":1438086122807,"shasum":"d1ed08a17670fa259df02c1d52dc9ce754343775"},{"_id":"public/fonts/icon-linecons/icomoon.ttf","modified":1438086122810,"shasum":"c8ec218adabc788b17f976f60dd1c5fa872d9fc4"},{"_id":"public/fonts/icon-linecons/icomoon.svg","modified":1438086122813,"shasum":"888a285a4a7329210b2210742c673611c27425eb"},{"_id":"public/fonts/icon-linecons/icomoon.eot","modified":1438086122818,"shasum":"176695cc0dc12daba049b2bb889397a7bf2e553c"},{"_id":"public/fonts/icon-icomoon/icomoon.woff","modified":1438086122822,"shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb"},{"_id":"public/fonts/icon-icomoon/icomoon.ttf","modified":1438086122825,"shasum":"f399713d1c9400d4d3373e38991a7e362a754a94"},{"_id":"public/fonts/icon-icomoon/icomoon.svg","modified":1438086122827,"shasum":"e316347805eb93425faa678611c5e42a7152da8f"},{"_id":"public/fonts/icon-icomoon/icomoon.eot","modified":1438086122830,"shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d"},{"_id":"public/fonts/icon-fifty-shades/icomoon.woff","modified":1438086122833,"shasum":"088a16303b0700e1c9e2c6962240b4c2f0fc3aa4"},{"_id":"public/fonts/icon-fifty-shades/icomoon.ttf","modified":1438086122835,"shasum":"e0b5e4a23a949bac499908bcef2fae56430e230e"},{"_id":"public/fonts/icon-fifty-shades/icomoon.svg","modified":1438086122837,"shasum":"f0790da03008b6cb3ae4215cbb656cb4b4599633"},{"_id":"public/fonts/icon-fifty-shades/icomoon.eot","modified":1438086122839,"shasum":"f27c3643af6ed6f3d29a0be0c8dbea9b157857db"},{"_id":"public/fonts/icon-feather/icomoon.woff","modified":1438086122855,"shasum":"9159eea8641b840e0f7aa6e087dae414044ecdd3"},{"_id":"public/fonts/icon-feather/icomoon.ttf","modified":1438086122857,"shasum":"8c865cffa3845be32406737fcc0466cf9cd965b3"},{"_id":"public/fonts/icon-feather/icomoon.svg","modified":1438086122860,"shasum":"690836f81c0feb1a49e2253d4f984ad543414986"},{"_id":"public/fonts/icon-feather/icomoon.eot","modified":1438086122863,"shasum":"6d0eb1a5bfef4f2bf77089bd090e88c5b2f7944d"},{"_id":"public/fonts/icon-default/icomoon.woff","modified":1438086122865,"shasum":"4d0adc55240f331c6de225e23afd76ea5318da9c"},{"_id":"public/fonts/icon-default/icomoon.ttf","modified":1438086122868,"shasum":"e6452f07b050ee0ff265b3b99a1e7ef82eb561b2"},{"_id":"public/fonts/icon-default/icomoon.svg","modified":1438086122871,"shasum":"4f18f0bb815b1aeba57739069c3416106240b7c1"},{"_id":"public/fonts/icon-default/icomoon.eot","modified":1438086122873,"shasum":"a58d5e893c6faefc90d5c2589cc314dff8ffca7a"},{"_id":"public/css/main.css","modified":1438086123549,"shasum":"5e98070afffdfe41fee5234420cf483a6f041b8a"},{"_id":"public/404.html","modified":1438086123781,"shasum":"9377743a3684bdc5c1ae601c91f601dd7a764d12"},{"_id":"public/tags/index.html","modified":1438086123821,"shasum":"b3b069f9d14e6a94e0361df00d35152981286a5d"},{"_id":"public/guestbook/index.html","modified":1438086123860,"shasum":"af66e8a5d173af911fa4dbc80681028da806d1c9"},{"_id":"public/categories/index.html","modified":1438086123905,"shasum":"7a81a679a97c19b33425da64f44773f50bfcea14"},{"_id":"public/about/index.html","modified":1438086123932,"shasum":"587aa1286676b0f4faa0cf340b9e9b2b32efd4f2"},{"_id":"public/2015/07/28/每日一题-Count-and-Say/index.html","modified":1438086124009,"shasum":"13268c29d32a6044faf9660d3850b3b0ec9b2d95"},{"_id":"public/2015/07/28/每日一题-Compare-Version-Numbers/index.html","modified":1438086124083,"shasum":"d9e521496b386cad56cc033c9b626b6aa9aea28d"},{"_id":"public/2015/07/27/每日一题-Length-of-Last-Word/index.html","modified":1438086124134,"shasum":"b340b1ccd8649dc79bebe0e55f689f2082a58078"},{"_id":"public/2015/07/26/每日一题-Longest-Common-Prefix/index.html","modified":1438086124195,"shasum":"b8e33bde3e85c26d8ca62151c70374fd377b29c6"},{"_id":"public/2015/07/26/每日一题-Roman-to-Integer/index.html","modified":1438086124251,"shasum":"da5fc80d4d0f40a87845d8c68560619158ebb7cd"},{"_id":"public/2015/07/25/取代PPT的mdpress/index.html","modified":1438086124317,"shasum":"19705231c86193ca35f929e9f212075279b4b142"},{"_id":"public/2015/07/25/每日一题-String-to-Integer/index.html","modified":1438086124369,"shasum":"aa9433fdecf193e22a63bd816d45a8bbf4958016"},{"_id":"public/2015/07/25/每日一题-Valid-Palindrome/index.html","modified":1438086124436,"shasum":"da039479717f5f70bf3cf328f0f50e26eef8552d"},{"_id":"public/2015/07/24/每日一题-Valid-Parentheses/index.html","modified":1438086124503,"shasum":"666e26ae76f600c264cfe7f6d4b913395c46a45a"},{"_id":"public/2015/07/24/每日一题-ZigZag-Conversion/index.html","modified":1438086124577,"shasum":"9f4531bf7f66dbadae75c2e60fe1c8d4f4abb9f2"},{"_id":"public/2015/07/23/每日一题-add-Binary/index.html","modified":1438086124636,"shasum":"4e8ab4a96f8e056606873245d0ea33e8a9a4f00f"},{"_id":"public/2015/07/23/IntelliJ-IDEA14-教程/index.html","modified":1438086124706,"shasum":"a86e0d812601d9b3ebc93638880f2891e26ba0d9"},{"_id":"public/2015/07/22/iterm2-zsh-oh-my-zsh-配置/index.html","modified":1438086124777,"shasum":"5226da9bd8676189fef9dec79a6ffb5141949335"},{"_id":"public/2015/07/18/慢跑鞋入门/index.html","modified":1438086124844,"shasum":"fa67caf726e09cc314bfac5d68ede2a7b90177c0"},{"_id":"public/2015/07/10/Mac软件推荐/index.html","modified":1438086124902,"shasum":"a92dc1915a2d48af8fc850a3e02de4764254010f"},{"_id":"public/2015/07/09/利用github和hexo搭建静态博客/index.html","modified":1438086124981,"shasum":"8ab3391c7b81be55fc47d135502187038fba7fd9"},{"_id":"public/2015/07/09/FoldingText工具/index.html","modified":1438086125038,"shasum":"2146c17277299f769d0a7a53cbb8de142e34f9ec"},{"_id":"public/archives/index.html","modified":1438086125109,"shasum":"16c4a7e12fce6941ab535e52ee0e22e06ed3add4"},{"_id":"public/archives/page/2/index.html","modified":1438086125191,"shasum":"796284f675a7c6e430d48da820c8e69bf461799c"},{"_id":"public/archives/page/3/index.html","modified":1438086125269,"shasum":"5173ceb3976ec5c9924a28c40b5a5f14ceee93b3"},{"_id":"public/archives/page/4/index.html","modified":1438086125316,"shasum":"f05c6b73fe74efd201a6f33203a901da302d28f9"},{"_id":"public/archives/2015/index.html","modified":1438086125376,"shasum":"9918650e6be979d253a55622a2a1bd4a9bc3404c"},{"_id":"public/archives/2015/page/2/index.html","modified":1438086125458,"shasum":"92be4db2d91801da5f6a0e3dfa2287ef2c67d2e4"},{"_id":"public/archives/2015/page/3/index.html","modified":1438086125536,"shasum":"033811628008735fcea0f8c740bf7e0506bd1dd0"},{"_id":"public/archives/2015/page/4/index.html","modified":1438086125594,"shasum":"151d72e90de66eb41ef011a9a78d0f0cb8a6216c"},{"_id":"public/archives/2015/07/index.html","modified":1438086125665,"shasum":"be0bdc0f3f5c20cd72eb8253d14b08b005a54ddb"},{"_id":"public/archives/2015/07/page/2/index.html","modified":1438086125734,"shasum":"aa5147c57af0f6cf7e686cbab86a9815d41fad79"},{"_id":"public/archives/2015/07/page/3/index.html","modified":1438086125796,"shasum":"f61c23d5ba5ef5b1eaa877f0169551acedd99119"},{"_id":"public/archives/2015/07/page/4/index.html","modified":1438086125857,"shasum":"e0b8ac0739cf6443152b092bf2a94717f36ac461"},{"_id":"public/categories/code/index.html","modified":1438086125907,"shasum":"7a25e48628843c009c3c919085a0c61b4a217e80"},{"_id":"public/categories/code/page/2/index.html","modified":1438086125956,"shasum":"7c1679e5fc94a628ded439b565744d3194bf632a"},{"_id":"public/categories/life/index.html","modified":1438086126005,"shasum":"28df62c51ddcec5b15fe4c192e4515ab2eac8589"},{"_id":"public/categories/tools/index.html","modified":1438086126055,"shasum":"0a38ed6c2a9481d6d839bb1136761905ea8d6252"},{"_id":"public/categories/hexo/index.html","modified":1438086126093,"shasum":"38fcd2c7d383b4b9f872ee3d545146c8d670e80f"},{"_id":"public/tags/code/index.html","modified":1438086126160,"shasum":"36c75f9a9bc427209f19d77a4e5a47673d4e1858"},{"_id":"public/tags/code/page/2/index.html","modified":1438086126228,"shasum":"01406e39c0c3af225ba6e3d24416ea6ec0c24d48"},{"_id":"public/tags/leetcode/index.html","modified":1438086126274,"shasum":"341548c0b7b2a5bea633bb97424469c82d58b953"},{"_id":"public/tags/leetcode/page/2/index.html","modified":1438086126332,"shasum":"ea177d1c1065fb2f7500e8fda9eb865743e8d46d"},{"_id":"public/tags/life/index.html","modified":1438086126371,"shasum":"6858f54855cf46b9579088bbae252281b7db4d8c"},{"_id":"public/tags/running/index.html","modified":1438086126409,"shasum":"49b8f59b866b047a4cf5722e4cbddd189d969152"},{"_id":"public/tags/tools/index.html","modified":1438086126465,"shasum":"706765f5d78b9d56ae28ac676b455f7d58b4c302"},{"_id":"public/tags/mdpress/index.html","modified":1438086126502,"shasum":"4b5b76657549b9bafba6688538c33106a4657fb1"},{"_id":"public/tags/hexo/index.html","modified":1438086126537,"shasum":"b46c0193c6e3b044770672310f6ff740f04fb4b3"},{"_id":"public/tags/blog/index.html","modified":1438086126575,"shasum":"92e9475dafa3b9802bd162fa14de17c5fdc82741"},{"_id":"public/tags/iterm2/index.html","modified":1438086126620,"shasum":"0e4bf6de1c3e2ecf793808106029e41dd5140933"},{"_id":"public/tags/zsh/index.html","modified":1438086126657,"shasum":"20161f794b135ed734c3820a7a207af175499832"},{"_id":"public/tags/mac/index.html","modified":1438086126696,"shasum":"084fd771081f13b5682f42c9b5d489a223ec8b1c"},{"_id":"public/tags/IntelliJ-IDEA/index.html","modified":1438086126750,"shasum":"a847a972a0f1b72cf72e29671fa72492b0a2708a"},{"_id":"public/tags/FoldingText/index.html","modified":1438086126786,"shasum":"d5ae48be38162581fb3cc2d582292a4d3cc8efe4"},{"_id":"public/index.html","modified":1438086126860,"shasum":"ca314da135880805b89dde2ffa65af199b3067d5"},{"_id":"public/page/2/index.html","modified":1438086126939,"shasum":"d27710d833e27a74c274dcb1def0c13f3aaac80e"},{"_id":"public/page/3/index.html","modified":1438086126996,"shasum":"b973eab02e3d55f22347a0dd0dbd0b6525d69208"},{"_id":"public/page/4/index.html","modified":1438086127060,"shasum":"16c17560870b6158d7929ace8e7a66470dc131f7"}],"Category":[{"name":"code","_id":"cicnbcg3t0006b0xs96ckra3m"},{"name":"life","_id":"cicnbcg4v001db0xsgm8rrk66"},{"name":"tools","_id":"cicnbcg4y001kb0xsvpjnd495"},{"name":"hexo","_id":"cicnbcg51001rb0xs9kzkbvwo"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n\n</html>\n","date":"2015-07-08T05:56:00.000Z","updated":"2015-07-08T05:56:00.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cicnbcg0f0000b0xsqcldwduw"},{"title":"All tags","date":"2015-07-08T05:25:01.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: All tags\ndate: 2015-07-08 13:25:01\ntype: \"tags\"\ncomments: false\n---\n","updated":"2015-07-08T05:26:59.000Z","path":"tags/index.html","layout":"page","_id":"cicnbcg260001b0xs9ijqrbdo"},{"title":"guestbook","date":"2015-07-09T03:57:43.000Z","type":"guestbook","_content":"\n<blockquote class=\"blockquote-center\">念念不忘，必有回报</blockquote>\n\n>最近访客\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\">\n</div>\n\n<br>\n","source":"guestbook/index.md","raw":"title: guestbook\ndate: 2015-07-09 11:57:43\ntype: guestbook\n---\n\n<blockquote class=\"blockquote-center\">念念不忘，必有回报</blockquote>\n\n>最近访客\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\">\n</div>\n\n<br>\n","updated":"2015-07-09T09:44:49.000Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"cicnbcg350002b0xs5b1lneds"},{"title":"categories","date":"2015-07-08T05:31:12.000Z","type":"categories","commets":false,"_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-07-08 13:31:12\ntype: \"categories\"\ncommets: false\n---\n","updated":"2015-07-08T05:31:57.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cicnbcg3k0003b0xs3mkrz5az"},{"title":"about","date":"2015-07-08T05:45:13.000Z","type":"about","_content":"\n# 缘起\n<blockquote class=\"blockquote-center\">\n爱工具 爱折腾 爱瞎想 爱装13\n</blockquote>\n\n# 转承\n<blockquote class=\"blockquote-center\">\n应该要拼搏一把，但忠于本心\n</blockquote>\n\n# 曲落 \n<blockquote class=\"blockquote-center\">\n未完待续\n</blockquote>","source":"about/index.md","raw":"title: about\ndate: 2015-07-08 13:45:13\ntype: about\n---\n\n# 缘起\n<blockquote class=\"blockquote-center\">\n爱工具 爱折腾 爱瞎想 爱装13\n</blockquote>\n\n# 转承\n<blockquote class=\"blockquote-center\">\n应该要拼搏一把，但忠于本心\n</blockquote>\n\n# 曲落 \n<blockquote class=\"blockquote-center\">\n未完待续\n</blockquote>","updated":"2015-07-09T04:17:49.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cicnbcg3m0004b0xs0izenwxe"}],"Post":[{"title":"每日一题:add Binary","date":"2015-07-23T08:38:40.000Z","description":"每天一道LeetCode","_content":"\n## 题目\n\n>Given two binary strings, return their sum (also a binary string).\n\n>For example, a = \"11\", b = \"1\", Return \"100\".\n\n## 解答\n\n```\npublic class Solution {\n    public String addBinary(String a, String b) {\n        \n        int acur = a.length() - 1;\n        int bcur = b.length() - 1;\n\n        StringBuffer sb = new StringBuffer();\n\n        boolean flag = false;\n\n        while(acur >=0 || bcur >= 0){\n            int anum = (acur >= 0 ? a.charAt(acur) - '0' : 0);\n            int bnum = (bcur >= 0 ? b.charAt(bcur) - '0' : 0);\n            int res = anum + bnum;\n            if (flag == true) {\n                res++;\n                flag = false;\n            }\n            if (res > 1) {\n                res = res - 2;\n                flag = true;\n            }\n            sb.append(res);\n            acur--;\n            bcur--;\n        }\n\n        if(flag == true){\n            sb.append('1');\n        }\n        \n        return sb.reverse().toString();\n    }\n}\n```\n\n## 注解\n\n没啥好说的，flag标志位标识是否进位，字符串从后往前依次取字符相加，并通过StringBuider追加，最后翻转字符串，返回结果。\n\n## 反思\n\nCharAt()函数的底层实现\n\n```\npublic char charAt(int index) {\n    if ((index < 0) || (index >= count)) {\n            throw new StringIndexOutOfBoundsException(index);\n    }\n    return value[index + offset];\n}\n```\n\nStringBuilder与StringBuffer\n\n> StringBuilder vs StringBuffer: StringBuffer is synchronized, which means it is thread-safe but slower than StringBuilder.   \n","source":"_posts/每日一题-add-Binary.md","raw":"title: '每日一题:add Binary'\ndate: 2015-07-23 16:38:40\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道LeetCode\n---\n\n## 题目\n\n>Given two binary strings, return their sum (also a binary string).\n\n>For example, a = \"11\", b = \"1\", Return \"100\".\n\n## 解答\n\n```\npublic class Solution {\n    public String addBinary(String a, String b) {\n        \n        int acur = a.length() - 1;\n        int bcur = b.length() - 1;\n\n        StringBuffer sb = new StringBuffer();\n\n        boolean flag = false;\n\n        while(acur >=0 || bcur >= 0){\n            int anum = (acur >= 0 ? a.charAt(acur) - '0' : 0);\n            int bnum = (bcur >= 0 ? b.charAt(bcur) - '0' : 0);\n            int res = anum + bnum;\n            if (flag == true) {\n                res++;\n                flag = false;\n            }\n            if (res > 1) {\n                res = res - 2;\n                flag = true;\n            }\n            sb.append(res);\n            acur--;\n            bcur--;\n        }\n\n        if(flag == true){\n            sb.append('1');\n        }\n        \n        return sb.reverse().toString();\n    }\n}\n```\n\n## 注解\n\n没啥好说的，flag标志位标识是否进位，字符串从后往前依次取字符相加，并通过StringBuider追加，最后翻转字符串，返回结果。\n\n## 反思\n\nCharAt()函数的底层实现\n\n```\npublic char charAt(int index) {\n    if ((index < 0) || (index >= count)) {\n            throw new StringIndexOutOfBoundsException(index);\n    }\n    return value[index + offset];\n}\n```\n\nStringBuilder与StringBuffer\n\n> StringBuilder vs StringBuffer: StringBuffer is synchronized, which means it is thread-safe but slower than StringBuilder.   \n","slug":"每日一题-add-Binary","published":1,"updated":"2015-07-23T08:56:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg3p0005b0xslm8u0ord"},{"title":"每日一题:ZigZag-Conversion","date":"2015-07-24T07:28:30.000Z","description":"每天一道LeetCode","_content":"\n## 题目\n\n> The string `\"PAYPALISHIRING\"` is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\n>```\nP   A   H   N\nA P L S I I G\nY   I   R\n```\n\n>And then read line by line: `\"PAHNAPLSIIGYIR\"`\n\n>Write the code that will take a string and make this conversion given a number of rows:\n\n>```\nstring convert(string text, int nRows);\n```\n`convert(\"PAYPALISHIRING\", 3)` should return `\"PAHNAPLSIIGYIR\"`.\n\n## 解答\n\n```\npublic String convert(String s, int nRows){\n        if(nRows == 1){\n            return s;\n        }\n\n        StringBuffer sb = new StringBuffer();\n        int step = 2 * nRows - 2;\n        int length = s.length();\n\n        for(int i = 0; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        for(int i = 1; i  < nRows - 1; i++){\n            for(int  j = i; j < length; j+= step){\n                sb.append(s.charAt(j));\n                if(j + step - 2 * i < length){\n                    sb.append(s.charAt(j + step - 2 * i));\n                }\n            }\n        }\n\n        for(int i = nRows - 1; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        return sb.toString();\n    }\n```\n\n## 注解\n\n一般性的找规律题。\n\n按照生成的顺序，发现首行和末行都是以`2 * nRows - 2`增加的。\n\n中间`nRow - 2`行，在`2 * nRow - 2`步数增加的情况下，加入`2 * nRows - 2 - 2 * (nRow - 2)`小步数增加。\n\n","source":"_posts/每日一题-ZigZag-Conversion.md","raw":"title: 每日一题:ZigZag-Conversion\ndate: 2015-07-24 15:28:30\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道LeetCode\n---\n\n## 题目\n\n> The string `\"PAYPALISHIRING\"` is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\n>```\nP   A   H   N\nA P L S I I G\nY   I   R\n```\n\n>And then read line by line: `\"PAHNAPLSIIGYIR\"`\n\n>Write the code that will take a string and make this conversion given a number of rows:\n\n>```\nstring convert(string text, int nRows);\n```\n`convert(\"PAYPALISHIRING\", 3)` should return `\"PAHNAPLSIIGYIR\"`.\n\n## 解答\n\n```\npublic String convert(String s, int nRows){\n        if(nRows == 1){\n            return s;\n        }\n\n        StringBuffer sb = new StringBuffer();\n        int step = 2 * nRows - 2;\n        int length = s.length();\n\n        for(int i = 0; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        for(int i = 1; i  < nRows - 1; i++){\n            for(int  j = i; j < length; j+= step){\n                sb.append(s.charAt(j));\n                if(j + step - 2 * i < length){\n                    sb.append(s.charAt(j + step - 2 * i));\n                }\n            }\n        }\n\n        for(int i = nRows - 1; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        return sb.toString();\n    }\n```\n\n## 注解\n\n一般性的找规律题。\n\n按照生成的顺序，发现首行和末行都是以`2 * nRows - 2`增加的。\n\n中间`nRow - 2`行，在`2 * nRow - 2`步数增加的情况下，加入`2 * nRows - 2 - 2 * (nRow - 2)`小步数增加。\n\n","slug":"每日一题-ZigZag-Conversion","published":1,"updated":"2015-07-24T07:43:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg3x000cb0xsa2q2flwh"},{"title":"每日一题:Valid-Parentheses","date":"2015-07-24T10:24:27.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n>Given a string containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\n>The brackets must close in the correct order, `\"()\"` and `\"()[]{}\"` are all valid but `\"(]\"` and `\"([)]\"` are not.\n\n## 解答\n```\npublic boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n\n        for(int i = 0; i < s.length(); i++){\n            char ch = s.charAt(i);\n            switch (ch){\n                case '{':\n                case '(':\n                case '[': stack.push(ch) ; continue;\n                case ')': if(stack.isEmpty() || stack.pop().charValue() != '(') return false; else continue;\n                case ']': if(stack.isEmpty() || stack.pop().charValue() != '[') return false; else continue;\n                case '}': if(stack.isEmpty() || stack.pop().charValue() != '{') return false; else continue;\n                default:\n            }\n        }\n\n        if(stack.isEmpty())\n        {\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n```\n\n## 注解\n\n利用堆栈的特性，每次遇到`{` `[` `(`就入栈，遇到`}` `]` `)`就出栈，匹配当前的字符。\n\n特别注意下面两种情况：\n\n+ `input: \"]]]\"`，这个通过遇到相对应字符时判断堆栈是否为空，为空就直接返回`false`.\n+ `input: \"[[[\"`，这个通过最后判断堆栈是否为空，一旦不为空就返回`false`.\n\n## 反思\n\n+ Java集合类中Stack的用法:\n\n    ```\n    package java.util;\n        \n    public class Stack<E> extends Vector<E> {\n    // 版本ID。这个用于版本升级控制，这里不须理会！\n    private static final long serialVersionUID = 1224463164541339165L;\n        \n    // 构造函数\n    public Stack() {\n    }\n        \n    // push函数：将元素存入栈顶\n    public E push(E item) {\n        // 将元素存入栈顶。\n        // addElement()的实现在Vector.java中\n        addElement(item);\n        \n        return item;\n    }\n        \n    // pop函数：返回栈顶元素，并将其从栈中删除\n    public synchronized E pop() {\n        E    obj;\n        int    len = size();\n        \n        obj = peek();\n        // 删除栈顶元素，removeElementAt()的实现在Vector.java中\n        removeElementAt(len - 1);\n        \n        return obj;\n    }\n        \n    // peek函数：返回栈顶元素，不执行删除操作\n    public synchronized E peek() {\n        int    len = size();\n        \n        if (len == 0)\n            throw new EmptyStackException();\n        // 返回栈顶元素，elementAt()具体实现在Vector.java中\n        return elementAt(len - 1);\n    }\n        \n    // 栈是否为空\n    public boolean empty() {\n        return size() == 0;\n    }\n        \n    // 查找“元素o”在栈中的位置：由栈底向栈顶方向数\n    public synchronized int search(Object o) {\n        // 获取元素索引，elementAt()具体实现在Vector.java中\n        int i = lastIndexOf(o);\n        \n        if (i >= 0) {\n            return size() - i;\n        }\n        return -1;\n    }\n    }\n    ```\n\n+ Java包装类\n\n| 基本类型 | 包装类 |\n|:-------|:-----:|\n|byte | Byte |\n|boolean | Boolean| \n|short|Short|\n|char|Character|\n|int|Integer|\n|long|Long|\n|float|Float|\n|double|Double|\n\n\n\n\n","source":"_posts/每日一题-Valid-Parentheses.md","raw":"title: '每日一题:Valid-Parentheses'\ndate: 2015-07-24 18:24:27\ntags: [code, leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n>Given a string containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\n>The brackets must close in the correct order, `\"()\"` and `\"()[]{}\"` are all valid but `\"(]\"` and `\"([)]\"` are not.\n\n## 解答\n```\npublic boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n\n        for(int i = 0; i < s.length(); i++){\n            char ch = s.charAt(i);\n            switch (ch){\n                case '{':\n                case '(':\n                case '[': stack.push(ch) ; continue;\n                case ')': if(stack.isEmpty() || stack.pop().charValue() != '(') return false; else continue;\n                case ']': if(stack.isEmpty() || stack.pop().charValue() != '[') return false; else continue;\n                case '}': if(stack.isEmpty() || stack.pop().charValue() != '{') return false; else continue;\n                default:\n            }\n        }\n\n        if(stack.isEmpty())\n        {\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n```\n\n## 注解\n\n利用堆栈的特性，每次遇到`{` `[` `(`就入栈，遇到`}` `]` `)`就出栈，匹配当前的字符。\n\n特别注意下面两种情况：\n\n+ `input: \"]]]\"`，这个通过遇到相对应字符时判断堆栈是否为空，为空就直接返回`false`.\n+ `input: \"[[[\"`，这个通过最后判断堆栈是否为空，一旦不为空就返回`false`.\n\n## 反思\n\n+ Java集合类中Stack的用法:\n\n    ```\n    package java.util;\n        \n    public class Stack<E> extends Vector<E> {\n    // 版本ID。这个用于版本升级控制，这里不须理会！\n    private static final long serialVersionUID = 1224463164541339165L;\n        \n    // 构造函数\n    public Stack() {\n    }\n        \n    // push函数：将元素存入栈顶\n    public E push(E item) {\n        // 将元素存入栈顶。\n        // addElement()的实现在Vector.java中\n        addElement(item);\n        \n        return item;\n    }\n        \n    // pop函数：返回栈顶元素，并将其从栈中删除\n    public synchronized E pop() {\n        E    obj;\n        int    len = size();\n        \n        obj = peek();\n        // 删除栈顶元素，removeElementAt()的实现在Vector.java中\n        removeElementAt(len - 1);\n        \n        return obj;\n    }\n        \n    // peek函数：返回栈顶元素，不执行删除操作\n    public synchronized E peek() {\n        int    len = size();\n        \n        if (len == 0)\n            throw new EmptyStackException();\n        // 返回栈顶元素，elementAt()具体实现在Vector.java中\n        return elementAt(len - 1);\n    }\n        \n    // 栈是否为空\n    public boolean empty() {\n        return size() == 0;\n    }\n        \n    // 查找“元素o”在栈中的位置：由栈底向栈顶方向数\n    public synchronized int search(Object o) {\n        // 获取元素索引，elementAt()具体实现在Vector.java中\n        int i = lastIndexOf(o);\n        \n        if (i >= 0) {\n            return size() - i;\n        }\n        return -1;\n    }\n    }\n    ```\n\n+ Java包装类\n\n| 基本类型 | 包装类 |\n|:-------|:-----:|\n|byte | Byte |\n|boolean | Boolean| \n|short|Short|\n|char|Character|\n|int|Integer|\n|long|Long|\n|float|Float|\n|double|Double|\n\n\n\n\n","slug":"每日一题-Valid-Parentheses","published":1,"updated":"2015-07-25T01:06:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg40000gb0xs11z3gvie"},{"title":"每日一题:Valid-Palindrome","date":"2015-07-25T02:56:27.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n\n>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\n>For example,\n`\"A man, a plan, a canal: Panama\"` is a palindrome.\n`\"race a car\"` is not a palindrome.\n\n>For the purpose of this problem, we define empty string as valid palindrome.\n\n## 解答\n\n```\npublic class Solution {\n    public boolean isPalindrome(String s) {\n       s = s.toLowerCase();\n        int low = 0;\n        int high = s.length() - 1;\n        while (low <= high){\n            char ch1 = s.charAt(low);\n            char ch2 = s.charAt(high);\n\n            if(ch1 > 'z' || (ch1<'a' &&  ch1 > '9') || ch1 < '0'){\n                low++;\n            }\n            if(ch2 > 'z' || (ch2<'a' &&  ch2 > '9') || ch2 < '0'){\n                high--;\n            }\n            if ((ch1 >= 'a' && ch1 <= 'z' || ch1 >= '0' && ch1 <='9' )&&(ch2 >= 'a' && ch2 <= 'z' || ch2 >= '0' && ch2 <='9')){\n                if (ch1 != ch2){\n                    return false;\n                }else{\n                low++;\n                high--;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n```\n\n## 注解\n\n将字符串转换为小写，设置头尾指针，遇到不是`0~9` `a~z`就跳过，否则比较头尾指针的值，不匹配就跳出循环，返回`false`.\n\n\n","source":"_posts/每日一题-Valid-Palindrome.md","raw":"title: '每日一题:Valid-Palindrome'\ndate: 2015-07-25 10:56:27\ntags: [code, leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n\n>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\n>For example,\n`\"A man, a plan, a canal: Panama\"` is a palindrome.\n`\"race a car\"` is not a palindrome.\n\n>For the purpose of this problem, we define empty string as valid palindrome.\n\n## 解答\n\n```\npublic class Solution {\n    public boolean isPalindrome(String s) {\n       s = s.toLowerCase();\n        int low = 0;\n        int high = s.length() - 1;\n        while (low <= high){\n            char ch1 = s.charAt(low);\n            char ch2 = s.charAt(high);\n\n            if(ch1 > 'z' || (ch1<'a' &&  ch1 > '9') || ch1 < '0'){\n                low++;\n            }\n            if(ch2 > 'z' || (ch2<'a' &&  ch2 > '9') || ch2 < '0'){\n                high--;\n            }\n            if ((ch1 >= 'a' && ch1 <= 'z' || ch1 >= '0' && ch1 <='9' )&&(ch2 >= 'a' && ch2 <= 'z' || ch2 >= '0' && ch2 <='9')){\n                if (ch1 != ch2){\n                    return false;\n                }else{\n                low++;\n                high--;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n```\n\n## 注解\n\n将字符串转换为小写，设置头尾指针，遇到不是`0~9` `a~z`就跳过，否则比较头尾指针的值，不匹配就跳出循环，返回`false`.\n\n\n","slug":"每日一题-Valid-Palindrome","published":1,"updated":"2015-07-25T03:01:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg42000kb0xse7629tsi"},{"title":"每日一题:String-to-Integer","date":"2015-07-25T07:55:29.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n>Implement atoi to convert a string to an integer.\n\n>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\n\n>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.\n    \n>+ The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\n    \n>+ The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\n    \n>+ If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\n    \n>+ If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\n\n## 解答\n\n```\npublic class Solution {\n    public int myAtoi(String str) {\n        str = str.trim();\n        int res = 0;\n        int index = 0;\n        boolean flag = false;\n\n        if(str.length() == 0) return res;\n       \n        if(str.charAt(0) == '+' || str.charAt(0) == '-'){\n            index = 1;\n            if(str.charAt(0) == '-') flag = true;\n        }\n\n        for(int i = index; i < str.length(); i++){\n            char ch = str.charAt(i);\n\n            if(ch < '0' || ch > '9'){\n                break;\n            }else{\n                int num = ch - '0';\n                if(flag && res>-((Integer.MIN_VALUE+num)/10)) return Integer.MIN_VALUE;\n                else if(!flag && res>(Integer.MAX_VALUE-num)/10) return Integer.MAX_VALUE;\n                res = res * 10 + num;\n            }\n        }\n\n        if(flag == true) res = - res;\n        \n        return res;\n    }\n}\n\n```\n\n## 注解\n经典的atoi问题，奈何没有参加过ACM，对于部分情况考虑不周。\n\n+ String串首尾去空\n+ 对于空串，单独判断\n+ 首位出现符号位，需要考虑\n+ 超出`Int`范围的溢出处理\n\n## 反思\n\n对于某些经典问题，需要通过实际编程，并且通过一定限制的测试用例，才能了解问题真正的含义。\n","source":"_posts/每日一题-String-to-Integer.md","raw":"title: '每日一题:String-to-Integer'\ndate: 2015-07-25 15:55:29\ntags: [code, leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n>Implement atoi to convert a string to an integer.\n\n>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\n\n>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.\n    \n>+ The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\n    \n>+ The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\n    \n>+ If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\n    \n>+ If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\n\n## 解答\n\n```\npublic class Solution {\n    public int myAtoi(String str) {\n        str = str.trim();\n        int res = 0;\n        int index = 0;\n        boolean flag = false;\n\n        if(str.length() == 0) return res;\n       \n        if(str.charAt(0) == '+' || str.charAt(0) == '-'){\n            index = 1;\n            if(str.charAt(0) == '-') flag = true;\n        }\n\n        for(int i = index; i < str.length(); i++){\n            char ch = str.charAt(i);\n\n            if(ch < '0' || ch > '9'){\n                break;\n            }else{\n                int num = ch - '0';\n                if(flag && res>-((Integer.MIN_VALUE+num)/10)) return Integer.MIN_VALUE;\n                else if(!flag && res>(Integer.MAX_VALUE-num)/10) return Integer.MAX_VALUE;\n                res = res * 10 + num;\n            }\n        }\n\n        if(flag == true) res = - res;\n        \n        return res;\n    }\n}\n\n```\n\n## 注解\n经典的atoi问题，奈何没有参加过ACM，对于部分情况考虑不周。\n\n+ String串首尾去空\n+ 对于空串，单独判断\n+ 首位出现符号位，需要考虑\n+ 超出`Int`范围的溢出处理\n\n## 反思\n\n对于某些经典问题，需要通过实际编程，并且通过一定限制的测试用例，才能了解问题真正的含义。\n","slug":"每日一题-String-to-Integer","published":1,"updated":"2015-07-25T08:06:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg45000ob0xsi5pi2vcb"},{"title":"每日一题:Roman-to-Integer ","date":"2015-07-26T01:36:31.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n>Given a roman numeral, convert it to an integer.\n\n>Input is guaranteed to be within the range from 1 to 3999.\n\n## 解答\n\n```\npublic class Solution {\n    public int romanToInt(String s) {\n        int res = 0;\n\n        int pre = 1001;\n        int next = 0;\n        int length = s.length();\n\n        for(int i = 0; i < length; i++){\n            switch(s.charAt(i)){\n                case 'I': next = 1; break;\n                case 'V': next = 5; break;\n                case 'X': next = 10; break;\n                case 'L': next = 50; break;\n                case 'C': next = 100; break;\n                case 'D': next = 500; break;\n                case 'M': next = 1000;break;\n                default: return 0;\n            }\n            if(next <= pre){\n                res += next;\n                pre = next;\n            }\n            if(next > pre){\n                res = res - 2 * pre + next;\n                pre = next;\n            }\n        }\n        return res;\n    }\n}\n```\n\n## 注解\n\n罗马数字主要包括`I` `V` `X` `L` `C` `D` `M`\n\n对应表如下：\n\n|\t\tI\t|\t\tV\t|\t\tX\t|\t\tL\t|\t\tC\t|\t\tD\t|\t\tM\t|\n|:------|:------|:------|:------|:------|:------|:------|\n|\t\t1\t|\t\t5\t|\t\t10\t|\t\t50\t|\t100\t\t|\t\t500\t|\t\t1000\t|\n\n规则：\n\n+ 相同的数字连写，所表示的数等于这些数字相加得到的数。\n+ 小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数。\n+ 小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数。\n+ 正常使用时连写的数字重复不得超过三次。\n+ 在一个数的上面画一条横线，表示这个数增值1000倍。\n\n思路：用一个指针指向当前指针的前驱，然后和前驱比较，当前指针代表的罗马数字小于等于前驱，就直接相加；如果大于前驱就加上`next - pre - pre`。\n\n\n\n\n\n","source":"_posts/每日一题-Roman-to-Integer.md","raw":"title: '每日一题:Roman-to-Integer '\ndate: 2015-07-26 09:36:31\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n>Given a roman numeral, convert it to an integer.\n\n>Input is guaranteed to be within the range from 1 to 3999.\n\n## 解答\n\n```\npublic class Solution {\n    public int romanToInt(String s) {\n        int res = 0;\n\n        int pre = 1001;\n        int next = 0;\n        int length = s.length();\n\n        for(int i = 0; i < length; i++){\n            switch(s.charAt(i)){\n                case 'I': next = 1; break;\n                case 'V': next = 5; break;\n                case 'X': next = 10; break;\n                case 'L': next = 50; break;\n                case 'C': next = 100; break;\n                case 'D': next = 500; break;\n                case 'M': next = 1000;break;\n                default: return 0;\n            }\n            if(next <= pre){\n                res += next;\n                pre = next;\n            }\n            if(next > pre){\n                res = res - 2 * pre + next;\n                pre = next;\n            }\n        }\n        return res;\n    }\n}\n```\n\n## 注解\n\n罗马数字主要包括`I` `V` `X` `L` `C` `D` `M`\n\n对应表如下：\n\n|\t\tI\t|\t\tV\t|\t\tX\t|\t\tL\t|\t\tC\t|\t\tD\t|\t\tM\t|\n|:------|:------|:------|:------|:------|:------|:------|\n|\t\t1\t|\t\t5\t|\t\t10\t|\t\t50\t|\t100\t\t|\t\t500\t|\t\t1000\t|\n\n规则：\n\n+ 相同的数字连写，所表示的数等于这些数字相加得到的数。\n+ 小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数。\n+ 小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数。\n+ 正常使用时连写的数字重复不得超过三次。\n+ 在一个数的上面画一条横线，表示这个数增值1000倍。\n\n思路：用一个指针指向当前指针的前驱，然后和前驱比较，当前指针代表的罗马数字小于等于前驱，就直接相加；如果大于前驱就加上`next - pre - pre`。\n\n\n\n\n\n","slug":"每日一题-Roman-to-Integer","published":1,"updated":"2015-07-26T01:49:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg49000sb0xs7gmghrb6"},{"title":"每日一题:Longest-Common-Prefix ","date":"2015-07-26T09:42:14.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n\n>Write a function to find the longest common prefix string amongst an array of strings.\n\n## 解答\n\n```\npublic class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0){\n            return \"\";\n        }\n        \n        int index = 0;\n        StringBuilder sb = new StringBuilder();\n        boolean flag = true;\n       \n        while (true) {\n            char pre;\n            if(index < strs[0].length()){\n                pre = strs[0].charAt(index);\n            }else{\n                flag = false;\n                break;\n            }\n            for(int i = 0; i < strs.length; i++){\n                if(index < strs[i].length() && strs[i].charAt(index) == pre){\n                    pre = strs[i].charAt(index);\n                }else{\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag == true){\n                sb.append(pre);\n                index++;\n            }else{\n                break;\n            }\n        }\n        return sb.toString();\n    }\n}\n```\n\n## 注解\n\n遍历每个数组的每一位的字符值，比较是否相等。相等就继续匹配下一位的字符比较。通过对边界值的判断来跳出循环。\n\n\n","source":"_posts/每日一题-Longest-Common-Prefix.md","raw":"title: '每日一题:Longest-Common-Prefix '\ndate: 2015-07-26 17:42:14\ntags: [code,leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n\n>Write a function to find the longest common prefix string amongst an array of strings.\n\n## 解答\n\n```\npublic class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0){\n            return \"\";\n        }\n        \n        int index = 0;\n        StringBuilder sb = new StringBuilder();\n        boolean flag = true;\n       \n        while (true) {\n            char pre;\n            if(index < strs[0].length()){\n                pre = strs[0].charAt(index);\n            }else{\n                flag = false;\n                break;\n            }\n            for(int i = 0; i < strs.length; i++){\n                if(index < strs[i].length() && strs[i].charAt(index) == pre){\n                    pre = strs[i].charAt(index);\n                }else{\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag == true){\n                sb.append(pre);\n                index++;\n            }else{\n                break;\n            }\n        }\n        return sb.toString();\n    }\n}\n```\n\n## 注解\n\n遍历每个数组的每一位的字符值，比较是否相等。相等就继续匹配下一位的字符比较。通过对边界值的判断来跳出循环。\n\n\n","slug":"每日一题-Longest-Common-Prefix","published":1,"updated":"2015-07-26T09:47:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4c000wb0xsfs1l3cts"},{"title":"每日一题:Length-of-Last-Word","date":"2015-07-27T04:37:22.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n>Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\n\n>If the last word does not exist, return 0.\n\n>Note: A word is defined as a character sequence consists of non-space characters only.\n\n>For example, \nGiven s = \"Hello World\",\nreturn 5.\n\n## 解答\n\n```\npublic class Solution {\n    public int lengthOfLastWord(String s) {\n        s = s.trim();\n        s = s.toLowerCase();\n        int length = 0;\n        \n        if (s.length() == 0) {\n            return 0;\n        }\n       \n        for (int i = s.length() - 1; i >= 0; i--) {\n            char ch = s.charAt(i);\n            if (ch >= 'a' && ch <= 'z') {\n                length++;\n            }\n            else if (ch == ' ') {\n                break;\n            }else {\n                return 0;\n            }\n        }\n        return length;\n    }\n}\n```\n\n## 注解\n用`split()\u0010`切词，然后对字符数组最后一个判断，效率有点低。\n\n直接从最后一位开始遍历，遇到空格就返回`length`，遇到字符就让length加1，遇到非字符和空格就返回`0`。\n\n\n## 反思(转载)\n\n\n在java.lang包中有String.split()方法的原型是：\n\n`public String[] split(String regex, int limit)`\n\nsplit函数是用于使用特定的切割符(regex)来分隔字符串成一个字符串数组，函数返回是一个数组。在其中每个出现regex的位置都要进行分解。\n\n需要注意是有以下几点:\n\n+ regex是可选项。字符串或正则表达式对象，它标识了分隔字符串时使用的是一个还是多个字符。如果忽略该选项，返回包含整个字符串的单一元素数组。\n+ limit也是可选项。该值用来限制返回数组中的元素个数。\n+ 要注意转义字符：“.”和“|”都是转义字符，必须得加\"\\\\\"。同理：*和+也是如此的。\n+ 如果用“.”作为分隔的话，必须是如下写法:String.split(\"\\\\.\"),这样才能正确的分隔开，不能用String.split(\".\");如果用“|”作为分隔的话，必须是如下写法:String.split(\"\\\\|\"),这样才能正确的分隔开，不能用String.split(\"|\");\n+ 如果在一个字符串中有多个分隔符，可以用“|”作为连字符，比如：“acountId=? and act_id =? or extra=?”,把三个都分隔出来，可以用\nString.split(\"and|or\");\n\nsplit函数结果与regex密切相关，常见的几种情况如下所示：\n\n```\npublic class SplitTest {\n\tpublic static void main(String[] args) {\n\t\tString str1 = \"a-b\";\t\t\n\t\tString str2 = \"a-b-\";\n\t\tString str3 = \"-a-b\";\n\t\tString str4 = \"-a-b-\";\n\t\tString str5 = \"a\";\n\t\tString str6 = \"-\";\n\t\tString str7 = \"--\";\n\t\tString str8 = \"\";\n\t\t\n\t\tsplit(str1);\n\t\tsplit(str2);\n\t\tsplit(str3);\n\t\tsplit(str4);\n\t\tsplit(str5);\n\t\tsplit(str6);\n\t\tsplit(str7);\n\t\tsplit(str8);\n\t}\n\tpublic static void split(String demo){\n\t\tString[] array = demo.split(\"-\");\n\t\tint len = array.length;\n\t\tSystem.out.print(\"\\\"\" + demo + \"\\\" 分割后的长度为：\" + len);\n\t\tif(len >= 0)\n\t\t{\n\t\t\tSystem.out.print(\",分割后的结果为：\");\n\t\t\tfor(int i=0; i<len; i++)\n\t\t\t{\n\t\t\t\tSystem.out.print(\" \\\"\"+array[i]+\"\\\"\");\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println();\n\t}\n}\n```\n---\n运行结果为：\n\n\"a-b\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"a-b-\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"-a-b\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"-a-b-\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"a\" 分割后的长度为：1,分割后的结果为:\"a\"\n\n\"-\" 分割后的长度为：0,分割后的结果为:\n\n\"--\" 分割后的长度为：0,分割后的结果为:\n\n\"\" 分割后的长度为：1,分割后的结果为:\"\"\n\n由此可以得出来：\n\n+ 当字符串只包含分隔符时，返回数组没有元素；\n+ 当字符串不包含分隔符时，返回数组只包含一个元素（该字符串本身）；\n+ 字符串最尾部出现的分隔符可以看成不存在，不影响字符串的分隔；\n+ 字符串最前端出现的分隔符将分隔出一个空字符串以及剩下的部分的正常分隔；\n\n","source":"_posts/每日一题-Length-of-Last-Word.md","raw":"title: '每日一题:Length-of-Last-Word'\ndate: 2015-07-27 12:37:22\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n>Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\n\n>If the last word does not exist, return 0.\n\n>Note: A word is defined as a character sequence consists of non-space characters only.\n\n>For example, \nGiven s = \"Hello World\",\nreturn 5.\n\n## 解答\n\n```\npublic class Solution {\n    public int lengthOfLastWord(String s) {\n        s = s.trim();\n        s = s.toLowerCase();\n        int length = 0;\n        \n        if (s.length() == 0) {\n            return 0;\n        }\n       \n        for (int i = s.length() - 1; i >= 0; i--) {\n            char ch = s.charAt(i);\n            if (ch >= 'a' && ch <= 'z') {\n                length++;\n            }\n            else if (ch == ' ') {\n                break;\n            }else {\n                return 0;\n            }\n        }\n        return length;\n    }\n}\n```\n\n## 注解\n用`split()\u0010`切词，然后对字符数组最后一个判断，效率有点低。\n\n直接从最后一位开始遍历，遇到空格就返回`length`，遇到字符就让length加1，遇到非字符和空格就返回`0`。\n\n\n## 反思(转载)\n\n\n在java.lang包中有String.split()方法的原型是：\n\n`public String[] split(String regex, int limit)`\n\nsplit函数是用于使用特定的切割符(regex)来分隔字符串成一个字符串数组，函数返回是一个数组。在其中每个出现regex的位置都要进行分解。\n\n需要注意是有以下几点:\n\n+ regex是可选项。字符串或正则表达式对象，它标识了分隔字符串时使用的是一个还是多个字符。如果忽略该选项，返回包含整个字符串的单一元素数组。\n+ limit也是可选项。该值用来限制返回数组中的元素个数。\n+ 要注意转义字符：“.”和“|”都是转义字符，必须得加\"\\\\\"。同理：*和+也是如此的。\n+ 如果用“.”作为分隔的话，必须是如下写法:String.split(\"\\\\.\"),这样才能正确的分隔开，不能用String.split(\".\");如果用“|”作为分隔的话，必须是如下写法:String.split(\"\\\\|\"),这样才能正确的分隔开，不能用String.split(\"|\");\n+ 如果在一个字符串中有多个分隔符，可以用“|”作为连字符，比如：“acountId=? and act_id =? or extra=?”,把三个都分隔出来，可以用\nString.split(\"and|or\");\n\nsplit函数结果与regex密切相关，常见的几种情况如下所示：\n\n```\npublic class SplitTest {\n\tpublic static void main(String[] args) {\n\t\tString str1 = \"a-b\";\t\t\n\t\tString str2 = \"a-b-\";\n\t\tString str3 = \"-a-b\";\n\t\tString str4 = \"-a-b-\";\n\t\tString str5 = \"a\";\n\t\tString str6 = \"-\";\n\t\tString str7 = \"--\";\n\t\tString str8 = \"\";\n\t\t\n\t\tsplit(str1);\n\t\tsplit(str2);\n\t\tsplit(str3);\n\t\tsplit(str4);\n\t\tsplit(str5);\n\t\tsplit(str6);\n\t\tsplit(str7);\n\t\tsplit(str8);\n\t}\n\tpublic static void split(String demo){\n\t\tString[] array = demo.split(\"-\");\n\t\tint len = array.length;\n\t\tSystem.out.print(\"\\\"\" + demo + \"\\\" 分割后的长度为：\" + len);\n\t\tif(len >= 0)\n\t\t{\n\t\t\tSystem.out.print(\",分割后的结果为：\");\n\t\t\tfor(int i=0; i<len; i++)\n\t\t\t{\n\t\t\t\tSystem.out.print(\" \\\"\"+array[i]+\"\\\"\");\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println();\n\t}\n}\n```\n---\n运行结果为：\n\n\"a-b\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"a-b-\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"-a-b\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"-a-b-\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"a\" 分割后的长度为：1,分割后的结果为:\"a\"\n\n\"-\" 分割后的长度为：0,分割后的结果为:\n\n\"--\" 分割后的长度为：0,分割后的结果为:\n\n\"\" 分割后的长度为：1,分割后的结果为:\"\"\n\n由此可以得出来：\n\n+ 当字符串只包含分隔符时，返回数组没有元素；\n+ 当字符串不包含分隔符时，返回数组只包含一个元素（该字符串本身）；\n+ 字符串最尾部出现的分隔符可以看成不存在，不影响字符串的分隔；\n+ 字符串最前端出现的分隔符将分隔出一个空字符串以及剩下的部分的正常分隔；\n\n","slug":"每日一题-Length-of-Last-Word","published":1,"updated":"2015-07-27T05:08:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4h0010b0xs04o1wg7w"},{"title":"每日一题:Count-and-Say","date":"2015-07-28T12:15:07.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n> The count-and-say sequence is the sequence of integers beginning as follows:\n> \n1, 11, 21, 1211, 111221, ...\n\n>1 is read off as \"one 1\" or 11.\n\n>11 is read off as \"two 1s\" or 21.\n\n>21 is read off as \"one 2, then one 1\" or 1211.\n\n>Given an integer n, generate the nth sequence.\n\n> Note: The sequence of integers will be represented as a string.\n\n## 解答\n\n```\npublic class Solution {\n    public String countAndSay(int n) {\n        if(n == 1){\n            return \"1\";\n        }\n        String str = countAndSay(n - 1)+ \"%\";\n        StringBuffer sb = new StringBuffer();\n        int count = 1;\n        for(int i = 0; i < str.length() - 1; i++){\n            if(str.charAt(i) == str.charAt(i + 1)){\n                count++;\n            }else{\n                sb.append(String.valueOf(count));\n                sb.append(str.charAt(i));\n                count = 1;\n            }\n        }\n        return sb.toString();\n    }\n}\n\n```\n\n## 注解\n\n采用递归的方式解决，然后处理过程就不多说啦。\n\n","source":"_posts/每日一题-Count-and-Say.md","raw":"title: '每日一题:Count-and-Say'\ndate: 2015-07-28 20:15:07\ntags: [code,leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n> The count-and-say sequence is the sequence of integers beginning as follows:\n> \n1, 11, 21, 1211, 111221, ...\n\n>1 is read off as \"one 1\" or 11.\n\n>11 is read off as \"two 1s\" or 21.\n\n>21 is read off as \"one 2, then one 1\" or 1211.\n\n>Given an integer n, generate the nth sequence.\n\n> Note: The sequence of integers will be represented as a string.\n\n## 解答\n\n```\npublic class Solution {\n    public String countAndSay(int n) {\n        if(n == 1){\n            return \"1\";\n        }\n        String str = countAndSay(n - 1)+ \"%\";\n        StringBuffer sb = new StringBuffer();\n        int count = 1;\n        for(int i = 0; i < str.length() - 1; i++){\n            if(str.charAt(i) == str.charAt(i + 1)){\n                count++;\n            }else{\n                sb.append(String.valueOf(count));\n                sb.append(str.charAt(i));\n                count = 1;\n            }\n        }\n        return sb.toString();\n    }\n}\n\n```\n\n## 注解\n\n采用递归的方式解决，然后处理过程就不多说啦。\n\n","slug":"每日一题-Count-and-Say","published":1,"updated":"2015-07-28T12:21:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4k0014b0xs8afvzwei"},{"title":"每日一题:Compare-Version-Numbers","date":"2015-07-28T00:04:21.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n\n>Compare two version numbers version1 and version2.\nIf version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.\n\n>You may assume that the version strings are non-empty and contain only digits and the . character.\nThe . character does not represent a decimal point and is used to separate number sequences.\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\n\n>Here is an example of version numbers ordering:\n\n>`0.1 < 1.1 < 1.2 < 13.37`\n\n\n## 解答\n\n```\npublic class Solution {\n    public int compareVersion(String version1, String version2) {\n        String[] v1 = version1.split(\"\\\\.\");\n        String[] v2 = version2.split(\"\\\\.\");\n\n        int length = (v1.length > v2.length) ? v1.length : v2.length;\n        for(int i = 0; i < length; i++){\n\n            int num1 = (v1.length - 1 < i) ? 0 : Integer.parseInt(v1[i]);\n            int num2 = (v2.length - 1 < i) ? 0 : Integer.parseInt(v2[i]);\n\n            if(num1 > num2){\n                return 1;\n            }else if(num2 > num1){\n                return -1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## 注解\n\n先根据`.`切词，然后依次比较切词数组对应位大小(通过转换为整数).\n\n## 反思\n\n```\npublic static int parseInt(String s) throws NumberFormatException   \n{  \n    return parseInt(s,10);  \n }  \n```\n\n```\npublic static int parseInt(String s, int radix)throws NumberFormatException  \n{  \n    if (s == null) {  \n        throw new NumberFormatException(\"null\");  \n    }  \n  \n    if (radix < Character.MIN_RADIX) {          \n        //Character.MIN_RADIX=2  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" less than Character.MIN_RADIX\");  \n    }  \n  \n    if (radix > Character.MAX_RADIX) {          \n    //Character.MAN_RADIX=36  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" greater than Character.MAX_RADIX\");  \n    }  \n  \n    int result = 0;  \n    boolean negative = false;  \n    int i = 0, max = s.length();  \n    int limit;  \n    int multmin;  \n    int digit;  \n  \n    if (max > 0) {  \n        if (s.charAt(0) == '-') {  \n        negative = true;  \n        limit = Integer.MIN_VALUE;  \n        i++;  \n     } else {  \n        limit = -Integer.MAX_VALUE;  \n     }  \n     multmin = limit / radix;  \n     if (i < max) {  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        } else {  \n            result = -digit;  \n        }  \n     }  \n     while (i < max) {  \n     // Accumulating negatively avoids surprises near MAX_VALUE  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        if (result < multmin) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result *= radix;  \n        if (result < limit + digit) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result -= digit;  \n        }  \n    } else {  \n        throw NumberFormatException.forInputString(s);  \n    }  \n    if (negative) {  \n        if (i > 1) {  \n        return result;  \n        } else {    /* Only got \"-\" */  \n        throw NumberFormatException.forInputString(s);  \n        }  \n    } else {  \n        return -result;  \n    }  \n       }  \n```\n","source":"_posts/每日一题-Compare-Version-Numbers.md","raw":"title: 每日一题:Compare-Version-Numbers\ndate: 2015-07-28 08:04:21\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n\n>Compare two version numbers version1 and version2.\nIf version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.\n\n>You may assume that the version strings are non-empty and contain only digits and the . character.\nThe . character does not represent a decimal point and is used to separate number sequences.\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\n\n>Here is an example of version numbers ordering:\n\n>`0.1 < 1.1 < 1.2 < 13.37`\n\n\n## 解答\n\n```\npublic class Solution {\n    public int compareVersion(String version1, String version2) {\n        String[] v1 = version1.split(\"\\\\.\");\n        String[] v2 = version2.split(\"\\\\.\");\n\n        int length = (v1.length > v2.length) ? v1.length : v2.length;\n        for(int i = 0; i < length; i++){\n\n            int num1 = (v1.length - 1 < i) ? 0 : Integer.parseInt(v1[i]);\n            int num2 = (v2.length - 1 < i) ? 0 : Integer.parseInt(v2[i]);\n\n            if(num1 > num2){\n                return 1;\n            }else if(num2 > num1){\n                return -1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## 注解\n\n先根据`.`切词，然后依次比较切词数组对应位大小(通过转换为整数).\n\n## 反思\n\n```\npublic static int parseInt(String s) throws NumberFormatException   \n{  \n    return parseInt(s,10);  \n }  \n```\n\n```\npublic static int parseInt(String s, int radix)throws NumberFormatException  \n{  \n    if (s == null) {  \n        throw new NumberFormatException(\"null\");  \n    }  \n  \n    if (radix < Character.MIN_RADIX) {          \n        //Character.MIN_RADIX=2  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" less than Character.MIN_RADIX\");  \n    }  \n  \n    if (radix > Character.MAX_RADIX) {          \n    //Character.MAN_RADIX=36  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" greater than Character.MAX_RADIX\");  \n    }  \n  \n    int result = 0;  \n    boolean negative = false;  \n    int i = 0, max = s.length();  \n    int limit;  \n    int multmin;  \n    int digit;  \n  \n    if (max > 0) {  \n        if (s.charAt(0) == '-') {  \n        negative = true;  \n        limit = Integer.MIN_VALUE;  \n        i++;  \n     } else {  \n        limit = -Integer.MAX_VALUE;  \n     }  \n     multmin = limit / radix;  \n     if (i < max) {  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        } else {  \n            result = -digit;  \n        }  \n     }  \n     while (i < max) {  \n     // Accumulating negatively avoids surprises near MAX_VALUE  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        if (result < multmin) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result *= radix;  \n        if (result < limit + digit) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result -= digit;  \n        }  \n    } else {  \n        throw NumberFormatException.forInputString(s);  \n    }  \n    if (negative) {  \n        if (i > 1) {  \n        return result;  \n        } else {    /* Only got \"-\" */  \n        throw NumberFormatException.forInputString(s);  \n        }  \n    } else {  \n        return -result;  \n    }  \n       }  \n```\n","slug":"每日一题-Compare-Version-Numbers","published":1,"updated":"2015-07-28T00:15:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4q0018b0xs52zu3mqg"},{"title":"慢跑鞋入门","date":"2015-07-18T15:19:12.000Z","description":"慢跑鞋入手指南","_content":"\n## 如何测试自己适合的慢跑鞋\n\n通常我们买跑鞋,一般指的是慢跑鞋.慢跑鞋的设计理念是保护为主,让你在跑步时身体不受到伤害,而并不是为了追求速度.人在走或者跑的时候,脚在落地时会有一个旋转的动作(pronation),这个动作加上足弓的下陷就成了人体的脚部缓震系统.慢跑鞋的保护就是对这个缓震系统的一个加强与矫正.\n\n大部分慢跑鞋分了三类:缓震(cushion),稳定(stability),步态控制(motion control).这个分类就是根据人的pronation的程度来分的(而不是足弓的高低,平足者一样可以有完全正常的pronation).Pronation分了三类:underpronation(pronation不足),neutral(正常),overpronation(pronation过度).缓震系针对的是underpronation与neutral,而稳定系与控制系针对的是不同程度的overpronation.这里有解析pronation的图片.\n\n![img](http://i2.hoopchina.com.cn/blogfile/201309/02/137812802545688.jpg \"这张图就是有不同程度pronation的人站立时的图片\")\n\n大家应该也听过慢跑鞋有不同等级的划分,有人用\"入门级,实用级,顶级,超顶级\"来形容,而也有人用\"轻量级(minimum)中量级(moderate)重量级(maximum)\"这类的专业名词.但总的来说他们说的都是一个东西:跑鞋根据不同缓震强度来划分的等级.缓震强度越高,能承受的体重也就越大,但相对的一般来说鞋也就越重.有很多人说\"轻体重踩不动顶级鞋\"其实是一个误区,顶级鞋的吸震能力更高,但不代表顶级鞋肯定就比中级鞋更硬.举个例子:在几大跑鞋厂家里,Brooks在这点上体现的最明显,Brooks的稳定系顶级款Trance要明显比他们的稳定系实用级款Adrenaline GTS要软很多,不管什么体重踩上去都是这种感觉,这是不同的设计理念导致的差距:GTS追求的是跑步时的回弹,而Trance追求的是顶级的保护与舒适度.尽管如此,根据自己的体重选择适合自己的鞋而不是盲目追求顶级款还是很重要的.\n\n总结一下,跑鞋根据体重等级和pronation类型各分了三类,组成了一个九宫格.而想要知道自己处于这个九宫格的什么位置,可以去美津浓的网站上做一个测试,根据这个测试的结果来选择自己的慢跑鞋对新手来说是非常稳妥的了\n\n[美津浓测试地址](www.myprecisionfit.com)\n\n## 跑鞋分类介绍\n\n接下来,我对各大品牌的公路慢跑鞋做了一个大体总结,参考了runningwarehouse的资料.其中不包括越野跑竞速跑赤足跑等等等等,只有最基本的普通慢跑鞋,给刚入门的新手当一个参考,型号可能有不全.\n\nAsics与Brooks:跑鞋领域的代表,产品线最齐全 \n\nNew Balance与Saucony:前些年很好,最近下滑严重,但依然保证了一线大厂的水平 \n\nNike与Adidas:面对年轻人的时尚“跑鞋”居多,但是专业产品也有很高水准 \n\nMizuno:实用系,坚持结构缓震\n\n然后是具体的产品型号,依照pronation分类以及产品定价来排序:\n\n### Asics\n\n特点是鞋楦非常适合亚洲人,当家技术Gel吸震能力极强,脚感极其出色,也因此有不少鞋款“只有吸,没有回弹”,但总的来说,Asics是最舒适的选择.\n#### 缓震系\nGel Kinsei系列:200美元级别,Maximum级,脚感软.稍微偏离普通慢跑鞋的定义.\nGel Nimbus系列:145美元级别,Maximum级,脚感软.\nGel Cumulus系列:115美元级别,Moderate级,脚感较软.\nGel Oracle:110美元级别,为了平足neutral跑者设计,Maximum级,脚感较软.\nGel Flux:100美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nGel Kayano系列:150美元级别,Asics跑鞋的象征,以前被吹的没边了的“跑王”,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nGT 2000系列:120美元级别,相当于以前的Gel 21X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nGT 1000系列:100美元级别,相当于以前的Gel 11X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nGel Forte:110美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\n \n### Brooks\n国内比较难购买,相比Asics来说更偏向纯跑步的跑友,鞋款普遍包裹能力强,当家技术DNA兼顾吸震与回弹,产品普遍内侧支撑强,是做控制系跑鞋最专业的厂家.\n\n#### 缓震系\nGlycerin系列:150美元级别,Maximum级,脚感软.\nGhost系列:110美元级别,Moderate级,脚感较软.\nDefyance系列,110美元级别,这个系列是Brooks稳定系的Adrenaline GTS的一个缓震系版本,除了中底没有内侧额外支撑之外一切都是一样的.Moderate级,脚感较硬.\nDyad系列,110美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nLaunch:90美元级别,可兼职竞速鞋,Moderate级,脚感较软,轻量设计.\n \n#### 稳定系\nTrance系列:150美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nAdrenaline GTS系列:110美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较硬.\nRavenna系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nBeast系列:140美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\nAddiction系列:110美元级别,为了平足并有较重overpronation跑者设计,Moderate级,脚感较软.\n \n### New Balance\n每隔几年都换一次当家技术,现在的最新技术是N2近地缓冲,吸震能力非常好,脚感不输于asics,同asics一样在鞋楦上有优势.\n\n#### 缓震系\n1080系列:135美元级别,Maximum级,脚感软,轻量设计.\n840系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\n1260系列:145美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\n940系列:120美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感较软.\n870系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软,轻量设计.\n \n#### 控制系\n1340:135美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感软.\n \n### Saucony\n国内一样不好买,当家技术powergrid兼具吸震与回弹,产品脚感普遍偏软.\n\n#### 缓震系\nCortana系列:150美元级别,Maximum级,脚感较软,轻量设计.\nTriumph系列:130美元级别,Maximum级,脚感非常软.\nEchelon系列,120美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nRide系列:110美元级别,Moderate级,脚感软.\n \n#### 稳定系\nHurricane系列:140美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nOmni系列:120美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.\nGuide系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nStabil CS系列:130美元级别,为了平足并有较重overpronation跑者设计,Maximum级,脚感软.\n \n### Nike\n气垫系产品回弹极强,lunar系回弹稍弱但吸震更好,产品普遍偏软并且内侧支撑较差.\n\n#### 缓震系\nAir Max+系列:180美元级别,Maximum级,脚感较软,不太能算是跑鞋.\nFlyknit Lunar1+:160美元级别,Moderate级,脚感软,轻量设计.\nZoom Vomero+系列:130美元级别,Maximum级,脚感非常软.\nAir Pegasus+系列:100美元级别,Moderate级,脚感软.\n \n#### 稳定系\nLunarEclipse+系列:135美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软.\nZoom Structure+系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nLunarGlide+系列:110美元级别,为了轻度overpronation跑者设计,Moderate级,脚感软.\n \n### Adidas\n阿迪的科技介绍都很多,总的来说传统鞋款里的formotion提供了额外的步态控制,而boost材料在吸震和回弹上都表现极为出色.新的Boost系列有取代Supernova系列旗舰的势头,Ride和Salvation系列生死不明.\n\n#### 缓震系\nEnergy Boost:150美元级别,Maximum级,脚感软,轻量设计.\nSupernova Glide系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nadistar Boost:170美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软,轻量设计.\nSupernova Sequence系列:120美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n### Mizuno\n唯一一个还在坚持结构缓震的厂家,产品普遍脚感较硬同时缺少内侧支撑能力,和Brooks一样包裹性强,更适合纯跑友.\n\n#### 缓震系\nWave Prophecy系列:200美元级别,Maximum级,脚感较硬.稍微偏离普通慢跑鞋的定义.\nWave Creation系列:150美元级别,Maximum级,脚感较软.\nWave Enigma系列:135美元级别,Maximum级,脚感较软.\nWave Rider系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nNirvara系列生死不明,先不放这\nWave Inspire系列:115美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nWave Alchemy系列:115美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.被各大网站归到稳定系类,支撑比起别的控制系实在是不够.","source":"_posts/慢跑鞋入门.md","raw":"title: 慢跑鞋入门\ndate: 2015-07-18 23:19:12\ntags: [life,running]\ncategories: life\ndescription: 慢跑鞋入手指南\n---\n\n## 如何测试自己适合的慢跑鞋\n\n通常我们买跑鞋,一般指的是慢跑鞋.慢跑鞋的设计理念是保护为主,让你在跑步时身体不受到伤害,而并不是为了追求速度.人在走或者跑的时候,脚在落地时会有一个旋转的动作(pronation),这个动作加上足弓的下陷就成了人体的脚部缓震系统.慢跑鞋的保护就是对这个缓震系统的一个加强与矫正.\n\n大部分慢跑鞋分了三类:缓震(cushion),稳定(stability),步态控制(motion control).这个分类就是根据人的pronation的程度来分的(而不是足弓的高低,平足者一样可以有完全正常的pronation).Pronation分了三类:underpronation(pronation不足),neutral(正常),overpronation(pronation过度).缓震系针对的是underpronation与neutral,而稳定系与控制系针对的是不同程度的overpronation.这里有解析pronation的图片.\n\n![img](http://i2.hoopchina.com.cn/blogfile/201309/02/137812802545688.jpg \"这张图就是有不同程度pronation的人站立时的图片\")\n\n大家应该也听过慢跑鞋有不同等级的划分,有人用\"入门级,实用级,顶级,超顶级\"来形容,而也有人用\"轻量级(minimum)中量级(moderate)重量级(maximum)\"这类的专业名词.但总的来说他们说的都是一个东西:跑鞋根据不同缓震强度来划分的等级.缓震强度越高,能承受的体重也就越大,但相对的一般来说鞋也就越重.有很多人说\"轻体重踩不动顶级鞋\"其实是一个误区,顶级鞋的吸震能力更高,但不代表顶级鞋肯定就比中级鞋更硬.举个例子:在几大跑鞋厂家里,Brooks在这点上体现的最明显,Brooks的稳定系顶级款Trance要明显比他们的稳定系实用级款Adrenaline GTS要软很多,不管什么体重踩上去都是这种感觉,这是不同的设计理念导致的差距:GTS追求的是跑步时的回弹,而Trance追求的是顶级的保护与舒适度.尽管如此,根据自己的体重选择适合自己的鞋而不是盲目追求顶级款还是很重要的.\n\n总结一下,跑鞋根据体重等级和pronation类型各分了三类,组成了一个九宫格.而想要知道自己处于这个九宫格的什么位置,可以去美津浓的网站上做一个测试,根据这个测试的结果来选择自己的慢跑鞋对新手来说是非常稳妥的了\n\n[美津浓测试地址](www.myprecisionfit.com)\n\n## 跑鞋分类介绍\n\n接下来,我对各大品牌的公路慢跑鞋做了一个大体总结,参考了runningwarehouse的资料.其中不包括越野跑竞速跑赤足跑等等等等,只有最基本的普通慢跑鞋,给刚入门的新手当一个参考,型号可能有不全.\n\nAsics与Brooks:跑鞋领域的代表,产品线最齐全 \n\nNew Balance与Saucony:前些年很好,最近下滑严重,但依然保证了一线大厂的水平 \n\nNike与Adidas:面对年轻人的时尚“跑鞋”居多,但是专业产品也有很高水准 \n\nMizuno:实用系,坚持结构缓震\n\n然后是具体的产品型号,依照pronation分类以及产品定价来排序:\n\n### Asics\n\n特点是鞋楦非常适合亚洲人,当家技术Gel吸震能力极强,脚感极其出色,也因此有不少鞋款“只有吸,没有回弹”,但总的来说,Asics是最舒适的选择.\n#### 缓震系\nGel Kinsei系列:200美元级别,Maximum级,脚感软.稍微偏离普通慢跑鞋的定义.\nGel Nimbus系列:145美元级别,Maximum级,脚感软.\nGel Cumulus系列:115美元级别,Moderate级,脚感较软.\nGel Oracle:110美元级别,为了平足neutral跑者设计,Maximum级,脚感较软.\nGel Flux:100美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nGel Kayano系列:150美元级别,Asics跑鞋的象征,以前被吹的没边了的“跑王”,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nGT 2000系列:120美元级别,相当于以前的Gel 21X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nGT 1000系列:100美元级别,相当于以前的Gel 11X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nGel Forte:110美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\n \n### Brooks\n国内比较难购买,相比Asics来说更偏向纯跑步的跑友,鞋款普遍包裹能力强,当家技术DNA兼顾吸震与回弹,产品普遍内侧支撑强,是做控制系跑鞋最专业的厂家.\n\n#### 缓震系\nGlycerin系列:150美元级别,Maximum级,脚感软.\nGhost系列:110美元级别,Moderate级,脚感较软.\nDefyance系列,110美元级别,这个系列是Brooks稳定系的Adrenaline GTS的一个缓震系版本,除了中底没有内侧额外支撑之外一切都是一样的.Moderate级,脚感较硬.\nDyad系列,110美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nLaunch:90美元级别,可兼职竞速鞋,Moderate级,脚感较软,轻量设计.\n \n#### 稳定系\nTrance系列:150美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nAdrenaline GTS系列:110美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较硬.\nRavenna系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nBeast系列:140美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\nAddiction系列:110美元级别,为了平足并有较重overpronation跑者设计,Moderate级,脚感较软.\n \n### New Balance\n每隔几年都换一次当家技术,现在的最新技术是N2近地缓冲,吸震能力非常好,脚感不输于asics,同asics一样在鞋楦上有优势.\n\n#### 缓震系\n1080系列:135美元级别,Maximum级,脚感软,轻量设计.\n840系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\n1260系列:145美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\n940系列:120美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感较软.\n870系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软,轻量设计.\n \n#### 控制系\n1340:135美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感软.\n \n### Saucony\n国内一样不好买,当家技术powergrid兼具吸震与回弹,产品脚感普遍偏软.\n\n#### 缓震系\nCortana系列:150美元级别,Maximum级,脚感较软,轻量设计.\nTriumph系列:130美元级别,Maximum级,脚感非常软.\nEchelon系列,120美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nRide系列:110美元级别,Moderate级,脚感软.\n \n#### 稳定系\nHurricane系列:140美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nOmni系列:120美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.\nGuide系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nStabil CS系列:130美元级别,为了平足并有较重overpronation跑者设计,Maximum级,脚感软.\n \n### Nike\n气垫系产品回弹极强,lunar系回弹稍弱但吸震更好,产品普遍偏软并且内侧支撑较差.\n\n#### 缓震系\nAir Max+系列:180美元级别,Maximum级,脚感较软,不太能算是跑鞋.\nFlyknit Lunar1+:160美元级别,Moderate级,脚感软,轻量设计.\nZoom Vomero+系列:130美元级别,Maximum级,脚感非常软.\nAir Pegasus+系列:100美元级别,Moderate级,脚感软.\n \n#### 稳定系\nLunarEclipse+系列:135美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软.\nZoom Structure+系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nLunarGlide+系列:110美元级别,为了轻度overpronation跑者设计,Moderate级,脚感软.\n \n### Adidas\n阿迪的科技介绍都很多,总的来说传统鞋款里的formotion提供了额外的步态控制,而boost材料在吸震和回弹上都表现极为出色.新的Boost系列有取代Supernova系列旗舰的势头,Ride和Salvation系列生死不明.\n\n#### 缓震系\nEnergy Boost:150美元级别,Maximum级,脚感软,轻量设计.\nSupernova Glide系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nadistar Boost:170美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软,轻量设计.\nSupernova Sequence系列:120美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n### Mizuno\n唯一一个还在坚持结构缓震的厂家,产品普遍脚感较硬同时缺少内侧支撑能力,和Brooks一样包裹性强,更适合纯跑友.\n\n#### 缓震系\nWave Prophecy系列:200美元级别,Maximum级,脚感较硬.稍微偏离普通慢跑鞋的定义.\nWave Creation系列:150美元级别,Maximum级,脚感较软.\nWave Enigma系列:135美元级别,Maximum级,脚感较软.\nWave Rider系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nNirvara系列生死不明,先不放这\nWave Inspire系列:115美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nWave Alchemy系列:115美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.被各大网站归到稳定系类,支撑比起别的控制系实在是不够.","slug":"慢跑鞋入门","published":1,"updated":"2015-07-20T12:36:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4t001cb0xsqr938f2t"},{"title":"取代PPT的mdpress","date":"2015-07-25T10:26:44.000Z","description":"最近发现一款神器impress.js，然后特别想将markdown和impress.js结合起来，结果就发现了这货mdpress。","_content":"\n## 缘起\n\n还在用PPT吗？孩子，你快被淘汰了。impress.js绝对是你的不二选择。\n\nimpress.js 是国外一位开发者受 Prezi 启发，采用CSS3与JavaScript语言完成的一个可供开发者使用的表现层框架(演示工具)。现在普通开发者可以利用impress.js自己开发出类似效果的演示工具，但性能比基于FLASH的Prezi更优。其功能包括画布的无限旋转与缩放，任意角度放置任意大小的文字，CSS3 3D效果支持等。同时，也支持传统 PowerPoint 形式的幻灯演示。\n\n> [impress.js github库](https://github.com/bartaz/impress.js)\n\n> [官方demo](http://bartaz.github.com/impress.js)\n\n## 安装\n\n还是这句话，windows用户洗洗睡吧。Mac用户使用`sudo gem install mdpress`。Ubuntu用户首先安装需要的包`sudo apt-get install gem ruby-1.9.1-dev`，然后安装mdpress`sudo gem install mdpress\u0010`。\n\n## 使用\n\n1. 创建一个md文件，格式参考[mdpress full userage](http://egonschiele.github.io/mdpress/)\n2. 跳转到该文件目录下，使用`mdpress filename.md`生成。\n3. 在该目录下，你会发现一个与md文件同名的文件夹，点击其中的`index.html`文件展示。\n\n## 注意\n\n在该项目git库的issues存在`issues#41\u0010`,解决方法：\n\n> Hi,\nit seems it does not work with current redcarpet. As a workaround, I have installed redcarpet 3.1.2 manually and it works.\n\n>I'll try to make a fix later.\n\n>Best regards\n>Josef\n\n首先使用`gem uninstall redcarpet --v=3.3.2`删除`redcarpet 3.3.2`依赖库 ， 然后使用`gem install redcarpet -v 3.1.2`安装`redcarpet 3.1.2`依赖库。当然作者应该也会尽快修复这个问题的。\n\n\n\n\n\n\n\n\n\n","source":"_posts/取代PPT的mdpress.md","raw":"title: 取代PPT的mdpress\ndate: 2015-07-25 18:26:44\ntags: [tools, mdpress]\ncategories: tools\ndescription: 最近发现一款神器impress.js，然后特别想将markdown和impress.js结合起来，结果就发现了这货mdpress。\n---\n\n## 缘起\n\n还在用PPT吗？孩子，你快被淘汰了。impress.js绝对是你的不二选择。\n\nimpress.js 是国外一位开发者受 Prezi 启发，采用CSS3与JavaScript语言完成的一个可供开发者使用的表现层框架(演示工具)。现在普通开发者可以利用impress.js自己开发出类似效果的演示工具，但性能比基于FLASH的Prezi更优。其功能包括画布的无限旋转与缩放，任意角度放置任意大小的文字，CSS3 3D效果支持等。同时，也支持传统 PowerPoint 形式的幻灯演示。\n\n> [impress.js github库](https://github.com/bartaz/impress.js)\n\n> [官方demo](http://bartaz.github.com/impress.js)\n\n## 安装\n\n还是这句话，windows用户洗洗睡吧。Mac用户使用`sudo gem install mdpress`。Ubuntu用户首先安装需要的包`sudo apt-get install gem ruby-1.9.1-dev`，然后安装mdpress`sudo gem install mdpress\u0010`。\n\n## 使用\n\n1. 创建一个md文件，格式参考[mdpress full userage](http://egonschiele.github.io/mdpress/)\n2. 跳转到该文件目录下，使用`mdpress filename.md`生成。\n3. 在该目录下，你会发现一个与md文件同名的文件夹，点击其中的`index.html`文件展示。\n\n## 注意\n\n在该项目git库的issues存在`issues#41\u0010`,解决方法：\n\n> Hi,\nit seems it does not work with current redcarpet. As a workaround, I have installed redcarpet 3.1.2 manually and it works.\n\n>I'll try to make a fix later.\n\n>Best regards\n>Josef\n\n首先使用`gem uninstall redcarpet --v=3.3.2`删除`redcarpet 3.3.2`依赖库 ， 然后使用`gem install redcarpet -v 3.1.2`安装`redcarpet 3.1.2`依赖库。当然作者应该也会尽快修复这个问题的。\n\n\n\n\n\n\n\n\n\n","slug":"取代PPT的mdpress","published":1,"updated":"2015-07-25T16:46:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg4x001jb0xs8o4rx8wo"},{"title":"利用github和hexo搭建静态博客","date":"2015-07-09T12:22:55.000Z","description":"终于有空闲时间可以好好整理一下整个博客的搭建过程，长话短说，once upon a time ~ ~","_content":"\n# 安装过程参考\n\n>+ [Hexo在github上构建免费的Web应用](http://blog.fens.me/hexo-blog-github/)\n>+ [Hexo官网](https://hexo.io/)\n>+ [Hexo Next主题](https://github.com/iissnan/hexo-theme-next)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n>+ [Hexo自动添加ReadMore标记](http://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/)\n\n# 部署到github\n\nhexo d 报错 `ERROR deployer not found:github`\n\n错误原因：未安装hexo的git插件\n\n```\nnpm install hexo-deployer-git --save\n```\n站点_config.yml配置 `Note:每一个键值对中间有空格`\n\n```\ndeploy:\n\ttype: git\n\treposity: git@github.com:victoryxs/victoryxs.github.io.git\n\tbranch: master\n```\n\n# Next主题\n\n## 站点_config.yml\n\n主要添加了`feed` `sitemap` `wordcount`插件，设置了sidebar的`avatar` `friend_link` `social_link`以及配置了`多说评论`，\n\n>参考：\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n\n```\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Just a Blog But a Life\nsubtitle: Victoryxs  Blog \ndescription: 记录生活学习的点点滴滴\nauthor: Victoryxs\nlanguage: zh-Hans\nemail: victoryxs@qq.com\ntimezone: \n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://yoursite.com\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 5\npagination_dir: page\n\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\nPlugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n- hexo-wordcount\n\n# Feed Atom\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n\n#sitemap\nsitemap:\n  path: sitemap.xml\n\n#duoshuo\nduoshuo_shortname: victoryxs\n\n#cemiantouxiang\navatar: /images/avatar.jpg\n\n# Social links\nsocial:\n  Github: https://github.com/victoryxs\n  Twitter: https://twitter.com/victoryxs\n  Weibo: http://weibo.com/1628261543\n\n # title, chinese available\nlinks_title: 友情链接\n# links\nlinks:\n  MacTalk: http://macshuo.com/\n  Mac玩儿法: http://www.waerfa.com/\n  nikola: http://nikola.gitcafe.io/\n\n#blog create time\nsince: 2015\n\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:victoryxs/victoryxs.github.io.git\n  branch: master\n\n```\n\n## 主题_config.yml\n\n添加了`guestbook` `categories` `about` `tags` `腾讯公益404`，修改了代码高亮显示模式，添加了mathjax的latex支持\n\n>参考\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n\n\n```\n# when running hexo in a subdirectory (e.g. domain.tld/blog), remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  guestbook: /guestbook\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo,next\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss: atom.xml\n\n# Icon fonts\n# Place your font into next/source/fonts, specify directory-name and font-name here\n# Avialable: default | linecons | fifty-shades | feather\nicon_font: default\n#icon_font: fifty-shades\n#icon_font: feather\n#icon_font: linecons\n\n# Code Highlight theme\n# Available value: normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# MathJax Support\nmathjax: true\n\n\n# Schemes\n# scheme: Mist\n\n\n# Sidebar, available value:\n#  - post    expand on posts automatically. Default.\n#  - always  expand for all pages automatically\n#  - hide    expand only when click on the sidebar toggle icon.\n#sidebar: post\nsidebar: always\n#sidebar: hide\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically add list number to toc.\ntoc_list_number: true\n\n\n# Use Lato font\n# Note: this option is avialable only when the language is not `zh-Hans`\nuse_font_lato: true\n\n\n## DO NOT EDIT THE FOLLOWING SETTINGS\n## UNLESS YOU KNOW WHAT YOU ARE DOING\n\n# Use velocity to animate everything.\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.4.3\n\n```\n# 插件\n## wordcount插件\n\n>[Hexo文章计数插件WordCount](http://blog.willin.wang/posts/2015/hexo-wordcount/)\n\n安装\n\n```\nnpm i --save hexo-wordcount\n```\n\n使用\n\n修改`victoryxs.github.io/themes/layout/_macro/post.swig`文件\n\n\n```\n  <div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, config.date_format) }}\n        </span>\n        {% if post.categories and post.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n              <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n\n              {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      ---代码添加处---\n\n      <span id=\"busuanzi_container_page_pv\">\n      &nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C\n      </span>\n\n        {% if post.comments %}\n          {% if (config.duoshuo and config.duoshuo.shortname) or config.duoshuo_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count ds-thread-count\" data-thread-key=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% elseif config.disqus_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count disqus-comment-count\" data-disqus-identifier=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% endif %}\n        {% endif %}\n      </div>\n```\n\n在上图代码添加处，添加代码\n\n```\n<span class=\"post-count\">\n&nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n</span>\n```\n\n## 添加fork me on Github\n\n在`victoryxs.github.io/themes/next/layout/_layout.swig`\n\n```\n\n<body>\n  {% include '_partials/old-browsers.swig' %}\n\n  <div class=\"container one-column {% block page_class %}{% endblock %}\">\n    <div class=\"headband\"></div>\n\n---代码添加处---\n    <div id=\"header\" class=\"header\">\n      <div class=\"header-inner\">\n        {% include '_partials/header.swig' %}\n      </div>\n    </div>\n\n```\n在上图代码添加处添加\n\n```\n    <!-- add Fork me on Github -->\n<a href=\"https://github.com/victoryxs\"><img style=\"position: absolute; top: 500; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/8b6b8ccc6da3aa5722903da7b58eb5ab1081adee/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png\"></a>\n\n    <!-- add Fork me on Github-->\n\n```\n\n## 添加站点统计（不蒜子）\n\n在`victoryxs.github.io/themes/next/layout/_partials/footer.swig`中的末尾添加下面的js引用\n\n```\n\t<!-- busuanzi -->\n\t<script async src=\"https://dn-lbstatics.qbox.me/\tbusuanzi/2.3/busuanzi.pure.mini.js\">\n\t</script>\n\t<!-- busuanzi -->\n```\n在footer模板中添加访问量,原谅哥偷懒，没有写单独的css\n\n```\n\t<div class=\"copyright\">\n \t<span id=\"busuanzi_container_site_uv\">\n \t 本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n\t</span>\n\t</div>\n```\n## 单篇文章阅读量\n\n由于不蒜子不提供首页单页面和站点统计，所以对index页面做部分修改\n\n```\n\t{% if is_index %}\n\t<div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, \tconfig.date_format) }}\n        </span>\n\n        {% if post.categories and \tpost.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n   <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n   {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      <span class=\"post-count\">\n      &nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n      </span>\n      </div>\n      {% endif %}\n\n```\n\n然后在非首页的post-meta中添加阅读量，有没有觉得热度这个名字起得特别接地气\n\n```\n<span id=\"busuanzi_container_page_pv\">\n&nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C</span>\n```\n\n# Hexo模板系统\n\nHexo的基本原理就是根据解析_post中的md格式文件，参照md文件中的布局类型根据模板解析。\n\nHexo使用node.js模板文件，例如ejs，swig，doT，Jade。Hexo中有post、page、photo等不同布局，选用的布局类型会在md文件中声明。\n\n处理流程：Hexo首先解析md文件，然后根据layout.swig判断布局类型，再转发给其他的布局文件。\n\n![简要流程](http://cl.ly/bvGa/hexo_ejs_1.png)\n\n","source":"_posts/利用github和hexo搭建静态博客.md","raw":"title: 利用github和hexo搭建静态博客\ntags: [hexo,blog]\ndate: 2015-07-09 20:22:55\ncategories: hexo\ndescription: 终于有空闲时间可以好好整理一下整个博客的搭建过程，长话短说，once upon a time ~ ~\n\n---\n\n# 安装过程参考\n\n>+ [Hexo在github上构建免费的Web应用](http://blog.fens.me/hexo-blog-github/)\n>+ [Hexo官网](https://hexo.io/)\n>+ [Hexo Next主题](https://github.com/iissnan/hexo-theme-next)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n>+ [Hexo自动添加ReadMore标记](http://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/)\n\n# 部署到github\n\nhexo d 报错 `ERROR deployer not found:github`\n\n错误原因：未安装hexo的git插件\n\n```\nnpm install hexo-deployer-git --save\n```\n站点_config.yml配置 `Note:每一个键值对中间有空格`\n\n```\ndeploy:\n\ttype: git\n\treposity: git@github.com:victoryxs/victoryxs.github.io.git\n\tbranch: master\n```\n\n# Next主题\n\n## 站点_config.yml\n\n主要添加了`feed` `sitemap` `wordcount`插件，设置了sidebar的`avatar` `friend_link` `social_link`以及配置了`多说评论`，\n\n>参考：\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n\n```\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Just a Blog But a Life\nsubtitle: Victoryxs  Blog \ndescription: 记录生活学习的点点滴滴\nauthor: Victoryxs\nlanguage: zh-Hans\nemail: victoryxs@qq.com\ntimezone: \n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://yoursite.com\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 5\npagination_dir: page\n\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\nPlugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n- hexo-wordcount\n\n# Feed Atom\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n\n#sitemap\nsitemap:\n  path: sitemap.xml\n\n#duoshuo\nduoshuo_shortname: victoryxs\n\n#cemiantouxiang\navatar: /images/avatar.jpg\n\n# Social links\nsocial:\n  Github: https://github.com/victoryxs\n  Twitter: https://twitter.com/victoryxs\n  Weibo: http://weibo.com/1628261543\n\n # title, chinese available\nlinks_title: 友情链接\n# links\nlinks:\n  MacTalk: http://macshuo.com/\n  Mac玩儿法: http://www.waerfa.com/\n  nikola: http://nikola.gitcafe.io/\n\n#blog create time\nsince: 2015\n\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:victoryxs/victoryxs.github.io.git\n  branch: master\n\n```\n\n## 主题_config.yml\n\n添加了`guestbook` `categories` `about` `tags` `腾讯公益404`，修改了代码高亮显示模式，添加了mathjax的latex支持\n\n>参考\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n\n\n```\n# when running hexo in a subdirectory (e.g. domain.tld/blog), remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  guestbook: /guestbook\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo,next\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss: atom.xml\n\n# Icon fonts\n# Place your font into next/source/fonts, specify directory-name and font-name here\n# Avialable: default | linecons | fifty-shades | feather\nicon_font: default\n#icon_font: fifty-shades\n#icon_font: feather\n#icon_font: linecons\n\n# Code Highlight theme\n# Available value: normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# MathJax Support\nmathjax: true\n\n\n# Schemes\n# scheme: Mist\n\n\n# Sidebar, available value:\n#  - post    expand on posts automatically. Default.\n#  - always  expand for all pages automatically\n#  - hide    expand only when click on the sidebar toggle icon.\n#sidebar: post\nsidebar: always\n#sidebar: hide\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically add list number to toc.\ntoc_list_number: true\n\n\n# Use Lato font\n# Note: this option is avialable only when the language is not `zh-Hans`\nuse_font_lato: true\n\n\n## DO NOT EDIT THE FOLLOWING SETTINGS\n## UNLESS YOU KNOW WHAT YOU ARE DOING\n\n# Use velocity to animate everything.\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.4.3\n\n```\n# 插件\n## wordcount插件\n\n>[Hexo文章计数插件WordCount](http://blog.willin.wang/posts/2015/hexo-wordcount/)\n\n安装\n\n```\nnpm i --save hexo-wordcount\n```\n\n使用\n\n修改`victoryxs.github.io/themes/layout/_macro/post.swig`文件\n\n\n```\n  <div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, config.date_format) }}\n        </span>\n        {% if post.categories and post.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n              <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n\n              {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      ---代码添加处---\n\n      <span id=\"busuanzi_container_page_pv\">\n      &nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C\n      </span>\n\n        {% if post.comments %}\n          {% if (config.duoshuo and config.duoshuo.shortname) or config.duoshuo_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count ds-thread-count\" data-thread-key=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% elseif config.disqus_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count disqus-comment-count\" data-disqus-identifier=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% endif %}\n        {% endif %}\n      </div>\n```\n\n在上图代码添加处，添加代码\n\n```\n<span class=\"post-count\">\n&nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n</span>\n```\n\n## 添加fork me on Github\n\n在`victoryxs.github.io/themes/next/layout/_layout.swig`\n\n```\n\n<body>\n  {% include '_partials/old-browsers.swig' %}\n\n  <div class=\"container one-column {% block page_class %}{% endblock %}\">\n    <div class=\"headband\"></div>\n\n---代码添加处---\n    <div id=\"header\" class=\"header\">\n      <div class=\"header-inner\">\n        {% include '_partials/header.swig' %}\n      </div>\n    </div>\n\n```\n在上图代码添加处添加\n\n```\n    <!-- add Fork me on Github -->\n<a href=\"https://github.com/victoryxs\"><img style=\"position: absolute; top: 500; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/8b6b8ccc6da3aa5722903da7b58eb5ab1081adee/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png\"></a>\n\n    <!-- add Fork me on Github-->\n\n```\n\n## 添加站点统计（不蒜子）\n\n在`victoryxs.github.io/themes/next/layout/_partials/footer.swig`中的末尾添加下面的js引用\n\n```\n\t<!-- busuanzi -->\n\t<script async src=\"https://dn-lbstatics.qbox.me/\tbusuanzi/2.3/busuanzi.pure.mini.js\">\n\t</script>\n\t<!-- busuanzi -->\n```\n在footer模板中添加访问量,原谅哥偷懒，没有写单独的css\n\n```\n\t<div class=\"copyright\">\n \t<span id=\"busuanzi_container_site_uv\">\n \t 本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n\t</span>\n\t</div>\n```\n## 单篇文章阅读量\n\n由于不蒜子不提供首页单页面和站点统计，所以对index页面做部分修改\n\n```\n\t{% if is_index %}\n\t<div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, \tconfig.date_format) }}\n        </span>\n\n        {% if post.categories and \tpost.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n   <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n   {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      <span class=\"post-count\">\n      &nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n      </span>\n      </div>\n      {% endif %}\n\n```\n\n然后在非首页的post-meta中添加阅读量，有没有觉得热度这个名字起得特别接地气\n\n```\n<span id=\"busuanzi_container_page_pv\">\n&nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C</span>\n```\n\n# Hexo模板系统\n\nHexo的基本原理就是根据解析_post中的md格式文件，参照md文件中的布局类型根据模板解析。\n\nHexo使用node.js模板文件，例如ejs，swig，doT，Jade。Hexo中有post、page、photo等不同布局，选用的布局类型会在md文件中声明。\n\n处理流程：Hexo首先解析md文件，然后根据layout.swig判断布局类型，再转发给其他的布局文件。\n\n![简要流程](http://cl.ly/bvGa/hexo_ejs_1.png)\n\n","slug":"利用github和hexo搭建静态博客","published":1,"updated":"2015-07-09T13:49:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg50001qb0xsl01cw11d"},{"title":"iterm2+zsh+oh my zsh 配置","date":"2015-07-22T10:13:02.000Z","description":"mac OS X下 iterm2、zsh 和 oh my zsh 的配置。","_content":"\n## iterm2\n\n![iterm2](http://static.oschina.net/uploads/img/201412/17101432_iOgu.jpg)\n\n### 安装\n[iterm2官网](http://www.iterm2.com/)\n[官方文档](http://www.iterm2.com/documentation.html)\n\n### 特性\n\n+ 全键盘操作，无鼠标文本选择 `Cmd+f`\n+ 快捷分屏 `Cmd+d` `Cmd+Shift+d` `Cmd+[` `Cmd+]`\n+ 热键窗口，一键开启iterm2 \n+ 交换Cmd和Option键，满足个人习惯\n+ 支持标记和跳转到标记 `Cmd+Shift+M` `Cmd+Shift+J`\n+ 支持表达式搜索\n+ 自动补全 `Cmd+;`\n+ 粘贴历史 `Cmd+Shift+H`\n+ 立即重放 `Cmd+Opt+B`\n+ 全屏 `Cmd+Enter` \n+ 整合tmux\n\n### 快捷键\n\n+ ⌘ + 数字在各 tab 标签直接来回切换\n+ 选择即复制 + 鼠标中键粘贴，这个很实用\n+ ⌘ + f 所查找的内容会被自动复制\n+ ⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏\n+ ⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏\n+ ctrl + u 清空当前行，无论光标在什么位置\n+ 输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令\n+ ⌘ + shift + h 会列出剪切板历史\n+ ⌘← / ⌘→ 到一行命令最左边/最右边 ，这个功能同 C+a / C+e\n+ ⌥← / ⌥→ 按单词前移/后移，相当与 C+f / C+b，其实这个功能在Iterm中已经预定义好了，⌥f / ⌥b，看个人习惯了\n\n### tmux 整合\n\n`brew install tmux`，然后在oh my zsh的配置文件.zshrc中的plugins 中添加tmux插件\n\n## zsh\n![zsh](http://pic4.zhimg.com/b691b3fa0ffb6d6c90761a98d3afab1b_b.jpg)\n\n[终极 Shell--ZSH](http://zhuanlan.zhihu.com/mactalk/19556676)\n\n### 安装\n1. 查看本机自带shell\n`cat /etc/shells`\n\n2. 安装\nmac用户跳过，Redhat用户 `sudo yum install zsh`，Ubuntu用户 `sudo apt-get install zsh`\n\n3. 设置zsh为默认shell\n`chsh -s /bin/zsh`\n\n### 特性\n+ 兼容bash shell\n+ 输入Commnd，按住上下键查看匹配的 shell 命令\n+ 智能拼写纠正\n+ 各种补全，`Tab+Tab`触发路径、命令和命令参数\n+ 只能跳转，利用`z`和`autojump`实现\n+ `d` `..` `.` 文件目录跳转补充\n+ `ls -l **/*.sh` 递归显示当前目录下的shell文件\n+ 强大的alias系统 \n\n    我的别名，参考MacTalk的配置\n\n    ```\n    alias cls='clear'\n    alias ll='ls -l'\n    alias vi='vim'\n    alias javac=\"javac -J-Dfile.encoding=utf8\"\n    alias grep=\"grep --color=auto\"\n    alias -s html=vi   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开\n    alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似\n    alias -s js=vi\n    alias -s c=vi\n    alias -s java=vi\n    alias -s txt=vi\n    alias -s gz='tar -xzvf'\n    alias -s tgz='tar -xzvf'\n    alias -s zip='unzip'\n    alias -s bz2='tar -xjvf'\n    ```\n+ 插件，结合Oh my zsh实现\n\n## oh my zsh\n\n![oh my zsh](http://ohmyz.sh/img/OMZLogo_BnW.png)\n\n[oh my zsh官网](http://ohmyz.sh/)\n\n### 安装\n\n自动安装\n\n`wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh`\n\n手动安装\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 主题\n\n上个图\n\n![agnoster](https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\n1. 安装 Powerline\n    [Powerline 官网](http://powerline.readthedocs.org/en/latest/installation.html)\n\n    如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n    `pip install powerline-status`\n\n    如果没有，则先执行安装pip指令\n\n    `sudo easy_install pip`\n\n2. 下载安装字体库\n\n    + 将工程下载下来后cd到install.sh文件所在目录\n\n    + 执行指令安装字体库\n\n        执行./install.sh指令安装所有Powerline字体\n\n    + 安装完成后提示所有字体均已下载到/Users/superdanny/Library/Fonts路径下\n\n        `All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n3. 设置iterm2的Regular Font和Non-ASCII Font\n\n    安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n    \n4. 配色方案\n\n    + 安装配色方案\n\n        进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n    + 配置配色方案\n\n        通过load presets选择刚刚安装的配色主题即可\n        \n5. 使用agnoster主题\n    + 下载agnoster主题\n        \n        到下载的工程里面运行install文件,主题将安装到~/.oh-my-zsh/themes目录下\n\n    + 设置该主题\n        \n        进入~/.zshrc打开.zshrc文件，然后将ZSH_THEME后面的字段改为agnoster。ZSH_THEME=\"agnoster\"（agnoster即为要设置的主题）\n        \n6. 增加指令高亮效果 zsh-syntax-highlighting\n\n    指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n    + cd到.zshrc所在目录\n\n    + 执行指令将工程克隆到当前目录\n\n      `git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n    + 打开.zshrc文件，在最后添加下面内容\n\n      `source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`,保存文件。\n\n    + cd ~/.oh-my-zsh/custom/plugins\n\n    + 再次打开.zshrc文件，在最后面添加下面内容\n    \n      `plugins=(zsh-syntax-highlighting)`,保存文件。\n      \n### 插件\n\noh my zsh的插件在`~/.oh-my-zsh/plugins`目录下，默认有100多种。\n\n贴出我的配置\n\n`plugins=(git autojump osx mvn gradle z)`\n\n其中：\n\n1. osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。\n\n2. autojump：autojump是zsh下最强悍的插件。\n    + brew安装\n      \n      `brew install autojump`\n      \n    + 若无法安装，利用\n      \n      `wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.g`,解压缩后进入目录，执行`./install.sh`.\n      \n    + 最后把以下代码加入.zshrc：\n      \n      `[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh`\n      \n## fish shell\n\n![fish](http://fishshell.com/assets/img/Terminal_Logo_CRT_Small.png)\n\n[fishshell 官网](http://fishshell.com/)\n\n### 安装\n\n`brew install fish`\n\n### 切换\n\n`chsh -s /bin/fish`\n\n### 特点\n\n傻瓜式shell编程，相对应的现在有oh my fish，博客反馈不错，哪天装了试试。\n\n\n\n\n\n\n","source":"_posts/iterm2-zsh-oh-my-zsh-配置.md","raw":"title: iterm2+zsh+oh my zsh 配置\ndate: 2015-07-22 18:13:02\ntags: [tools,iterm2,zsh]\ncategories: tools\ndescription: mac OS X下 iterm2、zsh 和 oh my zsh 的配置。\n---\n\n## iterm2\n\n![iterm2](http://static.oschina.net/uploads/img/201412/17101432_iOgu.jpg)\n\n### 安装\n[iterm2官网](http://www.iterm2.com/)\n[官方文档](http://www.iterm2.com/documentation.html)\n\n### 特性\n\n+ 全键盘操作，无鼠标文本选择 `Cmd+f`\n+ 快捷分屏 `Cmd+d` `Cmd+Shift+d` `Cmd+[` `Cmd+]`\n+ 热键窗口，一键开启iterm2 \n+ 交换Cmd和Option键，满足个人习惯\n+ 支持标记和跳转到标记 `Cmd+Shift+M` `Cmd+Shift+J`\n+ 支持表达式搜索\n+ 自动补全 `Cmd+;`\n+ 粘贴历史 `Cmd+Shift+H`\n+ 立即重放 `Cmd+Opt+B`\n+ 全屏 `Cmd+Enter` \n+ 整合tmux\n\n### 快捷键\n\n+ ⌘ + 数字在各 tab 标签直接来回切换\n+ 选择即复制 + 鼠标中键粘贴，这个很实用\n+ ⌘ + f 所查找的内容会被自动复制\n+ ⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏\n+ ⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏\n+ ctrl + u 清空当前行，无论光标在什么位置\n+ 输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令\n+ ⌘ + shift + h 会列出剪切板历史\n+ ⌘← / ⌘→ 到一行命令最左边/最右边 ，这个功能同 C+a / C+e\n+ ⌥← / ⌥→ 按单词前移/后移，相当与 C+f / C+b，其实这个功能在Iterm中已经预定义好了，⌥f / ⌥b，看个人习惯了\n\n### tmux 整合\n\n`brew install tmux`，然后在oh my zsh的配置文件.zshrc中的plugins 中添加tmux插件\n\n## zsh\n![zsh](http://pic4.zhimg.com/b691b3fa0ffb6d6c90761a98d3afab1b_b.jpg)\n\n[终极 Shell--ZSH](http://zhuanlan.zhihu.com/mactalk/19556676)\n\n### 安装\n1. 查看本机自带shell\n`cat /etc/shells`\n\n2. 安装\nmac用户跳过，Redhat用户 `sudo yum install zsh`，Ubuntu用户 `sudo apt-get install zsh`\n\n3. 设置zsh为默认shell\n`chsh -s /bin/zsh`\n\n### 特性\n+ 兼容bash shell\n+ 输入Commnd，按住上下键查看匹配的 shell 命令\n+ 智能拼写纠正\n+ 各种补全，`Tab+Tab`触发路径、命令和命令参数\n+ 只能跳转，利用`z`和`autojump`实现\n+ `d` `..` `.` 文件目录跳转补充\n+ `ls -l **/*.sh` 递归显示当前目录下的shell文件\n+ 强大的alias系统 \n\n    我的别名，参考MacTalk的配置\n\n    ```\n    alias cls='clear'\n    alias ll='ls -l'\n    alias vi='vim'\n    alias javac=\"javac -J-Dfile.encoding=utf8\"\n    alias grep=\"grep --color=auto\"\n    alias -s html=vi   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开\n    alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似\n    alias -s js=vi\n    alias -s c=vi\n    alias -s java=vi\n    alias -s txt=vi\n    alias -s gz='tar -xzvf'\n    alias -s tgz='tar -xzvf'\n    alias -s zip='unzip'\n    alias -s bz2='tar -xjvf'\n    ```\n+ 插件，结合Oh my zsh实现\n\n## oh my zsh\n\n![oh my zsh](http://ohmyz.sh/img/OMZLogo_BnW.png)\n\n[oh my zsh官网](http://ohmyz.sh/)\n\n### 安装\n\n自动安装\n\n`wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh`\n\n手动安装\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 主题\n\n上个图\n\n![agnoster](https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\n1. 安装 Powerline\n    [Powerline 官网](http://powerline.readthedocs.org/en/latest/installation.html)\n\n    如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n    `pip install powerline-status`\n\n    如果没有，则先执行安装pip指令\n\n    `sudo easy_install pip`\n\n2. 下载安装字体库\n\n    + 将工程下载下来后cd到install.sh文件所在目录\n\n    + 执行指令安装字体库\n\n        执行./install.sh指令安装所有Powerline字体\n\n    + 安装完成后提示所有字体均已下载到/Users/superdanny/Library/Fonts路径下\n\n        `All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n3. 设置iterm2的Regular Font和Non-ASCII Font\n\n    安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n    \n4. 配色方案\n\n    + 安装配色方案\n\n        进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n    + 配置配色方案\n\n        通过load presets选择刚刚安装的配色主题即可\n        \n5. 使用agnoster主题\n    + 下载agnoster主题\n        \n        到下载的工程里面运行install文件,主题将安装到~/.oh-my-zsh/themes目录下\n\n    + 设置该主题\n        \n        进入~/.zshrc打开.zshrc文件，然后将ZSH_THEME后面的字段改为agnoster。ZSH_THEME=\"agnoster\"（agnoster即为要设置的主题）\n        \n6. 增加指令高亮效果 zsh-syntax-highlighting\n\n    指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n    + cd到.zshrc所在目录\n\n    + 执行指令将工程克隆到当前目录\n\n      `git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n    + 打开.zshrc文件，在最后添加下面内容\n\n      `source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`,保存文件。\n\n    + cd ~/.oh-my-zsh/custom/plugins\n\n    + 再次打开.zshrc文件，在最后面添加下面内容\n    \n      `plugins=(zsh-syntax-highlighting)`,保存文件。\n      \n### 插件\n\noh my zsh的插件在`~/.oh-my-zsh/plugins`目录下，默认有100多种。\n\n贴出我的配置\n\n`plugins=(git autojump osx mvn gradle z)`\n\n其中：\n\n1. osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。\n\n2. autojump：autojump是zsh下最强悍的插件。\n    + brew安装\n      \n      `brew install autojump`\n      \n    + 若无法安装，利用\n      \n      `wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.g`,解压缩后进入目录，执行`./install.sh`.\n      \n    + 最后把以下代码加入.zshrc：\n      \n      `[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh`\n      \n## fish shell\n\n![fish](http://fishshell.com/assets/img/Terminal_Logo_CRT_Small.png)\n\n[fishshell 官网](http://fishshell.com/)\n\n### 安装\n\n`brew install fish`\n\n### 切换\n\n`chsh -s /bin/fish`\n\n### 特点\n\n傻瓜式shell编程，相对应的现在有oh my fish，博客反馈不错，哪天装了试试。\n\n\n\n\n\n\n","slug":"iterm2-zsh-oh-my-zsh-配置","published":1,"updated":"2015-07-22T13:17:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg55001xb0xsuc9455dx"},{"title":"Mac软件推荐（一）","date":"2015-07-10T06:18:26.000Z","description":"题主有一年的mac经验，经常看池哥的mactalk和Brett大神的博客，感觉和mac比，windows就是bullshit，忠实mac粉~~","_content":"\n# 办公类\n\n先上图\n\n![img](http://cl.ly/bvD5/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-07-10%2014.23.24.png)\n\n## office办公系列 (推荐指数：★★★★★  好用指数：★)\n\n> safari for windows和office for mac简直就是Apple和Microsoft互黑的产品。----- 知乎文青\n\n该死的三贱客，用起来简直就是一种煎熬，卡到不行却又不能不用，这是一种无奈，也是一种妥协，算了，眼不见为净，此处省略一万字。  \n\n## iChm（推荐指数：★★★★★  好用指数：★★★★）\n\n绝对的chm文档小钢炮，显示一流，流畅度有待提高，但是绝对是查看chm文件的不二法门。该软件开源，不收费。\n\n## WizNote（推荐指数：★★★  好用指数：★★★）\n\n为知笔记，国内笔记的领头大哥。曾经试过无数的笔记软件，从最开始的evernote到麦库有道等。自从接触到markdown和latex后，发现富文本的笔记应用真的是不太好用，总是为tab键空几个、行间距多少等格式发愁，不关注内容本身。被markdown和latex洗脑后，就开始转战Brett大神家的nvALT笔记，奈何这货只能同步到simplenote，国内各种被墙。然后试过马克飞象，一直用到它开始收费为至，原本还想着咬咬牙买一年，奈何一看价格就歇菜啦。接着自己用sublime text的evernote插件，感觉特别好，奈何万恶的校园网无法上外网，被墙。所以只能用为知笔记，不过它家的mathjax支持还是很好的，就是字体有些丑。\n\n## MindNode（推荐指数：★★★★★  好用指数：★★★★★）\n\n强力推荐，mac上脑图的最佳软件，什么ithoughtX、MindMaple简直踢出一条街。简单的界面、简洁的操作以及后现代主义的脑图分支，其中不得不提它的分支很有神经元的感觉。强力推荐，脑图爱好者和喜欢总结的骚年们。\n\n","source":"_posts/Mac软件推荐.md","raw":"title: Mac软件推荐（一）\ntags: [tools,mac]\ndate: 2015-07-10 14:18:26\ncategories: tools\ndescription: 题主有一年的mac经验，经常看池哥的mactalk和Brett大神的博客，感觉和mac比，windows就是bullshit，忠实mac粉~~\n\n---\n\n# 办公类\n\n先上图\n\n![img](http://cl.ly/bvD5/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-07-10%2014.23.24.png)\n\n## office办公系列 (推荐指数：★★★★★  好用指数：★)\n\n> safari for windows和office for mac简直就是Apple和Microsoft互黑的产品。----- 知乎文青\n\n该死的三贱客，用起来简直就是一种煎熬，卡到不行却又不能不用，这是一种无奈，也是一种妥协，算了，眼不见为净，此处省略一万字。  \n\n## iChm（推荐指数：★★★★★  好用指数：★★★★）\n\n绝对的chm文档小钢炮，显示一流，流畅度有待提高，但是绝对是查看chm文件的不二法门。该软件开源，不收费。\n\n## WizNote（推荐指数：★★★  好用指数：★★★）\n\n为知笔记，国内笔记的领头大哥。曾经试过无数的笔记软件，从最开始的evernote到麦库有道等。自从接触到markdown和latex后，发现富文本的笔记应用真的是不太好用，总是为tab键空几个、行间距多少等格式发愁，不关注内容本身。被markdown和latex洗脑后，就开始转战Brett大神家的nvALT笔记，奈何这货只能同步到simplenote，国内各种被墙。然后试过马克飞象，一直用到它开始收费为至，原本还想着咬咬牙买一年，奈何一看价格就歇菜啦。接着自己用sublime text的evernote插件，感觉特别好，奈何万恶的校园网无法上外网，被墙。所以只能用为知笔记，不过它家的mathjax支持还是很好的，就是字体有些丑。\n\n## MindNode（推荐指数：★★★★★  好用指数：★★★★★）\n\n强力推荐，mac上脑图的最佳软件，什么ithoughtX、MindMaple简直踢出一条街。简单的界面、简洁的操作以及后现代主义的脑图分支，其中不得不提它的分支很有神经元的感觉。强力推荐，脑图爱好者和喜欢总结的骚年们。\n\n","slug":"Mac软件推荐","published":1,"updated":"2015-07-10T07:23:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg590024b0xswhalbuyf"},{"title":"IntelliJ IDEA14 教程","date":"2015-07-23T03:03:32.000Z","description":"IntelliJ IDEA在Mac OSX上的使用教程","_content":"\n##参考文献\n>[官方文档](https://www.jetbrains.com/idea/help/basics-and-installation.html)\n\n\n## 安装篇\n\n\n1. 在[JetBrains官网](https://www.jetbrains.com/idea/download/index.html)下载最新版的IDEA 14,主要有社区版和旗舰版.强烈推荐旗舰版，福利码生成器源码见[百度网盘](http://pan.baidu.com/s/1i38d23F)\n2. 安装`.dmg`文件.\n3. 安装Apple Java 6或者Oracle Java7/8.\n   \n   >**注意:** 对于Java 7/8用户来说，复制`/Applications/IntelliJ IDEA14.app/Contents/bin`下的`idea.properties`到`~/Library/Preferences/IntelliJ IDEA14`下；修改`idea.properties`中参数`JVMVersion`的值为`1.7*`或者`1.8*`。\n   \n4. 启动.\n\n## 相关概念\n\n### 工程（Project）\n\n> A project is an organizational unit that represents a complete software solution.\n\n**目录格式**\n\n`.idea`目录下包含一系列的XML格式的配置文件，例如：`comilper.xml` `encodings.xml` `modules.xml`根据命名代表工程的具体的功能的配置参数（名字、地址等）。\n\n`worksapce.xml`保存了你的个人配置信息，包括你系统、VCS和历史设置的信息，这个文件不能被共享。\n\n**文件格式**\n\n`.ipr`保存了核心的工程信息。\n\n`.iws`保存了个人的工作空间设置，该文件类型不能被版本控制软件控制。\n\n### 模块\n\n> A module is a discrete unit of functionality which you can compile, run, test and debug independently.\n\n`.iml`模块文件存放一个模块的配置信息，被放置在一个`Content Root`下。可以被共享。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/IntelliJ-IDEA14-教程.md","raw":"title: IntelliJ IDEA14 教程\ndate: 2015-07-23 11:03:32\ntags: [tools,IntelliJ IDEA]\ncategories: tools\ndescription: IntelliJ IDEA在Mac OSX上的使用教程\n---\n\n##参考文献\n>[官方文档](https://www.jetbrains.com/idea/help/basics-and-installation.html)\n\n\n## 安装篇\n\n\n1. 在[JetBrains官网](https://www.jetbrains.com/idea/download/index.html)下载最新版的IDEA 14,主要有社区版和旗舰版.强烈推荐旗舰版，福利码生成器源码见[百度网盘](http://pan.baidu.com/s/1i38d23F)\n2. 安装`.dmg`文件.\n3. 安装Apple Java 6或者Oracle Java7/8.\n   \n   >**注意:** 对于Java 7/8用户来说，复制`/Applications/IntelliJ IDEA14.app/Contents/bin`下的`idea.properties`到`~/Library/Preferences/IntelliJ IDEA14`下；修改`idea.properties`中参数`JVMVersion`的值为`1.7*`或者`1.8*`。\n   \n4. 启动.\n\n## 相关概念\n\n### 工程（Project）\n\n> A project is an organizational unit that represents a complete software solution.\n\n**目录格式**\n\n`.idea`目录下包含一系列的XML格式的配置文件，例如：`comilper.xml` `encodings.xml` `modules.xml`根据命名代表工程的具体的功能的配置参数（名字、地址等）。\n\n`worksapce.xml`保存了你的个人配置信息，包括你系统、VCS和历史设置的信息，这个文件不能被共享。\n\n**文件格式**\n\n`.ipr`保存了核心的工程信息。\n\n`.iws`保存了个人的工作空间设置，该文件类型不能被版本控制软件控制。\n\n### 模块\n\n> A module is a discrete unit of functionality which you can compile, run, test and debug independently.\n\n`.iml`模块文件存放一个模块的配置信息，被放置在一个`Content Root`下。可以被共享。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"IntelliJ-IDEA14-教程","published":1,"updated":"2015-07-23T04:04:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg5m0029b0xs80zxqfyk"},{"title":"FoldingText工具","date":"2015-07-09T02:03:55.000Z","description":"FoldingText 文本编辑工具的使用","_content":"\n## User Guide\n\n\n\n- Edit > Select > Expand Selection (Option-Command-Up)\n\n\n\n- Edit > Select > Contract Selection (Option-Command-Down)\n\n\n\n- Edit > Select > Undo Selection (Control-Z)\n\n\n\n- Edit > Select > Redo Selection (Control-Shift-Z)\n\n\n\n- Organize > Move Left (Command-[)\n\n\n\n- Organize > Move Right (Command-])\n\n\n\n- Organize > Move Up (Option-Command-[)\n\n\n\n- Organize > Move Down (Option-Command-[)\n\n\n\n- Organize > Move Branch Left (Control-Option-Left)\n\n\n\n- Organize > Move Branch Right (Control-Option-Right)\n\n\n\n- Organize > Move Branch Up (Control-Option-Up)\n\n\n\n- Organize > Move Branch Down (Control-Option-Down)\n\n\n\n- To open the command mode use the shortcut Command-'.\n\n\n\n- To create a property, type the property name (single word) followed by \" : \" (space, colon, space) on its own line.\n\n\n\n***\n\n##Node Path\n\n\n\nFoldingText是一个基于markdown语法的`#`级层组织的树形结构文档编辑器，其中的Node Path就像文档结构树的每个节点，其表现的形式类似文件系统的地址。\n\n\n\n```\n\n/myheading/subhead\n\n```\n\n###Node Path结构\n\n\n\n```\n\n//myheading/subhead\n\n```\n\n表示匹配所有一级标题是myheading的node path\n\n\n\n```\n\n/myheading//subheand\n\n```\n\n表示匹配myheading下所有subhead的node path\n\n\n\n```\n\n/myheading//subhead/@done/..*\n\n```\n\n表示匹配myheading下的subhead下@done的父类标题\n\n\n\n```\n\n/myheading///subhead\n\n```\n\n表示连同父标题一同显示\n\n\n\n```\n\n/myheading/ancestor::*\n\n```\n\n表示显示匹配断言的父节点\n\n\n\n```\n\n/myheading/ancestor-or-self::*\n\n```\n\n表示显示断言本身和它的父节点\n\n\n\n```\n\n/myheading/descendant::*\n\n```\n\n表示显示断言的后代\n\n\n\n```\n\n/myheading/descendant-or-self::*\n\n```\n\n表示显示断言的后代和本身\n\n\n\n```\n\n/myheading/following::*\n\n```\n\n表示显示断言后的所有节点\n\n\n\n```\n\n/myheading/following-sibling::*\n\n```\n\n表示断言后的所有兄弟节点\n\n\n\n```\n\n/myheading/preceding::*\n\n```\n\n表示显示断言前的所有节点\n\n\n\n```\n\n/myheading/preceding-sibling::*\n\n```\n\n表示显示断言前的所有兄弟节点\n\n\n\n```\n\n/myheading/child::*\n\n```\n\n表示显示断言的孩子节点\n\n\n\n```\n\n/myheading/parent::*\n\n```\n\n表示显示断言的父节点\n\n\n\n```\n\n/myheading/self::*\n\n```\n\n表示显示断言本身\n\n\n\n```\n\n/myheading/filter-descendants::*\n\n```\n\n表示连同后代节点一同显示\n\n\n\n###Node Path操作\n\n`union`交集\n\n`intersect`并集\n\n`except`除去\n\n\n\n###Node Path断言\n\n```\n\n@<attribute> <relation> <search>\n\n```\n\n#### attribute\n\n1. 内置属性\n\n\n\n+ `type`： `heading`;`ordered`;`unordered`;`blockquote`;`codeblock`;`linkdef`;`property`;`body`;`term`;`definition`;`horizontalrule`;`empty`;\n\n\n\n+ `line`\n\n\n\n+ `mode`\n\n\n\n+ `modeContext`\n\n\n\n+ `id`\n\n\n\n+ `property`\n\n\n\n2. 标签属性\n\n\n\n@priority(1)\n\n\n\n```\n\n@priority = 1\n\n```\n\n\n\n3. line的内置属性\n\n\n\n```\n\n@line:strong\n\n@line:text\n\n```\n\n\n\n4. Property属性\n\n\n\n```\n\n@property:myproperty = with value\n\n```\n\n\n\n####relation\n\n`=` `!=` `<` `>` `<=` `>=` `beginswith` `endswith` `matches` `contains`\n\n\n\n```\n\n@line contains [modifier] value\n\n```\n\n其中的modifer是修饰预，主要包括：\n\n\n\n+ `i`:转化为小写字母，默认修饰符\n\n+ `s`:不做任何修改\n\n+ `n`:数字模式比较\n\n+ `d`:日期模式比较\n\n\n\n####value\n\n如果是特殊的符号，必须用`\"\"`包裹\n\n\n\n```\n\n@line contains \"=\"\n\n```\n\n####布尔表达式\n\n`and` `or` `not`\n\n\n\n###结果分片\n\n`[0]`的使用\n\n\n\n```\n\n/project//task not @done[0]\n\n```\n\n返回每一个project目录下第一个未完成的任务\n\n\n\n```\n\n(//task not @done)[0]\n\n```\n\n返回第一个未完成的任务\n\n\n\n`[start:end]`\n\n\n\n`[start:]`\n\n\n\n`[:end]`\n\n\n\n`[:]`\n\n\n\n`[index]`\n\n***\n\n##相关资料\n\n[FoldingText, 伪装成 markdown 编辑器的 outliner](http://www.v2ex.com/t/123024)\n\n\n\n[FoldingText Support](http://support.foldingtext.com/)\n\n\n\n[FoldingText概述](https://velocityofrelease.wordpress.com/2014/06/13/foldingtext-2-%E6%A6%82%E8%AB%96/#foldingtext-2-概論)\n\n\n","source":"_posts/FoldingText工具.md","raw":"title: FoldingText工具\ndate: 2015-07-09 10:03:55\ncategories: tools\ntags: [tools,FoldingText]\ndescription: FoldingText 文本编辑工具的使用\n---\n\n## User Guide\n\n\n\n- Edit > Select > Expand Selection (Option-Command-Up)\n\n\n\n- Edit > Select > Contract Selection (Option-Command-Down)\n\n\n\n- Edit > Select > Undo Selection (Control-Z)\n\n\n\n- Edit > Select > Redo Selection (Control-Shift-Z)\n\n\n\n- Organize > Move Left (Command-[)\n\n\n\n- Organize > Move Right (Command-])\n\n\n\n- Organize > Move Up (Option-Command-[)\n\n\n\n- Organize > Move Down (Option-Command-[)\n\n\n\n- Organize > Move Branch Left (Control-Option-Left)\n\n\n\n- Organize > Move Branch Right (Control-Option-Right)\n\n\n\n- Organize > Move Branch Up (Control-Option-Up)\n\n\n\n- Organize > Move Branch Down (Control-Option-Down)\n\n\n\n- To open the command mode use the shortcut Command-'.\n\n\n\n- To create a property, type the property name (single word) followed by \" : \" (space, colon, space) on its own line.\n\n\n\n***\n\n##Node Path\n\n\n\nFoldingText是一个基于markdown语法的`#`级层组织的树形结构文档编辑器，其中的Node Path就像文档结构树的每个节点，其表现的形式类似文件系统的地址。\n\n\n\n```\n\n/myheading/subhead\n\n```\n\n###Node Path结构\n\n\n\n```\n\n//myheading/subhead\n\n```\n\n表示匹配所有一级标题是myheading的node path\n\n\n\n```\n\n/myheading//subheand\n\n```\n\n表示匹配myheading下所有subhead的node path\n\n\n\n```\n\n/myheading//subhead/@done/..*\n\n```\n\n表示匹配myheading下的subhead下@done的父类标题\n\n\n\n```\n\n/myheading///subhead\n\n```\n\n表示连同父标题一同显示\n\n\n\n```\n\n/myheading/ancestor::*\n\n```\n\n表示显示匹配断言的父节点\n\n\n\n```\n\n/myheading/ancestor-or-self::*\n\n```\n\n表示显示断言本身和它的父节点\n\n\n\n```\n\n/myheading/descendant::*\n\n```\n\n表示显示断言的后代\n\n\n\n```\n\n/myheading/descendant-or-self::*\n\n```\n\n表示显示断言的后代和本身\n\n\n\n```\n\n/myheading/following::*\n\n```\n\n表示显示断言后的所有节点\n\n\n\n```\n\n/myheading/following-sibling::*\n\n```\n\n表示断言后的所有兄弟节点\n\n\n\n```\n\n/myheading/preceding::*\n\n```\n\n表示显示断言前的所有节点\n\n\n\n```\n\n/myheading/preceding-sibling::*\n\n```\n\n表示显示断言前的所有兄弟节点\n\n\n\n```\n\n/myheading/child::*\n\n```\n\n表示显示断言的孩子节点\n\n\n\n```\n\n/myheading/parent::*\n\n```\n\n表示显示断言的父节点\n\n\n\n```\n\n/myheading/self::*\n\n```\n\n表示显示断言本身\n\n\n\n```\n\n/myheading/filter-descendants::*\n\n```\n\n表示连同后代节点一同显示\n\n\n\n###Node Path操作\n\n`union`交集\n\n`intersect`并集\n\n`except`除去\n\n\n\n###Node Path断言\n\n```\n\n@<attribute> <relation> <search>\n\n```\n\n#### attribute\n\n1. 内置属性\n\n\n\n+ `type`： `heading`;`ordered`;`unordered`;`blockquote`;`codeblock`;`linkdef`;`property`;`body`;`term`;`definition`;`horizontalrule`;`empty`;\n\n\n\n+ `line`\n\n\n\n+ `mode`\n\n\n\n+ `modeContext`\n\n\n\n+ `id`\n\n\n\n+ `property`\n\n\n\n2. 标签属性\n\n\n\n@priority(1)\n\n\n\n```\n\n@priority = 1\n\n```\n\n\n\n3. line的内置属性\n\n\n\n```\n\n@line:strong\n\n@line:text\n\n```\n\n\n\n4. Property属性\n\n\n\n```\n\n@property:myproperty = with value\n\n```\n\n\n\n####relation\n\n`=` `!=` `<` `>` `<=` `>=` `beginswith` `endswith` `matches` `contains`\n\n\n\n```\n\n@line contains [modifier] value\n\n```\n\n其中的modifer是修饰预，主要包括：\n\n\n\n+ `i`:转化为小写字母，默认修饰符\n\n+ `s`:不做任何修改\n\n+ `n`:数字模式比较\n\n+ `d`:日期模式比较\n\n\n\n####value\n\n如果是特殊的符号，必须用`\"\"`包裹\n\n\n\n```\n\n@line contains \"=\"\n\n```\n\n####布尔表达式\n\n`and` `or` `not`\n\n\n\n###结果分片\n\n`[0]`的使用\n\n\n\n```\n\n/project//task not @done[0]\n\n```\n\n返回每一个project目录下第一个未完成的任务\n\n\n\n```\n\n(//task not @done)[0]\n\n```\n\n返回第一个未完成的任务\n\n\n\n`[start:end]`\n\n\n\n`[start:]`\n\n\n\n`[:end]`\n\n\n\n`[:]`\n\n\n\n`[index]`\n\n***\n\n##相关资料\n\n[FoldingText, 伪装成 markdown 编辑器的 outliner](http://www.v2ex.com/t/123024)\n\n\n\n[FoldingText Support](http://support.foldingtext.com/)\n\n\n\n[FoldingText概述](https://velocityofrelease.wordpress.com/2014/06/13/foldingtext-2-%E6%A6%82%E8%AB%96/#foldingtext-2-概論)\n\n\n","slug":"FoldingText工具","published":1,"updated":"2015-07-10T07:28:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicnbcg5s002eb0xsr5auo5r1"}],"PostAsset":[],"PostCategory":[{"post_id":"cicnbcg3p0005b0xslm8u0ord","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg3v0009b0xsmp1m3t7a"},{"post_id":"cicnbcg3x000cb0xsa2q2flwh","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg3z000db0xskudft9u3"},{"post_id":"cicnbcg40000gb0xs11z3gvie","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg41000hb0xsh63erq6s"},{"post_id":"cicnbcg42000kb0xse7629tsi","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg43000lb0xs9o83vve1"},{"post_id":"cicnbcg45000ob0xsi5pi2vcb","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg47000pb0xsztvfl4ix"},{"post_id":"cicnbcg49000sb0xs7gmghrb6","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg4a000tb0xsvie2b602"},{"post_id":"cicnbcg4c000wb0xsfs1l3cts","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg4e000xb0xsqht1z92s"},{"post_id":"cicnbcg4h0010b0xs04o1wg7w","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg4i0011b0xs8oodqgwz"},{"post_id":"cicnbcg4k0014b0xs8afvzwei","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg4n0015b0xsbggvpgge"},{"post_id":"cicnbcg4q0018b0xs52zu3mqg","category_id":"cicnbcg3t0006b0xs96ckra3m","_id":"cicnbcg4s0019b0xs2ca7diid"},{"post_id":"cicnbcg4t001cb0xsqr938f2t","category_id":"cicnbcg4v001db0xsgm8rrk66","_id":"cicnbcg4v001gb0xs4dnn1ac4"},{"post_id":"cicnbcg4x001jb0xs8o4rx8wo","category_id":"cicnbcg4y001kb0xsvpjnd495","_id":"cicnbcg4z001nb0xsdlluclyx"},{"post_id":"cicnbcg50001qb0xsl01cw11d","category_id":"cicnbcg51001rb0xs9kzkbvwo","_id":"cicnbcg52001ub0xso4fxtn86"},{"post_id":"cicnbcg55001xb0xsuc9455dx","category_id":"cicnbcg4y001kb0xsvpjnd495","_id":"cicnbcg56001yb0xsxh03w4os"},{"post_id":"cicnbcg590024b0xswhalbuyf","category_id":"cicnbcg4y001kb0xsvpjnd495","_id":"cicnbcg5j0025b0xs23v5nrkm"},{"post_id":"cicnbcg5m0029b0xs80zxqfyk","category_id":"cicnbcg4y001kb0xsvpjnd495","_id":"cicnbcg5o002ab0xs31vhclrw"},{"post_id":"cicnbcg5s002eb0xsr5auo5r1","category_id":"cicnbcg4y001kb0xsvpjnd495","_id":"cicnbcg5v002fb0xs5u3metma"}],"PostTag":[{"post_id":"cicnbcg3p0005b0xslm8u0ord","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg3w000ab0xsnlrh398c"},{"post_id":"cicnbcg3p0005b0xslm8u0ord","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg3w000bb0xs1tlmvtlg"},{"post_id":"cicnbcg3x000cb0xsa2q2flwh","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg3z000eb0xson5ajkgs"},{"post_id":"cicnbcg3x000cb0xsa2q2flwh","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg3z000fb0xsqdx5ge33"},{"post_id":"cicnbcg40000gb0xs11z3gvie","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg41000ib0xs1nao4mr9"},{"post_id":"cicnbcg40000gb0xs11z3gvie","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg41000jb0xs1zx7u7v5"},{"post_id":"cicnbcg42000kb0xse7629tsi","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg44000mb0xspoweu6m1"},{"post_id":"cicnbcg42000kb0xse7629tsi","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg44000nb0xsqe86zybl"},{"post_id":"cicnbcg45000ob0xsi5pi2vcb","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg47000qb0xsa9noxt1i"},{"post_id":"cicnbcg45000ob0xsi5pi2vcb","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg48000rb0xsqhp8tjy9"},{"post_id":"cicnbcg49000sb0xs7gmghrb6","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg4b000ub0xs6b8irt8s"},{"post_id":"cicnbcg49000sb0xs7gmghrb6","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg4b000vb0xswf3ak99s"},{"post_id":"cicnbcg4c000wb0xsfs1l3cts","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg4e000yb0xsg3g939lo"},{"post_id":"cicnbcg4c000wb0xsfs1l3cts","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg4f000zb0xs0en5cs14"},{"post_id":"cicnbcg4h0010b0xs04o1wg7w","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg4i0012b0xsh1k6zs1p"},{"post_id":"cicnbcg4h0010b0xs04o1wg7w","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg4j0013b0xsrkpdyek2"},{"post_id":"cicnbcg4k0014b0xs8afvzwei","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg4o0016b0xsmeswnhwn"},{"post_id":"cicnbcg4k0014b0xs8afvzwei","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg4p0017b0xsv3kvik6m"},{"post_id":"cicnbcg4q0018b0xs52zu3mqg","tag_id":"cicnbcg3t0007b0xs0rin1zmk","_id":"cicnbcg4s001ab0xsd3edffsa"},{"post_id":"cicnbcg4q0018b0xs52zu3mqg","tag_id":"cicnbcg3v0008b0xswm2mscmt","_id":"cicnbcg4s001bb0xs60e30d6u"},{"post_id":"cicnbcg4t001cb0xsqr938f2t","tag_id":"cicnbcg4v001eb0xsa1masb7l","_id":"cicnbcg4w001hb0xsbgemloyl"},{"post_id":"cicnbcg4t001cb0xsqr938f2t","tag_id":"cicnbcg4v001fb0xsdowqwjbt","_id":"cicnbcg4w001ib0xs4dfqvulc"},{"post_id":"cicnbcg4x001jb0xs8o4rx8wo","tag_id":"cicnbcg4y001lb0xsk4q35qhj","_id":"cicnbcg4z001ob0xssa9n0lle"},{"post_id":"cicnbcg4x001jb0xs8o4rx8wo","tag_id":"cicnbcg4z001mb0xsct2wtm0m","_id":"cicnbcg4z001pb0xsez0imlca"},{"post_id":"cicnbcg50001qb0xsl01cw11d","tag_id":"cicnbcg51001sb0xs9j43ooxj","_id":"cicnbcg52001vb0xsh1w5rayg"},{"post_id":"cicnbcg50001qb0xsl01cw11d","tag_id":"cicnbcg51001tb0xshgazzdkf","_id":"cicnbcg52001wb0xscm8milg0"},{"post_id":"cicnbcg55001xb0xsuc9455dx","tag_id":"cicnbcg4y001lb0xsk4q35qhj","_id":"cicnbcg570021b0xsvpcic8rh"},{"post_id":"cicnbcg55001xb0xsuc9455dx","tag_id":"cicnbcg56001zb0xsy0zfpos4","_id":"cicnbcg570022b0xso6d9ouj9"},{"post_id":"cicnbcg55001xb0xsuc9455dx","tag_id":"cicnbcg560020b0xs6k3o2rpq","_id":"cicnbcg570023b0xsi6zj47zq"},{"post_id":"cicnbcg590024b0xswhalbuyf","tag_id":"cicnbcg4y001lb0xsk4q35qhj","_id":"cicnbcg5k0027b0xsxsr6nno1"},{"post_id":"cicnbcg590024b0xswhalbuyf","tag_id":"cicnbcg5j0026b0xs1upknndr","_id":"cicnbcg5k0028b0xsd9qj0cs6"},{"post_id":"cicnbcg5m0029b0xs80zxqfyk","tag_id":"cicnbcg4y001lb0xsk4q35qhj","_id":"cicnbcg5q002cb0xsk8jzcisq"},{"post_id":"cicnbcg5m0029b0xs80zxqfyk","tag_id":"cicnbcg5p002bb0xswytoplmq","_id":"cicnbcg5q002db0xsy2m4pchd"},{"post_id":"cicnbcg5s002eb0xsr5auo5r1","tag_id":"cicnbcg4y001lb0xsk4q35qhj","_id":"cicnbcg5x002hb0xsdiassb9k"},{"post_id":"cicnbcg5s002eb0xsr5auo5r1","tag_id":"cicnbcg5w002gb0xsjrs3tky8","_id":"cicnbcg5x002ib0xs8rqjx5in"}],"Tag":[{"name":"code","_id":"cicnbcg3t0007b0xs0rin1zmk"},{"name":"leetcode","_id":"cicnbcg3v0008b0xswm2mscmt"},{"name":"life","_id":"cicnbcg4v001eb0xsa1masb7l"},{"name":"running","_id":"cicnbcg4v001fb0xsdowqwjbt"},{"name":"tools","_id":"cicnbcg4y001lb0xsk4q35qhj"},{"name":"mdpress","_id":"cicnbcg4z001mb0xsct2wtm0m"},{"name":"hexo","_id":"cicnbcg51001sb0xs9j43ooxj"},{"name":"blog","_id":"cicnbcg51001tb0xshgazzdkf"},{"name":"iterm2","_id":"cicnbcg56001zb0xsy0zfpos4"},{"name":"zsh","_id":"cicnbcg560020b0xs6k3o2rpq"},{"name":"mac","_id":"cicnbcg5j0026b0xs1upknndr"},{"name":"IntelliJ IDEA","_id":"cicnbcg5p002bb0xswytoplmq"},{"name":"FoldingText","_id":"cicnbcg5w002gb0xsjrs3tky8"}]}}