{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1},{"_id":"themes/next/source/js/search-toggle.js","path":"js/search-toggle.js","modified":1},{"_id":"themes/next/source/js/motion_global.js","path":"js/motion_global.js","modified":1},{"_id":"themes/next/source/js/motion_fallback.js","path":"js/motion_fallback.js","modified":1},{"_id":"themes/next/source/js/helpers.js","path":"js/helpers.js","modified":1},{"_id":"themes/next/source/js/fancy-box.js","path":"js/fancy-box.js","modified":1},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":1},{"_id":"themes/next/source/js/analytics_google-analytics.js","path":"js/analytics_google-analytics.js","modified":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","path":"images/bkdefault_avatar.jpg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","path":"fonts/icon-linecons/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","path":"fonts/icon-linecons/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","path":"fonts/icon-linecons/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","path":"fonts/icon-linecons/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","path":"fonts/icon-icomoon/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","path":"fonts/icon-icomoon/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","path":"fonts/icon-icomoon/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","path":"fonts/icon-icomoon/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","path":"fonts/icon-fifty-shades/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","path":"fonts/icon-fifty-shades/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","path":"fonts/icon-fifty-shades/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","path":"fonts/icon-fifty-shades/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","path":"fonts/icon-feather/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","path":"fonts/icon-feather/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","path":"fonts/icon-feather/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","path":"fonts/icon-feather/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","path":"fonts/icon-default/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","path":"fonts/icon-default/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","path":"fonts/icon-default/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","path":"fonts/icon-default/icomoon.eot","modified":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1}],"Cache":[{"_id":"source/404.html","shasum":"c529c9996250082ea7eb024078bef33e88e01353","modified":1436334960000},{"_id":"source/_posts/FoldingText工具.md","shasum":"2bf0684c401e0ab587d8fe78f1c8d549e7d34cff","modified":1436513332000},{"_id":"source/_posts/Guice框架学习.md","shasum":"43baddfd536934511753ea546efc92833a7f2d9d","modified":1439090109000},{"_id":"source/_posts/KMP算法详解.md","shasum":"7ad2c31f5bd4c5db6e09a4960df88cdeb5aaacce","modified":1439089714000},{"_id":"source/_posts/Mac软件推荐.md","shasum":"129e8769bfbc2472ea9a711a0338f527bae610c0","modified":1436513004000},{"_id":"source/_posts/iterm2-zsh-oh-my-zsh-配置.md","shasum":"de4f6db79f1c7dc1067315ba75c71d66d3cb87a3","modified":1437571070000},{"_id":"source/_posts/利用github和hexo搭建静态博客.md","shasum":"68e715d0582c914d35a89fa00ca8949ac57f03dc","modified":1436449787000},{"_id":"source/_posts/取代PPT的mdpress.md","shasum":"87e24e00b2978972828d9c916cd3fe0585bd81e9","modified":1437842779000},{"_id":"source/_posts/慢跑鞋入门.md","shasum":"2d337ba367b8f444c8a0a563b081b6b34d29b553","modified":1437395785000},{"_id":"source/_posts/我的日程安排-Taskpaper和Reminder.md","shasum":"e7841f67c617ca925f511626f6b6b772dbfa5111","modified":1438250360000},{"_id":"source/_posts/每日一题-Compare-Version-Numbers.md","shasum":"6fae0c8bacce06e9e0986472395008d2ff59741a","modified":1438042541000},{"_id":"source/_posts/每日一题-Count-and-Say.md","shasum":"12911f3007b9c679506db1a2883b6f635f319341","modified":1438086106000},{"_id":"source/_posts/每日一题-Implement-strStr.md","shasum":"4993928150c3f3ae62539ec257dc4ab3d2d31ebb","modified":1438249460000},{"_id":"source/_posts/每日一题-Length-of-Last-Word.md","shasum":"72fad8f976255b8a72dee6fafa74d424861c3114","modified":1437973707000},{"_id":"source/_posts/每日一题-Longest-Common-Prefix.md","shasum":"d79d473f3922e98e39a9667ae66560ab5c802b94","modified":1437904060000},{"_id":"source/_posts/每日一题-Roman-to-Integer.md","shasum":"d1b8566fcbef0ad009af3ba29bd08bdbed5a1856","modified":1437875393000},{"_id":"source/_posts/每日一题-String-to-Integer.md","shasum":"0f40aa459ee28f87c9af0a86f867ce41fcb29517","modified":1437811589000},{"_id":"source/_posts/每日一题-Valid-Palindrome.md","shasum":"bd095dc4d2ebbc7e4a98722f14466760486afd27","modified":1437793319000},{"_id":"source/_posts/每日一题-Valid-Parentheses.md","shasum":"75f14d2741e490864b9f933ad01ce03a5bc5c624","modified":1437786394000},{"_id":"source/_posts/每日一题-ZigZag-Conversion.md","shasum":"9db7ae79daafbc2ede6bf962484fa069ce6ea431","modified":1437723800000},{"_id":"source/_posts/每日一题-add-Binary.md","shasum":"b0eaa2c7211b5adfa671196f2688a4ed68713626","modified":1437641798000},{"_id":"source/about/index.md","shasum":"220bd36ade2a46a6e653f36c462f22e91a83c3c4","modified":1436415469000},{"_id":"source/categories/index.md","shasum":"a6c1ed11b6bb66eea8f699a37070be48c9f6e653","modified":1436333517000},{"_id":"source/guestbook/index.md","shasum":"ab6e4c7ef46d5546b9380b3a3231fd9df6bdcc56","modified":1436435089000},{"_id":"source/images/avatar.jpg","shasum":"c8c78534fac0eec586b4eb9df57c44a99a89a6e4","modified":1436334101000},{"_id":"source/tags/index.md","shasum":"f8a2cb5f78cfa5b3af082e4312295a52453561d0","modified":1436333219000},{"_id":"themes/next/source/css/_common/_page/home.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1435512456000},{"_id":"themes/next/_config.yml","shasum":"fba7bf7de41431cb0de543b89034b9950c487e65","modified":1437268371000},{"_id":"themes/next/languages/de.yml","shasum":"784bea46de28a3113d7c91621740f521dae09dce","modified":1435512456000},{"_id":"themes/next/languages/default.yml","shasum":"d0cad2843283dd2a62cb8d1a2ed182a368210aca","modified":1435512456000},{"_id":"themes/next/languages/fr-FR.yml","shasum":"9ee1011db6307df957684c83f39ac7499391924c","modified":1435512456000},{"_id":"themes/next/languages/ru.yml","shasum":"60cc1fb273adfd84137a207dd9d0d00f08605ccd","modified":1435512456000},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"eea72130f71954bcf5ef294f1ccd28b3ba1b5231","modified":1436414230000},{"_id":"themes/next/languages/zh-hk.yml","shasum":"e58766e0af5abf0705ccca4a5fc86d1be03db198","modified":1435512456000},{"_id":"themes/next/languages/zh-tw.yml","shasum":"d34c5781a231978e66852784ad00c9895a7de022","modified":1435512456000},{"_id":"themes/next/layout/_layout.swig","shasum":"1f97eaa9d7a88e39aa72c6165dd4459fc3b7421e","modified":1436340079000},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"f557c443e7d5f76bb53482189eb1c90d09331a6f","modified":1435512456000},{"_id":"themes/next/layout/_macro/post.swig","shasum":"852055e4044aa25d46d61f5d4929173c8dc97430","modified":1436442656000},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"c13f4c28e04da43fc892f9d53547b4119746808e","modified":1437724462000},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"72eac86e77cd84955eddc2c0a11b82461714c809","modified":1437582824000},{"_id":"themes/next/layout/_partials/head.swig","shasum":"3c7bb56ab8c15fbe19c091c33bfc16dc479da33c","modified":1435512456000},{"_id":"themes/next/layout/_partials/header.swig","shasum":"e0395fe527fe675349844ec40760075713f78954","modified":1437195866000},{"_id":"themes/next/layout/_partials/old-browsers.swig","shasum":"dbbfea810bf3a2ed9c83b9a6683037175aacfc67","modified":1435512456000},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"33d3d6c4417ea88e602dcb116b0604a1955dc5fe","modified":1435512456000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"ee0c2540e8178f390051af7d365a42ae68375afa","modified":1435512456000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"94beb0764ccbbba0c9f5c9886cc656bf879bcfd5","modified":1435512456000},{"_id":"themes/next/layout/_partials/search.swig","shasum":"8a18d32e2a257dafaaba75353692db901e1dddc5","modified":1435512456000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1435512456000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"63315fcf210799f894208c9f512737096df84962","modified":1435512456000},{"_id":"themes/next/layout/_scripts/analytics/baidu-analytics.swig","shasum":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1435512456000},{"_id":"themes/next/layout/_scripts/analytics/google-analytics.swig","shasum":"8210537cc42519aba6291d94e3d328032838bd3e","modified":1435512456000},{"_id":"themes/next/layout/_scripts/baidushare.swig","shasum":"d726361945437cf6e48067b3dd041b7e36e98d85","modified":1435512456000},{"_id":"themes/next/layout/_scripts/bootstrap.scrollspy.swig","shasum":"85295f126836b95f0837d03e58228bb3cf8c4490","modified":1435512456000},{"_id":"themes/next/layout/_scripts/comments/disqus.swig","shasum":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1435512456000},{"_id":"themes/next/layout/_scripts/comments/duoshuo.swig","shasum":"8e8f89976c5be14857017093f399ef5edad8ce89","modified":1435512456000},{"_id":"themes/next/layout/_scripts/fancy-box.swig","shasum":"41b4ff1446060c88c33bf666a32277dcf12129f0","modified":1435512456000},{"_id":"themes/next/layout/_scripts/helpers.swig","shasum":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1435512456000},{"_id":"themes/next/layout/_scripts/mathjax.swig","shasum":"abc52fefb276c52cbb19de5c214521dfcf2a10fd","modified":1435512456000},{"_id":"themes/next/layout/_scripts/motion.swig","shasum":"817705bfd1a1282cb6bf59094afe507e11455aa0","modified":1435512456000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"7fcd57c9f5b64635f2bd4cc8ee7c98d36dceda7a","modified":1435512456000},{"_id":"themes/next/layout/archive.swig","shasum":"27b258cb0111ba29247c3971b9584432f0836c77","modified":1435512456000},{"_id":"themes/next/layout/category.swig","shasum":"624d0a5c4f3e936b15539c35d6c06ba9338a4414","modified":1435512456000},{"_id":"themes/next/layout/index.swig","shasum":"493580984b5976c8029a4cc8c630a4b6dd48fcfc","modified":1435512456000},{"_id":"themes/next/layout/page.swig","shasum":"cf5fa12bd10fe5608cf794dae7e3739628821833","modified":1436431416000},{"_id":"themes/next/layout/post.swig","shasum":"7aa87056753fa67e47e9246d00093d3512d3fc9e","modified":1435512456000},{"_id":"themes/next/layout/tag.swig","shasum":"f1dcfbc0eef76f1f6be29f31a343338d5bbfe814","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/back-to-top.styl","shasum":"88cd66910260006aa8e9e795df4948d4b67bfa11","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/buttons.styl","shasum":"81063e0979f04a0f9af37f321d7321dda9abf593","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/comments.styl","shasum":"54e73681ba6f57ef961138f94d2ee8ac845990c3","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/duoshuo.styl","shasum":"b54d0c5a911303cb2fd4bfc84134811a502e5653","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/gallery.styl","shasum":"fa6e23ebddb6f235803b51974f36be2a43b2c9c4","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/jiathis.styl","shasum":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/pagination.styl","shasum":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-collapse.styl","shasum":"8f9e8f5f65956ccf1d52ff8526392803dff579d3","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","shasum":"4b82dbbb6e536e6e8ee3cec6e62c2fd4bea60a09","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/posts-type.styl","shasum":"40b593134bf96d1d6095b3439d47820659d7f10b","modified":1435512456000},{"_id":"themes/next/source/css/_common/_component/tag-cloud.styl","shasum":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/base.styl","shasum":"ff75d9d6b2949588964bb62223ebe88d89127b96","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/helpers.styl","shasum":"41a31d651b60b4f458fc56a1d191dfbbdcb6d794","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/normalize.styl","shasum":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/scaffolding.styl","shasum":"d776e241cf650b00ee1dd21b9ff377c250d9eeaa","modified":1435512456000},{"_id":"themes/next/source/css/_common/_core/tables.styl","shasum":"be6c1a04595cf38673511366a3d89fcdb046f533","modified":1435512456000},{"_id":"themes/next/README.en.md","shasum":"1771ed0b5e5dec42bd2c497d2c3e0861d464f030","modified":1435512456000},{"_id":"themes/next/bower.json","shasum":"1a681eeb5bff68be34e4e5226678c6cd3a7a12cc","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-default.styl","shasum":"2d61bde579d838c4f3239ca38285070db6e75d5f","modified":1436419747000},{"_id":"themes/next/README.md","shasum":"aa16555d1aa1d80666ab9085042e118cdb7f5ef2","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-font.styl","shasum":"1e83380b44e3b1d976e6d28bb24c5f38cb6cfa61","modified":1436419798000},{"_id":"themes/next/source/css/_common/_page/archive.styl","shasum":"dff879f55ca65fa79c07e9098719e53eeea7ac88","modified":1435512456000},{"_id":"themes/next/source/css/_common/_page/categories.styl","shasum":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1435512456000},{"_id":"themes/next/source/css/_common/_page/post-detail.styl","shasum":"73796f6f13caa7151a2ee8e55755627e0d189f55","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/body.styl","shasum":"ca1a4766cbe25baac757c6b47a4858d221afdc40","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/footer.styl","shasum":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/header.styl","shasum":"c561330bf3caa3eb958df561fef004c4ac190490","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/layout.styl","shasum":"4daaadd156ece64ae05908ad6bb0159c8a27c071","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/media.styl","shasum":"fa9809d2ecc753cf32f70803c1d0821c405211f4","modified":1435512456000},{"_id":"themes/next/source/css/_common/_section/sidebar.styl","shasum":"d57e1769ebd2c472d2b27d17a706d3f564f94033","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-feather.styl","shasum":"f49f8966496166bd62f79f75a3277d4d5b1102e8","modified":1435512456000},{"_id":"themes/next/source/css/_common/_vendor/highlight/highlight.styl","shasum":"6259f4780f2aae1e6f85b892d8822c1c7ebc28bc","modified":1435512456000},{"_id":"themes/next/source/css/_common/_vendor/highlight/theme.styl","shasum":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1435512456000},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"68b6859fb48fe8358e567fc324f218cecfc3a533","modified":1435512456000},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"66985fe77bd323f7f8f634908e17166f51e96e95","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"b0037a87ee1a613f315c331e8ecf1673c6d82211","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-fifty-shades.styl","shasum":"90e68936ea0f26af93c2c517fe1b891538f9c1b1","modified":1435512456000},{"_id":"themes/next/source/css/_common/_fonts/icon-linecons.styl","shasum":"e63ecfa510b6b74abd169e5a786382bde9e07e57","modified":1436677993000},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"f5dda1ca48c1b73a0bd34e08413de57699f24083","modified":1435512456000},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"59acc8bf6e6b55f576b001e520e048cd0ca801fb","modified":1435512456000},{"_id":"themes/next/source/css/main.styl","shasum":"b05c342e94ded24a5f2b203cedf77d3faa817fd5","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","shasum":"a58d5e893c6faefc90d5c2589cc314dff8ffca7a","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","shasum":"4f18f0bb815b1aeba57739069c3416106240b7c1","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","shasum":"e6452f07b050ee0ff265b3b99a1e7ef82eb561b2","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","shasum":"4d0adc55240f331c6de225e23afd76ea5318da9c","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","shasum":"6d0eb1a5bfef4f2bf77089bd090e88c5b2f7944d","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/_menu.styl","shasum":"4bba29cece65ffc5122f4e052063dea4439fe4ae","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","shasum":"690836f81c0feb1a49e2253d4f984ad543414986","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","shasum":"9159eea8641b840e0f7aa6e087dae414044ecdd3","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","shasum":"8c865cffa3845be32406737fcc0466cf9cd965b3","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/index.styl","shasum":"2588e55132e10d82c0608f03c2c72a2bace8fa4e","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","shasum":"f27c3643af6ed6f3d29a0be0c8dbea9b157857db","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","shasum":"e0b5e4a23a949bac499908bcef2fae56430e230e","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","shasum":"f0790da03008b6cb3ae4215cbb656cb4b4599633","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","shasum":"088a16303b0700e1c9e2c6962240b4c2f0fc3aa4","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","shasum":"f399713d1c9400d4d3373e38991a7e362a754a94","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","shasum":"e316347805eb93425faa678611c5e42a7152da8f","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","shasum":"176695cc0dc12daba049b2bb889397a7bf2e553c","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","shasum":"c8ec218adabc788b17f976f60dd1c5fa872d9fc4","modified":1435512456000},{"_id":"themes/next/source/css/_schemes/default/_search.styl","shasum":"05045d24850a982dc8069012c86c878b130b60eb","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","shasum":"d1ed08a17670fa259df02c1d52dc9ce754343775","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1435512456000},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","shasum":"b687bb4bfbe35a32b592c24d652ba80cfdc770fc","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1435512456000},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1435512456000},{"_id":"themes/next/source/images/cc-by.svg","shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1435512456000},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1435512456000},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1435512456000},{"_id":"themes/next/source/js/analytics_google-analytics.js","shasum":"f60bcf719bb55280a219c81d8ae50433aa28cf1a","modified":1435512456000},{"_id":"themes/next/source/js/fancy-box.js","shasum":"18b0ff55461d091b515a1b9e5f843fd2a7516c34","modified":1435512456000},{"_id":"themes/next/source/js/helpers.js","shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335","modified":1435512456000},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1435512456000},{"_id":"themes/next/source/js/motion_fallback.js","shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e","modified":1435512456000},{"_id":"themes/next/source/js/search-toggle.js","shasum":"0bf617514cd86307f0678a226761341100dd86d4","modified":1435512456000},{"_id":"themes/next/source/js/motion_global.js","shasum":"8d8f5966826067f48517382cfe4630ec4a1e3f9d","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"53360764b429c212f424399384417ccc233bb3be","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1435512456000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1435512456000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","shasum":"888a285a4a7329210b2210742c673611c27425eb","modified":1435512456000},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1435512456000},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1435512456000},{"_id":"public/images/avatar.jpg","modified":1439090122180,"shasum":"c8c78534fac0eec586b4eb9df57c44a99a89a6e4"},{"_id":"public/vendors/velocity/velocity.ui.min.js","modified":1439090122186,"shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908"},{"_id":"public/vendors/velocity/velocity.ui.js","modified":1439090122192,"shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df"},{"_id":"public/vendors/velocity/velocity.min.js","modified":1439090122195,"shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6"},{"_id":"public/vendors/velocity/velocity.js","modified":1439090122197,"shasum":"9f08181baea0cc0e906703b7e5df9111b9ef3373"},{"_id":"public/vendors/velocity/bower.json","modified":1439090122200,"shasum":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409"},{"_id":"public/vendors/jquery/index.js","modified":1439090122202,"shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","modified":1439090122205,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","modified":1439090122208,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","modified":1439090122210,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1439090122212,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1439090122214,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1439090122215,"shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1439090122218,"shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1439090122220,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1439090122222,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","modified":1439090122224,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","modified":1439090122226,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","modified":1439090122229,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","modified":1439090122231,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","modified":1439090122234,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/vendors/fancybox/source/blank.gif","modified":1439090122238,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/js/search-toggle.js","modified":1439090122242,"shasum":"0bf617514cd86307f0678a226761341100dd86d4"},{"_id":"public/js/motion_global.js","modified":1439090122247,"shasum":"8d8f5966826067f48517382cfe4630ec4a1e3f9d"},{"_id":"public/js/motion_fallback.js","modified":1439090122249,"shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e"},{"_id":"public/js/helpers.js","modified":1439090122252,"shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335"},{"_id":"public/js/fancy-box.js","modified":1439090122254,"shasum":"18b0ff55461d091b515a1b9e5f843fd2a7516c34"},{"_id":"public/js/bootstrap.scrollspy.js","modified":1439090122256,"shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625"},{"_id":"public/js/analytics_google-analytics.js","modified":1439090122258,"shasum":"f60bcf719bb55280a219c81d8ae50433aa28cf1a"},{"_id":"public/images/searchicon.png","modified":1439090122261,"shasum":"67727a6a969be0b2659b908518fa6706eed307b8"},{"_id":"public/images/cc-zero.svg","modified":1439090122265,"shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030"},{"_id":"public/images/cc-by.svg","modified":1439090122269,"shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e"},{"_id":"public/images/cc-by-sa.svg","modified":1439090122272,"shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e"},{"_id":"public/images/cc-by-nd.svg","modified":1439090122276,"shasum":"c563508ce9ced1e66948024ba1153400ac0e0621"},{"_id":"public/images/cc-by-nc.svg","modified":1439090122279,"shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7"},{"_id":"public/images/cc-by-nc-sa.svg","modified":1439090122281,"shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e"},{"_id":"public/images/cc-by-nc-nd.svg","modified":1439090122286,"shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564"},{"_id":"public/images/bkdefault_avatar.jpg","modified":1439090122289,"shasum":"b687bb4bfbe35a32b592c24d652ba80cfdc770fc"},{"_id":"public/fonts/icon-linecons/icomoon.woff","modified":1439090122291,"shasum":"d1ed08a17670fa259df02c1d52dc9ce754343775"},{"_id":"public/fonts/icon-linecons/icomoon.ttf","modified":1439090122294,"shasum":"c8ec218adabc788b17f976f60dd1c5fa872d9fc4"},{"_id":"public/fonts/icon-linecons/icomoon.svg","modified":1439090122297,"shasum":"888a285a4a7329210b2210742c673611c27425eb"},{"_id":"public/fonts/icon-linecons/icomoon.eot","modified":1439090122301,"shasum":"176695cc0dc12daba049b2bb889397a7bf2e553c"},{"_id":"public/fonts/icon-icomoon/icomoon.woff","modified":1439090122304,"shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb"},{"_id":"public/fonts/icon-icomoon/icomoon.ttf","modified":1439090122309,"shasum":"f399713d1c9400d4d3373e38991a7e362a754a94"},{"_id":"public/fonts/icon-icomoon/icomoon.svg","modified":1439090122312,"shasum":"e316347805eb93425faa678611c5e42a7152da8f"},{"_id":"public/fonts/icon-icomoon/icomoon.eot","modified":1439090122316,"shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d"},{"_id":"public/fonts/icon-fifty-shades/icomoon.woff","modified":1439090122320,"shasum":"088a16303b0700e1c9e2c6962240b4c2f0fc3aa4"},{"_id":"public/fonts/icon-fifty-shades/icomoon.ttf","modified":1439090122323,"shasum":"e0b5e4a23a949bac499908bcef2fae56430e230e"},{"_id":"public/fonts/icon-fifty-shades/icomoon.svg","modified":1439090122326,"shasum":"f0790da03008b6cb3ae4215cbb656cb4b4599633"},{"_id":"public/fonts/icon-fifty-shades/icomoon.eot","modified":1439090122328,"shasum":"f27c3643af6ed6f3d29a0be0c8dbea9b157857db"},{"_id":"public/fonts/icon-feather/icomoon.woff","modified":1439090122330,"shasum":"9159eea8641b840e0f7aa6e087dae414044ecdd3"},{"_id":"public/fonts/icon-feather/icomoon.ttf","modified":1439090122334,"shasum":"8c865cffa3845be32406737fcc0466cf9cd965b3"},{"_id":"public/fonts/icon-feather/icomoon.svg","modified":1439090122336,"shasum":"690836f81c0feb1a49e2253d4f984ad543414986"},{"_id":"public/fonts/icon-feather/icomoon.eot","modified":1439090122338,"shasum":"6d0eb1a5bfef4f2bf77089bd090e88c5b2f7944d"},{"_id":"public/fonts/icon-default/icomoon.woff","modified":1439090122341,"shasum":"4d0adc55240f331c6de225e23afd76ea5318da9c"},{"_id":"public/fonts/icon-default/icomoon.ttf","modified":1439090122345,"shasum":"e6452f07b050ee0ff265b3b99a1e7ef82eb561b2"},{"_id":"public/fonts/icon-default/icomoon.svg","modified":1439090122347,"shasum":"4f18f0bb815b1aeba57739069c3416106240b7c1"},{"_id":"public/fonts/icon-default/icomoon.eot","modified":1439090122349,"shasum":"a58d5e893c6faefc90d5c2589cc314dff8ffca7a"},{"_id":"public/css/main.css","modified":1439090122945,"shasum":"e7f0b5fe5f3e8e291fa2810e6d804dcfa6d01c93"},{"_id":"public/404.html","modified":1439090123130,"shasum":"ee1e3186807d173e235d06e12977339441385592"},{"_id":"public/tags/index.html","modified":1439090123180,"shasum":"ee7b4ce788aaae2dd5231bae63c819d0e210fa07"},{"_id":"public/guestbook/index.html","modified":1439090123220,"shasum":"5c5f71946144659991919a3cca18ec0922910dd1"},{"_id":"public/categories/index.html","modified":1439090123251,"shasum":"42284e9a66c16c841930e3eeca2eab16d809a794"},{"_id":"public/about/index.html","modified":1439090123281,"shasum":"47bd3b599f1a498764af3b36804f2ddd6108868e"},{"_id":"public/2015/08/09/Guice框架学习/index.html","modified":1439090123376,"shasum":"29ae563640eabc926c3148750595299adb7ce61c"},{"_id":"public/2015/08/01/KMP算法详解/index.html","modified":1439090123431,"shasum":"9a0ee8b8b5ed129f1d049a8f162686c9151ea153"},{"_id":"public/2015/07/30/每日一题-Implement-strStr/index.html","modified":1439090123501,"shasum":"79c6eaea3f5a4411bae696fdac1f3c173d4c3329"},{"_id":"public/2015/07/30/我的日程安排-Taskpaper和Reminder/index.html","modified":1439090123567,"shasum":"ac3ab940d96dc6c9e36e06dbfc96809393ce9732"},{"_id":"public/2015/07/28/每日一题-Count-and-Say/index.html","modified":1439090123634,"shasum":"fc85e60a07ff556b40d67f08f61cc13992f08947"},{"_id":"public/2015/07/28/每日一题-Compare-Version-Numbers/index.html","modified":1439090123682,"shasum":"9d5a3a3dcd16f1ae590ef66147c103c5390e5964"},{"_id":"public/2015/07/27/每日一题-Length-of-Last-Word/index.html","modified":1439090123754,"shasum":"75964785ecccf5c032f270c40c6818a5e6014ec3"},{"_id":"public/2015/07/26/每日一题-Longest-Common-Prefix/index.html","modified":1439090123804,"shasum":"9f3781cbaee596b5841124ea5e680903a17d4fbf"},{"_id":"public/2015/07/26/每日一题-Roman-to-Integer/index.html","modified":1439090123862,"shasum":"eeb529c0bc61744db53ecafd2aeabaad52f87ae6"},{"_id":"public/2015/07/25/取代PPT的mdpress/index.html","modified":1439090123910,"shasum":"d9a8445489cc6fc864891429839b33018340fc5b"},{"_id":"public/2015/07/25/每日一题-String-to-Integer/index.html","modified":1439090123979,"shasum":"1e1a8df9528606aa5be90da92d069809615054a5"},{"_id":"public/2015/07/25/每日一题-Valid-Palindrome/index.html","modified":1439090124024,"shasum":"8ad4794b47639ed446c915ab068b6a4989d47d9b"},{"_id":"public/2015/07/24/每日一题-Valid-Parentheses/index.html","modified":1439090124096,"shasum":"1c1d85ca32048aeb94dccb2c5d3a00835aded871"},{"_id":"public/2015/07/24/每日一题-ZigZag-Conversion/index.html","modified":1439090124154,"shasum":"493ace4ff3d570d575f086d3573fda74887ad194"},{"_id":"public/2015/07/23/每日一题-add-Binary/index.html","modified":1439090124220,"shasum":"5152bf7c45d8d27dde39eb3edf6a84f0f572b977"},{"_id":"public/2015/07/22/iterm2-zsh-oh-my-zsh-配置/index.html","modified":1439090124274,"shasum":"79cedb432a9d08d75efd02f4ba8ce60f81a7dc8c"},{"_id":"public/2015/07/18/慢跑鞋入门/index.html","modified":1439090124334,"shasum":"da6bc259a5726b6269170598563afd40c2a800c8"},{"_id":"public/2015/07/10/Mac软件推荐/index.html","modified":1439090124389,"shasum":"c6be38328d95c717417c3d4086df4e739cd44e82"},{"_id":"public/2015/07/09/利用github和hexo搭建静态博客/index.html","modified":1439090124461,"shasum":"6a866b1d642a75db4d20131b6a6e66268c144055"},{"_id":"public/2015/07/09/FoldingText工具/index.html","modified":1439090124519,"shasum":"4c58f62fc1548963f6063ecd4f4b6e7bc7e2c654"},{"_id":"public/archives/index.html","modified":1439090124582,"shasum":"1c1f1aed47b4bc3352f338b913e702f1a846e277"},{"_id":"public/archives/page/2/index.html","modified":1439090124628,"shasum":"d0c85883067e98a9bae8789b695d7ef6ca3552ae"},{"_id":"public/archives/page/3/index.html","modified":1439090124685,"shasum":"7d5b3aae83ae4ab5524cf3bfb283a100ab0d3e89"},{"_id":"public/archives/page/4/index.html","modified":1439090124734,"shasum":"aacf2d6d9bfeda03d48c7efb30f8dba7a5bcc03c"},{"_id":"public/archives/2015/index.html","modified":1439090124799,"shasum":"06fe65bfc7a22226ced0f487d12d18c69357735d"},{"_id":"public/archives/2015/page/2/index.html","modified":1439090124848,"shasum":"4b86467aa867a33775dc889c46fe624a645953c9"},{"_id":"public/archives/2015/page/3/index.html","modified":1439090124906,"shasum":"57288265ee9e83d3bb9d487fb4068b96745bf1fd"},{"_id":"public/archives/2015/page/4/index.html","modified":1439090124963,"shasum":"ae67a36d7821104cacc65907e72a7a4d5150673d"},{"_id":"public/archives/2015/07/index.html","modified":1439090125018,"shasum":"fc0e73bc1ce61b5119c967d66a77404b0ef98c15"},{"_id":"public/archives/2015/07/page/2/index.html","modified":1439090125074,"shasum":"abdc16996b0487e6ea1dc6ecf46929deae05b010"},{"_id":"public/archives/2015/07/page/3/index.html","modified":1439090125136,"shasum":"eeea1e929ea6f1335f45ea82ed62de0384b8adfc"},{"_id":"public/archives/2015/07/page/4/index.html","modified":1439090125174,"shasum":"b8ca6fa6bc50f791bf03c344cbcf50bdd7382514"},{"_id":"public/archives/2015/08/index.html","modified":1439090125217,"shasum":"e426fce31543b3f08d7aa7cd76313f0176ab82a6"},{"_id":"public/categories/code/index.html","modified":1439090125264,"shasum":"d3b4d3fa5d1c5647d361322e29d094847769baca"},{"_id":"public/categories/code/page/2/index.html","modified":1439090125305,"shasum":"f5bf8821cdd030edf6de0cafd28b3765470d33be"},{"_id":"public/categories/code/page/3/index.html","modified":1439090125339,"shasum":"fbb49e4d14833960adfa4101e674f57a79039e0a"},{"_id":"public/categories/tools/index.html","modified":1439090125387,"shasum":"7dbded82c79fa5fdfe125a8ab7391ceaf22c733a"},{"_id":"public/categories/life/index.html","modified":1439090125419,"shasum":"545d0e1a55b97909cc7544e04dc5d8af1a3e3bb2"},{"_id":"public/categories/hexo/index.html","modified":1439090125460,"shasum":"0f3febf01a462a3a6b531686deace493fbe3c7c0"},{"_id":"public/categories/algorithms/index.html","modified":1439090125502,"shasum":"000e0ebd44d880a87000a24f22d984cf2adcd4f1"},{"_id":"public/categories/framework/index.html","modified":1439090125533,"shasum":"a451f4629efe8e696f3fbca0fb04d569e02c625f"},{"_id":"public/index.html","modified":1439090125589,"shasum":"0e8b90f13635956e869b2835a5adcb0fc89749f1"},{"_id":"public/page/2/index.html","modified":1439090125657,"shasum":"8578fb1de1633a92a8be99d6dfe4800779197534"},{"_id":"public/page/3/index.html","modified":1439090125712,"shasum":"912e02b4e87d632d3a84b85836755cef5f60889a"},{"_id":"public/page/4/index.html","modified":1439090125799,"shasum":"8b614dbfe8576834b24956643c9d84905fe9e0df"},{"_id":"public/tags/code/index.html","modified":1439090125838,"shasum":"e2bdb49b51b2f323443826205f5b7107a0455b8a"},{"_id":"public/tags/code/page/2/index.html","modified":1439090125894,"shasum":"79d4af857fb0b8a29faa70170a305a953666d0c5"},{"_id":"public/tags/code/page/3/index.html","modified":1439090125930,"shasum":"b15cd303657aee26d80122267a866f2fef7646c4"},{"_id":"public/tags/leetcode/index.html","modified":1439090125970,"shasum":"c6af13277657004f07f6601cb0e888df93117e7f"},{"_id":"public/tags/leetcode/page/2/index.html","modified":1439090126015,"shasum":"7fe367ac529686082cb8f3a330d9c9668574eade"},{"_id":"public/tags/leetcode/page/3/index.html","modified":1439090126045,"shasum":"592a17f78dfa0027257a9eb365c03e0ed7a2df6b"},{"_id":"public/tags/tools/index.html","modified":1439090126093,"shasum":"264c4106185e094ae951fe570cfe2fa38ff1fa81"},{"_id":"public/tags/Taskpaper/index.html","modified":1439090126139,"shasum":"7d6fb847160da8b5f5361982815f2097d1cf35bc"},{"_id":"public/tags/life/index.html","modified":1439090126182,"shasum":"a64f1ff0d8d1279e9aa798de8267998c0123972d"},{"_id":"public/tags/running/index.html","modified":1439090126219,"shasum":"efb8d51855453d66520bd1dd7c8052741fe1e8ce"},{"_id":"public/tags/mdpress/index.html","modified":1439090126260,"shasum":"fd3e33697c574352fcaca83a6862517426282e06"},{"_id":"public/tags/hexo/index.html","modified":1439090126293,"shasum":"b00b7a093097314b56bb980163786cadda4841a3"},{"_id":"public/tags/blog/index.html","modified":1439090126327,"shasum":"310b930f69086c970f2bdc1cbe79bce216eb4aee"},{"_id":"public/tags/iterm2/index.html","modified":1439090126362,"shasum":"848be6eb0261c8733e8825f4cb699bb52c712799"},{"_id":"public/tags/zsh/index.html","modified":1439090126406,"shasum":"ba0af94adec5a0a95371dd3c68f8ab1a67fc7239"},{"_id":"public/tags/mac/index.html","modified":1439090126446,"shasum":"cd527fbe93af75059b8630cf500fe50ca67c8d27"},{"_id":"public/tags/algorithms/index.html","modified":1439090126480,"shasum":"dd0e9662b680ef4a6271cec5adf6a889cfaf3145"},{"_id":"public/tags/KMP/index.html","modified":1439090126523,"shasum":"dbe1b27bf05ce55e51493f10311473783dd386f2"},{"_id":"public/tags/framework/index.html","modified":1439090126557,"shasum":"554e4aa81752820c429d8eab5c0f3ec229527f1f"},{"_id":"public/tags/Guice/index.html","modified":1439090126587,"shasum":"639d9d277ddde7d91957b37030d49429e592a39b"},{"_id":"public/tags/FoldingText/index.html","modified":1439090126622,"shasum":"5e29f87738c2dc97702ded18c550156822e5da97"}],"Category":[{"name":"code","_id":"cid3x3n2200060xsetmljh2fj"},{"name":"tools","_id":"cid3x3n34001h0xsewkvq1jnk"},{"name":"life","_id":"cid3x3n38001o0xse05q6rgoq"},{"name":"hexo","_id":"cid3x3n3g00200xsejfyu70wj"},{"name":"algorithms","_id":"cid3x3n3r002j0xse3u05u3zw"},{"name":"framework","_id":"cid3x3n3u002q0xselnrngspc"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n\n</html>\n","date":"2015-07-08T05:56:00.000Z","updated":"2015-07-08T05:56:00.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cid3x3mz200000xse5336k3wl"},{"title":"All tags","date":"2015-07-08T05:25:01.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: All tags\ndate: 2015-07-08 13:25:01\ntype: \"tags\"\ncomments: false\n---\n","updated":"2015-07-08T05:26:59.000Z","path":"tags/index.html","layout":"page","_id":"cid3x3mzy00010xseny9zpmzc"},{"title":"guestbook","date":"2015-07-09T03:57:43.000Z","type":"guestbook","_content":"\n<blockquote class=\"blockquote-center\">念念不忘，必有回报</blockquote>\n\n>最近访客\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\">\n</div>\n\n<br>\n","source":"guestbook/index.md","raw":"title: guestbook\ndate: 2015-07-09 11:57:43\ntype: guestbook\n---\n\n<blockquote class=\"blockquote-center\">念念不忘，必有回报</blockquote>\n\n>最近访客\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\">\n</div>\n\n<br>\n","updated":"2015-07-09T09:44:49.000Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"cid3x3n1g00020xseqblwvoel"},{"title":"categories","date":"2015-07-08T05:31:12.000Z","type":"categories","commets":false,"_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-07-08 13:31:12\ntype: \"categories\"\ncommets: false\n---\n","updated":"2015-07-08T05:31:57.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cid3x3n1s00030xse503vhsgg"},{"title":"about","date":"2015-07-08T05:45:13.000Z","type":"about","_content":"\n# 缘起\n<blockquote class=\"blockquote-center\">\n爱工具 爱折腾 爱瞎想 爱装13\n</blockquote>\n\n# 转承\n<blockquote class=\"blockquote-center\">\n应该要拼搏一把，但忠于本心\n</blockquote>\n\n# 曲落 \n<blockquote class=\"blockquote-center\">\n未完待续\n</blockquote>","source":"about/index.md","raw":"title: about\ndate: 2015-07-08 13:45:13\ntype: about\n---\n\n# 缘起\n<blockquote class=\"blockquote-center\">\n爱工具 爱折腾 爱瞎想 爱装13\n</blockquote>\n\n# 转承\n<blockquote class=\"blockquote-center\">\n应该要拼搏一把，但忠于本心\n</blockquote>\n\n# 曲落 \n<blockquote class=\"blockquote-center\">\n未完待续\n</blockquote>","updated":"2015-07-09T04:17:49.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cid3x3n1u00040xse10btc50o"}],"Post":[{"title":"每日一题:add Binary","date":"2015-07-23T08:38:40.000Z","description":"每天一道LeetCode","_content":"\n## 题目\n\n>Given two binary strings, return their sum (also a binary string).\n\n>For example, a = \"11\", b = \"1\", Return \"100\".\n\n## 解答\n\n```\npublic class Solution {\n    public String addBinary(String a, String b) {\n        \n        int acur = a.length() - 1;\n        int bcur = b.length() - 1;\n\n        StringBuffer sb = new StringBuffer();\n\n        boolean flag = false;\n\n        while(acur >=0 || bcur >= 0){\n            int anum = (acur >= 0 ? a.charAt(acur) - '0' : 0);\n            int bnum = (bcur >= 0 ? b.charAt(bcur) - '0' : 0);\n            int res = anum + bnum;\n            if (flag == true) {\n                res++;\n                flag = false;\n            }\n            if (res > 1) {\n                res = res - 2;\n                flag = true;\n            }\n            sb.append(res);\n            acur--;\n            bcur--;\n        }\n\n        if(flag == true){\n            sb.append('1');\n        }\n        \n        return sb.reverse().toString();\n    }\n}\n```\n\n## 注解\n\n没啥好说的，flag标志位标识是否进位，字符串从后往前依次取字符相加，并通过StringBuider追加，最后翻转字符串，返回结果。\n\n## 反思\n\nCharAt()函数的底层实现\n\n```\npublic char charAt(int index) {\n    if ((index < 0) || (index >= count)) {\n            throw new StringIndexOutOfBoundsException(index);\n    }\n    return value[index + offset];\n}\n```\n\nStringBuilder与StringBuffer\n\n> StringBuilder vs StringBuffer: StringBuffer is synchronized, which means it is thread-safe but slower than StringBuilder.   \n","source":"_posts/每日一题-add-Binary.md","raw":"title: '每日一题:add Binary'\ndate: 2015-07-23 16:38:40\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道LeetCode\n---\n\n## 题目\n\n>Given two binary strings, return their sum (also a binary string).\n\n>For example, a = \"11\", b = \"1\", Return \"100\".\n\n## 解答\n\n```\npublic class Solution {\n    public String addBinary(String a, String b) {\n        \n        int acur = a.length() - 1;\n        int bcur = b.length() - 1;\n\n        StringBuffer sb = new StringBuffer();\n\n        boolean flag = false;\n\n        while(acur >=0 || bcur >= 0){\n            int anum = (acur >= 0 ? a.charAt(acur) - '0' : 0);\n            int bnum = (bcur >= 0 ? b.charAt(bcur) - '0' : 0);\n            int res = anum + bnum;\n            if (flag == true) {\n                res++;\n                flag = false;\n            }\n            if (res > 1) {\n                res = res - 2;\n                flag = true;\n            }\n            sb.append(res);\n            acur--;\n            bcur--;\n        }\n\n        if(flag == true){\n            sb.append('1');\n        }\n        \n        return sb.reverse().toString();\n    }\n}\n```\n\n## 注解\n\n没啥好说的，flag标志位标识是否进位，字符串从后往前依次取字符相加，并通过StringBuider追加，最后翻转字符串，返回结果。\n\n## 反思\n\nCharAt()函数的底层实现\n\n```\npublic char charAt(int index) {\n    if ((index < 0) || (index >= count)) {\n            throw new StringIndexOutOfBoundsException(index);\n    }\n    return value[index + offset];\n}\n```\n\nStringBuilder与StringBuffer\n\n> StringBuilder vs StringBuffer: StringBuffer is synchronized, which means it is thread-safe but slower than StringBuilder.   \n","slug":"每日一题-add-Binary","published":1,"updated":"2015-07-23T08:56:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n1y00050xseqi1de5hz"},{"title":"每日一题:ZigZag-Conversion","date":"2015-07-24T07:28:30.000Z","description":"每天一道LeetCode","_content":"\n## 题目\n\n> The string `\"PAYPALISHIRING\"` is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\n>```\nP   A   H   N\nA P L S I I G\nY   I   R\n```\n\n>And then read line by line: `\"PAHNAPLSIIGYIR\"`\n\n>Write the code that will take a string and make this conversion given a number of rows:\n\n>```\nstring convert(string text, int nRows);\n```\n`convert(\"PAYPALISHIRING\", 3)` should return `\"PAHNAPLSIIGYIR\"`.\n\n## 解答\n\n```\npublic String convert(String s, int nRows){\n        if(nRows == 1){\n            return s;\n        }\n\n        StringBuffer sb = new StringBuffer();\n        int step = 2 * nRows - 2;\n        int length = s.length();\n\n        for(int i = 0; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        for(int i = 1; i  < nRows - 1; i++){\n            for(int  j = i; j < length; j+= step){\n                sb.append(s.charAt(j));\n                if(j + step - 2 * i < length){\n                    sb.append(s.charAt(j + step - 2 * i));\n                }\n            }\n        }\n\n        for(int i = nRows - 1; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        return sb.toString();\n    }\n```\n\n## 注解\n\n一般性的找规律题。\n\n按照生成的顺序，发现首行和末行都是以`2 * nRows - 2`增加的。\n\n中间`nRow - 2`行，在`2 * nRow - 2`步数增加的情况下，加入`2 * nRows - 2 - 2 * (nRow - 2)`小步数增加。\n\n","source":"_posts/每日一题-ZigZag-Conversion.md","raw":"title: 每日一题:ZigZag-Conversion\ndate: 2015-07-24 15:28:30\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道LeetCode\n---\n\n## 题目\n\n> The string `\"PAYPALISHIRING\"` is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\n>```\nP   A   H   N\nA P L S I I G\nY   I   R\n```\n\n>And then read line by line: `\"PAHNAPLSIIGYIR\"`\n\n>Write the code that will take a string and make this conversion given a number of rows:\n\n>```\nstring convert(string text, int nRows);\n```\n`convert(\"PAYPALISHIRING\", 3)` should return `\"PAHNAPLSIIGYIR\"`.\n\n## 解答\n\n```\npublic String convert(String s, int nRows){\n        if(nRows == 1){\n            return s;\n        }\n\n        StringBuffer sb = new StringBuffer();\n        int step = 2 * nRows - 2;\n        int length = s.length();\n\n        for(int i = 0; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        for(int i = 1; i  < nRows - 1; i++){\n            for(int  j = i; j < length; j+= step){\n                sb.append(s.charAt(j));\n                if(j + step - 2 * i < length){\n                    sb.append(s.charAt(j + step - 2 * i));\n                }\n            }\n        }\n\n        for(int i = nRows - 1; i < length; i += step){\n            sb.append(s.charAt(i));\n        }\n\n        return sb.toString();\n    }\n```\n\n## 注解\n\n一般性的找规律题。\n\n按照生成的顺序，发现首行和末行都是以`2 * nRows - 2`增加的。\n\n中间`nRow - 2`行，在`2 * nRow - 2`步数增加的情况下，加入`2 * nRows - 2 - 2 * (nRow - 2)`小步数增加。\n\n","slug":"每日一题-ZigZag-Conversion","published":1,"updated":"2015-07-24T07:43:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n27000c0xsed2bf66re"},{"title":"每日一题:Valid-Parentheses","date":"2015-07-24T10:24:27.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n>Given a string containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\n>The brackets must close in the correct order, `\"()\"` and `\"()[]{}\"` are all valid but `\"(]\"` and `\"([)]\"` are not.\n\n## 解答\n```\npublic boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n\n        for(int i = 0; i < s.length(); i++){\n            char ch = s.charAt(i);\n            switch (ch){\n                case '{':\n                case '(':\n                case '[': stack.push(ch) ; continue;\n                case ')': if(stack.isEmpty() || stack.pop().charValue() != '(') return false; else continue;\n                case ']': if(stack.isEmpty() || stack.pop().charValue() != '[') return false; else continue;\n                case '}': if(stack.isEmpty() || stack.pop().charValue() != '{') return false; else continue;\n                default:\n            }\n        }\n\n        if(stack.isEmpty())\n        {\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n```\n\n## 注解\n\n利用堆栈的特性，每次遇到`{` `[` `(`就入栈，遇到`}` `]` `)`就出栈，匹配当前的字符。\n\n特别注意下面两种情况：\n\n+ `input: \"]]]\"`，这个通过遇到相对应字符时判断堆栈是否为空，为空就直接返回`false`.\n+ `input: \"[[[\"`，这个通过最后判断堆栈是否为空，一旦不为空就返回`false`.\n\n## 反思\n\n+ Java集合类中Stack的用法:\n\n    ```\n    package java.util;\n        \n    public class Stack<E> extends Vector<E> {\n    // 版本ID。这个用于版本升级控制，这里不须理会！\n    private static final long serialVersionUID = 1224463164541339165L;\n        \n    // 构造函数\n    public Stack() {\n    }\n        \n    // push函数：将元素存入栈顶\n    public E push(E item) {\n        // 将元素存入栈顶。\n        // addElement()的实现在Vector.java中\n        addElement(item);\n        \n        return item;\n    }\n        \n    // pop函数：返回栈顶元素，并将其从栈中删除\n    public synchronized E pop() {\n        E    obj;\n        int    len = size();\n        \n        obj = peek();\n        // 删除栈顶元素，removeElementAt()的实现在Vector.java中\n        removeElementAt(len - 1);\n        \n        return obj;\n    }\n        \n    // peek函数：返回栈顶元素，不执行删除操作\n    public synchronized E peek() {\n        int    len = size();\n        \n        if (len == 0)\n            throw new EmptyStackException();\n        // 返回栈顶元素，elementAt()具体实现在Vector.java中\n        return elementAt(len - 1);\n    }\n        \n    // 栈是否为空\n    public boolean empty() {\n        return size() == 0;\n    }\n        \n    // 查找“元素o”在栈中的位置：由栈底向栈顶方向数\n    public synchronized int search(Object o) {\n        // 获取元素索引，elementAt()具体实现在Vector.java中\n        int i = lastIndexOf(o);\n        \n        if (i >= 0) {\n            return size() - i;\n        }\n        return -1;\n    }\n    }\n    ```\n\n+ Java包装类\n\n| 基本类型 | 包装类 |\n|:-------|:-----:|\n|byte | Byte |\n|boolean | Boolean| \n|short|Short|\n|char|Character|\n|int|Integer|\n|long|Long|\n|float|Float|\n|double|Double|\n\n\n\n\n","source":"_posts/每日一题-Valid-Parentheses.md","raw":"title: '每日一题:Valid-Parentheses'\ndate: 2015-07-24 18:24:27\ntags: [code, leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n>Given a string containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\n>The brackets must close in the correct order, `\"()\"` and `\"()[]{}\"` are all valid but `\"(]\"` and `\"([)]\"` are not.\n\n## 解答\n```\npublic boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n\n        for(int i = 0; i < s.length(); i++){\n            char ch = s.charAt(i);\n            switch (ch){\n                case '{':\n                case '(':\n                case '[': stack.push(ch) ; continue;\n                case ')': if(stack.isEmpty() || stack.pop().charValue() != '(') return false; else continue;\n                case ']': if(stack.isEmpty() || stack.pop().charValue() != '[') return false; else continue;\n                case '}': if(stack.isEmpty() || stack.pop().charValue() != '{') return false; else continue;\n                default:\n            }\n        }\n\n        if(stack.isEmpty())\n        {\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n```\n\n## 注解\n\n利用堆栈的特性，每次遇到`{` `[` `(`就入栈，遇到`}` `]` `)`就出栈，匹配当前的字符。\n\n特别注意下面两种情况：\n\n+ `input: \"]]]\"`，这个通过遇到相对应字符时判断堆栈是否为空，为空就直接返回`false`.\n+ `input: \"[[[\"`，这个通过最后判断堆栈是否为空，一旦不为空就返回`false`.\n\n## 反思\n\n+ Java集合类中Stack的用法:\n\n    ```\n    package java.util;\n        \n    public class Stack<E> extends Vector<E> {\n    // 版本ID。这个用于版本升级控制，这里不须理会！\n    private static final long serialVersionUID = 1224463164541339165L;\n        \n    // 构造函数\n    public Stack() {\n    }\n        \n    // push函数：将元素存入栈顶\n    public E push(E item) {\n        // 将元素存入栈顶。\n        // addElement()的实现在Vector.java中\n        addElement(item);\n        \n        return item;\n    }\n        \n    // pop函数：返回栈顶元素，并将其从栈中删除\n    public synchronized E pop() {\n        E    obj;\n        int    len = size();\n        \n        obj = peek();\n        // 删除栈顶元素，removeElementAt()的实现在Vector.java中\n        removeElementAt(len - 1);\n        \n        return obj;\n    }\n        \n    // peek函数：返回栈顶元素，不执行删除操作\n    public synchronized E peek() {\n        int    len = size();\n        \n        if (len == 0)\n            throw new EmptyStackException();\n        // 返回栈顶元素，elementAt()具体实现在Vector.java中\n        return elementAt(len - 1);\n    }\n        \n    // 栈是否为空\n    public boolean empty() {\n        return size() == 0;\n    }\n        \n    // 查找“元素o”在栈中的位置：由栈底向栈顶方向数\n    public synchronized int search(Object o) {\n        // 获取元素索引，elementAt()具体实现在Vector.java中\n        int i = lastIndexOf(o);\n        \n        if (i >= 0) {\n            return size() - i;\n        }\n        return -1;\n    }\n    }\n    ```\n\n+ Java包装类\n\n| 基本类型 | 包装类 |\n|:-------|:-----:|\n|byte | Byte |\n|boolean | Boolean| \n|short|Short|\n|char|Character|\n|int|Integer|\n|long|Long|\n|float|Float|\n|double|Double|\n\n\n\n\n","slug":"每日一题-Valid-Parentheses","published":1,"updated":"2015-07-25T01:06:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n29000g0xse9k5hke00"},{"title":"每日一题:Valid-Palindrome","date":"2015-07-25T02:56:27.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n\n>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\n>For example,\n`\"A man, a plan, a canal: Panama\"` is a palindrome.\n`\"race a car\"` is not a palindrome.\n\n>For the purpose of this problem, we define empty string as valid palindrome.\n\n## 解答\n\n```\npublic class Solution {\n    public boolean isPalindrome(String s) {\n       s = s.toLowerCase();\n        int low = 0;\n        int high = s.length() - 1;\n        while (low <= high){\n            char ch1 = s.charAt(low);\n            char ch2 = s.charAt(high);\n\n            if(ch1 > 'z' || (ch1<'a' &&  ch1 > '9') || ch1 < '0'){\n                low++;\n            }\n            if(ch2 > 'z' || (ch2<'a' &&  ch2 > '9') || ch2 < '0'){\n                high--;\n            }\n            if ((ch1 >= 'a' && ch1 <= 'z' || ch1 >= '0' && ch1 <='9' )&&(ch2 >= 'a' && ch2 <= 'z' || ch2 >= '0' && ch2 <='9')){\n                if (ch1 != ch2){\n                    return false;\n                }else{\n                low++;\n                high--;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n```\n\n## 注解\n\n将字符串转换为小写，设置头尾指针，遇到不是`0~9` `a~z`就跳过，否则比较头尾指针的值，不匹配就跳出循环，返回`false`.\n\n\n","source":"_posts/每日一题-Valid-Palindrome.md","raw":"title: '每日一题:Valid-Palindrome'\ndate: 2015-07-25 10:56:27\ntags: [code, leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n\n>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\n>For example,\n`\"A man, a plan, a canal: Panama\"` is a palindrome.\n`\"race a car\"` is not a palindrome.\n\n>For the purpose of this problem, we define empty string as valid palindrome.\n\n## 解答\n\n```\npublic class Solution {\n    public boolean isPalindrome(String s) {\n       s = s.toLowerCase();\n        int low = 0;\n        int high = s.length() - 1;\n        while (low <= high){\n            char ch1 = s.charAt(low);\n            char ch2 = s.charAt(high);\n\n            if(ch1 > 'z' || (ch1<'a' &&  ch1 > '9') || ch1 < '0'){\n                low++;\n            }\n            if(ch2 > 'z' || (ch2<'a' &&  ch2 > '9') || ch2 < '0'){\n                high--;\n            }\n            if ((ch1 >= 'a' && ch1 <= 'z' || ch1 >= '0' && ch1 <='9' )&&(ch2 >= 'a' && ch2 <= 'z' || ch2 >= '0' && ch2 <='9')){\n                if (ch1 != ch2){\n                    return false;\n                }else{\n                low++;\n                high--;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n```\n\n## 注解\n\n将字符串转换为小写，设置头尾指针，遇到不是`0~9` `a~z`就跳过，否则比较头尾指针的值，不匹配就跳出循环，返回`false`.\n\n\n","slug":"每日一题-Valid-Palindrome","published":1,"updated":"2015-07-25T03:01:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2c000k0xsetkbnkdze"},{"title":"每日一题:String-to-Integer","date":"2015-07-25T07:55:29.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n>Implement atoi to convert a string to an integer.\n\n>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\n\n>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.\n    \n>+ The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\n    \n>+ The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\n    \n>+ If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\n    \n>+ If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\n\n## 解答\n\n```\npublic class Solution {\n    public int myAtoi(String str) {\n        str = str.trim();\n        int res = 0;\n        int index = 0;\n        boolean flag = false;\n\n        if(str.length() == 0) return res;\n       \n        if(str.charAt(0) == '+' || str.charAt(0) == '-'){\n            index = 1;\n            if(str.charAt(0) == '-') flag = true;\n        }\n\n        for(int i = index; i < str.length(); i++){\n            char ch = str.charAt(i);\n\n            if(ch < '0' || ch > '9'){\n                break;\n            }else{\n                int num = ch - '0';\n                if(flag && res>-((Integer.MIN_VALUE+num)/10)) return Integer.MIN_VALUE;\n                else if(!flag && res>(Integer.MAX_VALUE-num)/10) return Integer.MAX_VALUE;\n                res = res * 10 + num;\n            }\n        }\n\n        if(flag == true) res = - res;\n        \n        return res;\n    }\n}\n\n```\n\n## 注解\n经典的atoi问题，奈何没有参加过ACM，对于部分情况考虑不周。\n\n+ String串首尾去空\n+ 对于空串，单独判断\n+ 首位出现符号位，需要考虑\n+ 超出`Int`范围的溢出处理\n\n## 反思\n\n对于某些经典问题，需要通过实际编程，并且通过一定限制的测试用例，才能了解问题真正的含义。\n","source":"_posts/每日一题-String-to-Integer.md","raw":"title: '每日一题:String-to-Integer'\ndate: 2015-07-25 15:55:29\ntags: [code, leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n>Implement atoi to convert a string to an integer.\n\n>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\n\n>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.\n    \n>+ The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\n    \n>+ The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\n    \n>+ If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\n    \n>+ If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\n\n## 解答\n\n```\npublic class Solution {\n    public int myAtoi(String str) {\n        str = str.trim();\n        int res = 0;\n        int index = 0;\n        boolean flag = false;\n\n        if(str.length() == 0) return res;\n       \n        if(str.charAt(0) == '+' || str.charAt(0) == '-'){\n            index = 1;\n            if(str.charAt(0) == '-') flag = true;\n        }\n\n        for(int i = index; i < str.length(); i++){\n            char ch = str.charAt(i);\n\n            if(ch < '0' || ch > '9'){\n                break;\n            }else{\n                int num = ch - '0';\n                if(flag && res>-((Integer.MIN_VALUE+num)/10)) return Integer.MIN_VALUE;\n                else if(!flag && res>(Integer.MAX_VALUE-num)/10) return Integer.MAX_VALUE;\n                res = res * 10 + num;\n            }\n        }\n\n        if(flag == true) res = - res;\n        \n        return res;\n    }\n}\n\n```\n\n## 注解\n经典的atoi问题，奈何没有参加过ACM，对于部分情况考虑不周。\n\n+ String串首尾去空\n+ 对于空串，单独判断\n+ 首位出现符号位，需要考虑\n+ 超出`Int`范围的溢出处理\n\n## 反思\n\n对于某些经典问题，需要通过实际编程，并且通过一定限制的测试用例，才能了解问题真正的含义。\n","slug":"每日一题-String-to-Integer","published":1,"updated":"2015-07-25T08:06:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2f000o0xsecps5q3xu"},{"title":"每日一题:Roman-to-Integer ","date":"2015-07-26T01:36:31.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n>Given a roman numeral, convert it to an integer.\n\n>Input is guaranteed to be within the range from 1 to 3999.\n\n## 解答\n\n```\npublic class Solution {\n    public int romanToInt(String s) {\n        int res = 0;\n\n        int pre = 1001;\n        int next = 0;\n        int length = s.length();\n\n        for(int i = 0; i < length; i++){\n            switch(s.charAt(i)){\n                case 'I': next = 1; break;\n                case 'V': next = 5; break;\n                case 'X': next = 10; break;\n                case 'L': next = 50; break;\n                case 'C': next = 100; break;\n                case 'D': next = 500; break;\n                case 'M': next = 1000;break;\n                default: return 0;\n            }\n            if(next <= pre){\n                res += next;\n                pre = next;\n            }\n            if(next > pre){\n                res = res - 2 * pre + next;\n                pre = next;\n            }\n        }\n        return res;\n    }\n}\n```\n\n## 注解\n\n罗马数字主要包括`I` `V` `X` `L` `C` `D` `M`\n\n对应表如下：\n\n|\t\tI\t|\t\tV\t|\t\tX\t|\t\tL\t|\t\tC\t|\t\tD\t|\t\tM\t|\n|:------|:------|:------|:------|:------|:------|:------|\n|\t\t1\t|\t\t5\t|\t\t10\t|\t\t50\t|\t100\t\t|\t\t500\t|\t\t1000\t|\n\n规则：\n\n+ 相同的数字连写，所表示的数等于这些数字相加得到的数。\n+ 小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数。\n+ 小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数。\n+ 正常使用时连写的数字重复不得超过三次。\n+ 在一个数的上面画一条横线，表示这个数增值1000倍。\n\n思路：用一个指针指向当前指针的前驱，然后和前驱比较，当前指针代表的罗马数字小于等于前驱，就直接相加；如果大于前驱就加上`next - pre - pre`。\n\n\n\n\n\n","source":"_posts/每日一题-Roman-to-Integer.md","raw":"title: '每日一题:Roman-to-Integer '\ndate: 2015-07-26 09:36:31\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n>Given a roman numeral, convert it to an integer.\n\n>Input is guaranteed to be within the range from 1 to 3999.\n\n## 解答\n\n```\npublic class Solution {\n    public int romanToInt(String s) {\n        int res = 0;\n\n        int pre = 1001;\n        int next = 0;\n        int length = s.length();\n\n        for(int i = 0; i < length; i++){\n            switch(s.charAt(i)){\n                case 'I': next = 1; break;\n                case 'V': next = 5; break;\n                case 'X': next = 10; break;\n                case 'L': next = 50; break;\n                case 'C': next = 100; break;\n                case 'D': next = 500; break;\n                case 'M': next = 1000;break;\n                default: return 0;\n            }\n            if(next <= pre){\n                res += next;\n                pre = next;\n            }\n            if(next > pre){\n                res = res - 2 * pre + next;\n                pre = next;\n            }\n        }\n        return res;\n    }\n}\n```\n\n## 注解\n\n罗马数字主要包括`I` `V` `X` `L` `C` `D` `M`\n\n对应表如下：\n\n|\t\tI\t|\t\tV\t|\t\tX\t|\t\tL\t|\t\tC\t|\t\tD\t|\t\tM\t|\n|:------|:------|:------|:------|:------|:------|:------|\n|\t\t1\t|\t\t5\t|\t\t10\t|\t\t50\t|\t100\t\t|\t\t500\t|\t\t1000\t|\n\n规则：\n\n+ 相同的数字连写，所表示的数等于这些数字相加得到的数。\n+ 小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数。\n+ 小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数。\n+ 正常使用时连写的数字重复不得超过三次。\n+ 在一个数的上面画一条横线，表示这个数增值1000倍。\n\n思路：用一个指针指向当前指针的前驱，然后和前驱比较，当前指针代表的罗马数字小于等于前驱，就直接相加；如果大于前驱就加上`next - pre - pre`。\n\n\n\n\n\n","slug":"每日一题-Roman-to-Integer","published":1,"updated":"2015-07-26T01:49:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2h000s0xsewbqph9w9"},{"title":"每日一题:Longest-Common-Prefix ","date":"2015-07-26T09:42:14.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n\n>Write a function to find the longest common prefix string amongst an array of strings.\n\n## 解答\n\n```\npublic class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0){\n            return \"\";\n        }\n        \n        int index = 0;\n        StringBuilder sb = new StringBuilder();\n        boolean flag = true;\n       \n        while (true) {\n            char pre;\n            if(index < strs[0].length()){\n                pre = strs[0].charAt(index);\n            }else{\n                flag = false;\n                break;\n            }\n            for(int i = 0; i < strs.length; i++){\n                if(index < strs[i].length() && strs[i].charAt(index) == pre){\n                    pre = strs[i].charAt(index);\n                }else{\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag == true){\n                sb.append(pre);\n                index++;\n            }else{\n                break;\n            }\n        }\n        return sb.toString();\n    }\n}\n```\n\n## 注解\n\n遍历每个数组的每一位的字符值，比较是否相等。相等就继续匹配下一位的字符比较。通过对边界值的判断来跳出循环。\n\n\n","source":"_posts/每日一题-Longest-Common-Prefix.md","raw":"title: '每日一题:Longest-Common-Prefix '\ndate: 2015-07-26 17:42:14\ntags: [code,leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n\n>Write a function to find the longest common prefix string amongst an array of strings.\n\n## 解答\n\n```\npublic class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0){\n            return \"\";\n        }\n        \n        int index = 0;\n        StringBuilder sb = new StringBuilder();\n        boolean flag = true;\n       \n        while (true) {\n            char pre;\n            if(index < strs[0].length()){\n                pre = strs[0].charAt(index);\n            }else{\n                flag = false;\n                break;\n            }\n            for(int i = 0; i < strs.length; i++){\n                if(index < strs[i].length() && strs[i].charAt(index) == pre){\n                    pre = strs[i].charAt(index);\n                }else{\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag == true){\n                sb.append(pre);\n                index++;\n            }else{\n                break;\n            }\n        }\n        return sb.toString();\n    }\n}\n```\n\n## 注解\n\n遍历每个数组的每一位的字符值，比较是否相等。相等就继续匹配下一位的字符比较。通过对边界值的判断来跳出循环。\n\n\n","slug":"每日一题-Longest-Common-Prefix","published":1,"updated":"2015-07-26T09:47:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2l000w0xseckaxgmen"},{"title":"每日一题:Length-of-Last-Word","date":"2015-07-27T04:37:22.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n>Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\n\n>If the last word does not exist, return 0.\n\n>Note: A word is defined as a character sequence consists of non-space characters only.\n\n>For example, \nGiven s = \"Hello World\",\nreturn 5.\n\n## 解答\n\n```\npublic class Solution {\n    public int lengthOfLastWord(String s) {\n        s = s.trim();\n        s = s.toLowerCase();\n        int length = 0;\n        \n        if (s.length() == 0) {\n            return 0;\n        }\n       \n        for (int i = s.length() - 1; i >= 0; i--) {\n            char ch = s.charAt(i);\n            if (ch >= 'a' && ch <= 'z') {\n                length++;\n            }\n            else if (ch == ' ') {\n                break;\n            }else {\n                return 0;\n            }\n        }\n        return length;\n    }\n}\n```\n\n## 注解\n用`split()\u0010`切词，然后对字符数组最后一个判断，效率有点低。\n\n直接从最后一位开始遍历，遇到空格就返回`length`，遇到字符就让length加1，遇到非字符和空格就返回`0`。\n\n\n## 反思(转载)\n\n\n在java.lang包中有String.split()方法的原型是：\n\n`public String[] split(String regex, int limit)`\n\nsplit函数是用于使用特定的切割符(regex)来分隔字符串成一个字符串数组，函数返回是一个数组。在其中每个出现regex的位置都要进行分解。\n\n需要注意是有以下几点:\n\n+ regex是可选项。字符串或正则表达式对象，它标识了分隔字符串时使用的是一个还是多个字符。如果忽略该选项，返回包含整个字符串的单一元素数组。\n+ limit也是可选项。该值用来限制返回数组中的元素个数。\n+ 要注意转义字符：“.”和“|”都是转义字符，必须得加\"\\\\\"。同理：*和+也是如此的。\n+ 如果用“.”作为分隔的话，必须是如下写法:String.split(\"\\\\.\"),这样才能正确的分隔开，不能用String.split(\".\");如果用“|”作为分隔的话，必须是如下写法:String.split(\"\\\\|\"),这样才能正确的分隔开，不能用String.split(\"|\");\n+ 如果在一个字符串中有多个分隔符，可以用“|”作为连字符，比如：“acountId=? and act_id =? or extra=?”,把三个都分隔出来，可以用\nString.split(\"and|or\");\n\nsplit函数结果与regex密切相关，常见的几种情况如下所示：\n\n```\npublic class SplitTest {\n\tpublic static void main(String[] args) {\n\t\tString str1 = \"a-b\";\t\t\n\t\tString str2 = \"a-b-\";\n\t\tString str3 = \"-a-b\";\n\t\tString str4 = \"-a-b-\";\n\t\tString str5 = \"a\";\n\t\tString str6 = \"-\";\n\t\tString str7 = \"--\";\n\t\tString str8 = \"\";\n\t\t\n\t\tsplit(str1);\n\t\tsplit(str2);\n\t\tsplit(str3);\n\t\tsplit(str4);\n\t\tsplit(str5);\n\t\tsplit(str6);\n\t\tsplit(str7);\n\t\tsplit(str8);\n\t}\n\tpublic static void split(String demo){\n\t\tString[] array = demo.split(\"-\");\n\t\tint len = array.length;\n\t\tSystem.out.print(\"\\\"\" + demo + \"\\\" 分割后的长度为：\" + len);\n\t\tif(len >= 0)\n\t\t{\n\t\t\tSystem.out.print(\",分割后的结果为：\");\n\t\t\tfor(int i=0; i<len; i++)\n\t\t\t{\n\t\t\t\tSystem.out.print(\" \\\"\"+array[i]+\"\\\"\");\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println();\n\t}\n}\n```\n---\n运行结果为：\n\n\"a-b\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"a-b-\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"-a-b\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"-a-b-\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"a\" 分割后的长度为：1,分割后的结果为:\"a\"\n\n\"-\" 分割后的长度为：0,分割后的结果为:\n\n\"--\" 分割后的长度为：0,分割后的结果为:\n\n\"\" 分割后的长度为：1,分割后的结果为:\"\"\n\n由此可以得出来：\n\n+ 当字符串只包含分隔符时，返回数组没有元素；\n+ 当字符串不包含分隔符时，返回数组只包含一个元素（该字符串本身）；\n+ 字符串最尾部出现的分隔符可以看成不存在，不影响字符串的分隔；\n+ 字符串最前端出现的分隔符将分隔出一个空字符串以及剩下的部分的正常分隔；\n\n","source":"_posts/每日一题-Length-of-Last-Word.md","raw":"title: '每日一题:Length-of-Last-Word'\ndate: 2015-07-27 12:37:22\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n>Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\n\n>If the last word does not exist, return 0.\n\n>Note: A word is defined as a character sequence consists of non-space characters only.\n\n>For example, \nGiven s = \"Hello World\",\nreturn 5.\n\n## 解答\n\n```\npublic class Solution {\n    public int lengthOfLastWord(String s) {\n        s = s.trim();\n        s = s.toLowerCase();\n        int length = 0;\n        \n        if (s.length() == 0) {\n            return 0;\n        }\n       \n        for (int i = s.length() - 1; i >= 0; i--) {\n            char ch = s.charAt(i);\n            if (ch >= 'a' && ch <= 'z') {\n                length++;\n            }\n            else if (ch == ' ') {\n                break;\n            }else {\n                return 0;\n            }\n        }\n        return length;\n    }\n}\n```\n\n## 注解\n用`split()\u0010`切词，然后对字符数组最后一个判断，效率有点低。\n\n直接从最后一位开始遍历，遇到空格就返回`length`，遇到字符就让length加1，遇到非字符和空格就返回`0`。\n\n\n## 反思(转载)\n\n\n在java.lang包中有String.split()方法的原型是：\n\n`public String[] split(String regex, int limit)`\n\nsplit函数是用于使用特定的切割符(regex)来分隔字符串成一个字符串数组，函数返回是一个数组。在其中每个出现regex的位置都要进行分解。\n\n需要注意是有以下几点:\n\n+ regex是可选项。字符串或正则表达式对象，它标识了分隔字符串时使用的是一个还是多个字符。如果忽略该选项，返回包含整个字符串的单一元素数组。\n+ limit也是可选项。该值用来限制返回数组中的元素个数。\n+ 要注意转义字符：“.”和“|”都是转义字符，必须得加\"\\\\\"。同理：*和+也是如此的。\n+ 如果用“.”作为分隔的话，必须是如下写法:String.split(\"\\\\.\"),这样才能正确的分隔开，不能用String.split(\".\");如果用“|”作为分隔的话，必须是如下写法:String.split(\"\\\\|\"),这样才能正确的分隔开，不能用String.split(\"|\");\n+ 如果在一个字符串中有多个分隔符，可以用“|”作为连字符，比如：“acountId=? and act_id =? or extra=?”,把三个都分隔出来，可以用\nString.split(\"and|or\");\n\nsplit函数结果与regex密切相关，常见的几种情况如下所示：\n\n```\npublic class SplitTest {\n\tpublic static void main(String[] args) {\n\t\tString str1 = \"a-b\";\t\t\n\t\tString str2 = \"a-b-\";\n\t\tString str3 = \"-a-b\";\n\t\tString str4 = \"-a-b-\";\n\t\tString str5 = \"a\";\n\t\tString str6 = \"-\";\n\t\tString str7 = \"--\";\n\t\tString str8 = \"\";\n\t\t\n\t\tsplit(str1);\n\t\tsplit(str2);\n\t\tsplit(str3);\n\t\tsplit(str4);\n\t\tsplit(str5);\n\t\tsplit(str6);\n\t\tsplit(str7);\n\t\tsplit(str8);\n\t}\n\tpublic static void split(String demo){\n\t\tString[] array = demo.split(\"-\");\n\t\tint len = array.length;\n\t\tSystem.out.print(\"\\\"\" + demo + \"\\\" 分割后的长度为：\" + len);\n\t\tif(len >= 0)\n\t\t{\n\t\t\tSystem.out.print(\",分割后的结果为：\");\n\t\t\tfor(int i=0; i<len; i++)\n\t\t\t{\n\t\t\t\tSystem.out.print(\" \\\"\"+array[i]+\"\\\"\");\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println();\n\t}\n}\n```\n---\n运行结果为：\n\n\"a-b\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"a-b-\" 分割后的长度为：2,分割后的结果为:\"a\" \"b\"\n\n\"-a-b\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"-a-b-\" 分割后的长度为：3,分割后的结果为:\"\" \"a\" \"b\"\n\n\"a\" 分割后的长度为：1,分割后的结果为:\"a\"\n\n\"-\" 分割后的长度为：0,分割后的结果为:\n\n\"--\" 分割后的长度为：0,分割后的结果为:\n\n\"\" 分割后的长度为：1,分割后的结果为:\"\"\n\n由此可以得出来：\n\n+ 当字符串只包含分隔符时，返回数组没有元素；\n+ 当字符串不包含分隔符时，返回数组只包含一个元素（该字符串本身）；\n+ 字符串最尾部出现的分隔符可以看成不存在，不影响字符串的分隔；\n+ 字符串最前端出现的分隔符将分隔出一个空字符串以及剩下的部分的正常分隔；\n\n","slug":"每日一题-Length-of-Last-Word","published":1,"updated":"2015-07-27T05:08:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2o00100xse1296hquh"},{"title":"每日一题:Implement-strStr","date":"2015-07-30T09:41:58.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n>Implement strStr().\n\n>Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\n\n\n## 解答\n\n```\npublic class Solution {\n    public int strStr(String haystack, String needle) {\n             int haystackindex = 0;\n        int needleindex = 0;\n        \n        while(haystackindex < haystack.length() && needleindex < needle.length()){\n            if(haystack.charAt(haystackindex) == needle.charAt(needleindex)){\n                haystackindex++;\n                needleindex++;\n            }else{\n                haystackindex = haystackindex - needleindex + 1;\n                needleindex = 0;\n            }\n        }\n        if(needleindex > needle.length() - 1) {\n            return haystackindex - needle.length();\n        }\n        else{\n            return -1;\n        }\n    }\n}\n\n```\n\n## 注解\n\n暴力匹配，没啥好说的，时间复杂度为 O(n*n)。\n\n\n","source":"_posts/每日一题-Implement-strStr.md","raw":"title: '每日一题:Implement-strStr'\ndate: 2015-07-30 17:41:58\ntags: [code, leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n>Implement strStr().\n\n>Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\n\n\n## 解答\n\n```\npublic class Solution {\n    public int strStr(String haystack, String needle) {\n             int haystackindex = 0;\n        int needleindex = 0;\n        \n        while(haystackindex < haystack.length() && needleindex < needle.length()){\n            if(haystack.charAt(haystackindex) == needle.charAt(needleindex)){\n                haystackindex++;\n                needleindex++;\n            }else{\n                haystackindex = haystackindex - needleindex + 1;\n                needleindex = 0;\n            }\n        }\n        if(needleindex > needle.length() - 1) {\n            return haystackindex - needle.length();\n        }\n        else{\n            return -1;\n        }\n    }\n}\n\n```\n\n## 注解\n\n暴力匹配，没啥好说的，时间复杂度为 O(n*n)。\n\n\n","slug":"每日一题-Implement-strStr","published":1,"updated":"2015-07-30T09:44:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2r00140xse8j76i016"},{"title":"每日一题:Count-and-Say","date":"2015-07-28T12:15:07.000Z","description":"每日一题，LeetCode.一时兴起，再来一题.","_content":"\n## 题目\n> The count-and-say sequence is the sequence of integers beginning as follows:\n> \n1, 11, 21, 1211, 111221, ...\n\n>1 is read off as \"one 1\" or 11.\n\n>11 is read off as \"two 1s\" or 21.\n\n>21 is read off as \"one 2, then one 1\" or 1211.\n\n>Given an integer n, generate the nth sequence.\n\n> Note: The sequence of integers will be represented as a string.\n\n## 解答\n\n```\npublic class Solution {\n    public String countAndSay(int n) {\n        if(n == 1){\n            return \"1\";\n        }\n        String str = countAndSay(n - 1)+ \"%\";\n        StringBuffer sb = new StringBuffer();\n        int count = 1;\n        for(int i = 0; i < str.length() - 1; i++){\n            if(str.charAt(i) == str.charAt(i + 1)){\n                count++;\n            }else{\n                sb.append(String.valueOf(count));\n                sb.append(str.charAt(i));\n                count = 1;\n            }\n        }\n        return sb.toString();\n    }\n}\n\n```\n\n## 注解\n\n采用递归的方式解决，然后处理过程就不多说啦。\n\n","source":"_posts/每日一题-Count-and-Say.md","raw":"title: '每日一题:Count-and-Say'\ndate: 2015-07-28 20:15:07\ntags: [code,leetcode]\ncategories: code\ndescription: 每日一题，LeetCode.一时兴起，再来一题.\n---\n\n## 题目\n> The count-and-say sequence is the sequence of integers beginning as follows:\n> \n1, 11, 21, 1211, 111221, ...\n\n>1 is read off as \"one 1\" or 11.\n\n>11 is read off as \"two 1s\" or 21.\n\n>21 is read off as \"one 2, then one 1\" or 1211.\n\n>Given an integer n, generate the nth sequence.\n\n> Note: The sequence of integers will be represented as a string.\n\n## 解答\n\n```\npublic class Solution {\n    public String countAndSay(int n) {\n        if(n == 1){\n            return \"1\";\n        }\n        String str = countAndSay(n - 1)+ \"%\";\n        StringBuffer sb = new StringBuffer();\n        int count = 1;\n        for(int i = 0; i < str.length() - 1; i++){\n            if(str.charAt(i) == str.charAt(i + 1)){\n                count++;\n            }else{\n                sb.append(String.valueOf(count));\n                sb.append(str.charAt(i));\n                count = 1;\n            }\n        }\n        return sb.toString();\n    }\n}\n\n```\n\n## 注解\n\n采用递归的方式解决，然后处理过程就不多说啦。\n\n","slug":"每日一题-Count-and-Say","published":1,"updated":"2015-07-28T12:21:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n2w00180xse8v31yomr"},{"title":"每日一题:Compare-Version-Numbers","date":"2015-07-28T00:04:21.000Z","description":"每天一道Leetcode","_content":"\n## 题目\n\n>Compare two version numbers version1 and version2.\nIf version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.\n\n>You may assume that the version strings are non-empty and contain only digits and the . character.\nThe . character does not represent a decimal point and is used to separate number sequences.\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\n\n>Here is an example of version numbers ordering:\n\n>`0.1 < 1.1 < 1.2 < 13.37`\n\n\n## 解答\n\n```\npublic class Solution {\n    public int compareVersion(String version1, String version2) {\n        String[] v1 = version1.split(\"\\\\.\");\n        String[] v2 = version2.split(\"\\\\.\");\n\n        int length = (v1.length > v2.length) ? v1.length : v2.length;\n        for(int i = 0; i < length; i++){\n\n            int num1 = (v1.length - 1 < i) ? 0 : Integer.parseInt(v1[i]);\n            int num2 = (v2.length - 1 < i) ? 0 : Integer.parseInt(v2[i]);\n\n            if(num1 > num2){\n                return 1;\n            }else if(num2 > num1){\n                return -1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## 注解\n\n先根据`.`切词，然后依次比较切词数组对应位大小(通过转换为整数).\n\n## 反思\n\n```\npublic static int parseInt(String s) throws NumberFormatException   \n{  \n    return parseInt(s,10);  \n }  \n```\n\n```\npublic static int parseInt(String s, int radix)throws NumberFormatException  \n{  \n    if (s == null) {  \n        throw new NumberFormatException(\"null\");  \n    }  \n  \n    if (radix < Character.MIN_RADIX) {          \n        //Character.MIN_RADIX=2  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" less than Character.MIN_RADIX\");  \n    }  \n  \n    if (radix > Character.MAX_RADIX) {          \n    //Character.MAN_RADIX=36  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" greater than Character.MAX_RADIX\");  \n    }  \n  \n    int result = 0;  \n    boolean negative = false;  \n    int i = 0, max = s.length();  \n    int limit;  \n    int multmin;  \n    int digit;  \n  \n    if (max > 0) {  \n        if (s.charAt(0) == '-') {  \n        negative = true;  \n        limit = Integer.MIN_VALUE;  \n        i++;  \n     } else {  \n        limit = -Integer.MAX_VALUE;  \n     }  \n     multmin = limit / radix;  \n     if (i < max) {  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        } else {  \n            result = -digit;  \n        }  \n     }  \n     while (i < max) {  \n     // Accumulating negatively avoids surprises near MAX_VALUE  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        if (result < multmin) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result *= radix;  \n        if (result < limit + digit) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result -= digit;  \n        }  \n    } else {  \n        throw NumberFormatException.forInputString(s);  \n    }  \n    if (negative) {  \n        if (i > 1) {  \n        return result;  \n        } else {    /* Only got \"-\" */  \n        throw NumberFormatException.forInputString(s);  \n        }  \n    } else {  \n        return -result;  \n    }  \n       }  \n```\n","source":"_posts/每日一题-Compare-Version-Numbers.md","raw":"title: 每日一题:Compare-Version-Numbers\ndate: 2015-07-28 08:04:21\ntags: [code,leetcode]\ncategories: code\ndescription: 每天一道Leetcode\n---\n\n## 题目\n\n>Compare two version numbers version1 and version2.\nIf version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.\n\n>You may assume that the version strings are non-empty and contain only digits and the . character.\nThe . character does not represent a decimal point and is used to separate number sequences.\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\n\n>Here is an example of version numbers ordering:\n\n>`0.1 < 1.1 < 1.2 < 13.37`\n\n\n## 解答\n\n```\npublic class Solution {\n    public int compareVersion(String version1, String version2) {\n        String[] v1 = version1.split(\"\\\\.\");\n        String[] v2 = version2.split(\"\\\\.\");\n\n        int length = (v1.length > v2.length) ? v1.length : v2.length;\n        for(int i = 0; i < length; i++){\n\n            int num1 = (v1.length - 1 < i) ? 0 : Integer.parseInt(v1[i]);\n            int num2 = (v2.length - 1 < i) ? 0 : Integer.parseInt(v2[i]);\n\n            if(num1 > num2){\n                return 1;\n            }else if(num2 > num1){\n                return -1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## 注解\n\n先根据`.`切词，然后依次比较切词数组对应位大小(通过转换为整数).\n\n## 反思\n\n```\npublic static int parseInt(String s) throws NumberFormatException   \n{  \n    return parseInt(s,10);  \n }  \n```\n\n```\npublic static int parseInt(String s, int radix)throws NumberFormatException  \n{  \n    if (s == null) {  \n        throw new NumberFormatException(\"null\");  \n    }  \n  \n    if (radix < Character.MIN_RADIX) {          \n        //Character.MIN_RADIX=2  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" less than Character.MIN_RADIX\");  \n    }  \n  \n    if (radix > Character.MAX_RADIX) {          \n    //Character.MAN_RADIX=36  \n        throw new NumberFormatException(\"radix \" + radix +  \n                    \" greater than Character.MAX_RADIX\");  \n    }  \n  \n    int result = 0;  \n    boolean negative = false;  \n    int i = 0, max = s.length();  \n    int limit;  \n    int multmin;  \n    int digit;  \n  \n    if (max > 0) {  \n        if (s.charAt(0) == '-') {  \n        negative = true;  \n        limit = Integer.MIN_VALUE;  \n        i++;  \n     } else {  \n        limit = -Integer.MAX_VALUE;  \n     }  \n     multmin = limit / radix;  \n     if (i < max) {  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        } else {  \n            result = -digit;  \n        }  \n     }  \n     while (i < max) {  \n     // Accumulating negatively avoids surprises near MAX_VALUE  \n        digit = Character.digit(s.charAt(i++),radix);  \n        if (digit < 0) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        if (result < multmin) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result *= radix;  \n        if (result < limit + digit) {  \n            throw NumberFormatException.forInputString(s);  \n        }  \n        result -= digit;  \n        }  \n    } else {  \n        throw NumberFormatException.forInputString(s);  \n    }  \n    if (negative) {  \n        if (i > 1) {  \n        return result;  \n        } else {    /* Only got \"-\" */  \n        throw NumberFormatException.forInputString(s);  \n        }  \n    } else {  \n        return -result;  \n    }  \n       }  \n```\n","slug":"每日一题-Compare-Version-Numbers","published":1,"updated":"2015-07-28T00:15:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n30001c0xsewapyqtz9"},{"title":"我的日程安排-Taskpaper和Reminder","date":"2015-07-30T08:09:31.000Z","description":"谈一谈我对GTD的理解，以及使用Taskpaper和Reminder实现MAC端和手机端任务的同步。","_content":"\n## GTD\n\n>参考 \n\n>[褪墨 时间管理](http://www.mifengtd.cn/)\n\n>《尽管去做：无压工作的艺术》[美]戴维艾伦\n\n首先谈一谈GTD。\n\nGTD全称为Get Things Done，GTD的核心理念概括就是必须记录下来要做的事，然后整理安排并自己一一去执行。GTD的五个核心原则是：收集、整理、组织、回顾、执行。\n\n![GTD工作流](http://images.mifengtd.cn/37/3726/2007/11/o_gtd.JPG)\n\nGTD的具体做法可以分成收集、整理、组织、回顾与行动五个步骤。\n\n收集：就是将你能够想到的所有的未尽事宜（未整理的念头）（GTD中称为stuff）\n统统罗列出来，放入inbox中，这个inbox既可以是用来放置各种实物的实际的文件夹或者篮子，也需要有用来记录各种事项的纸张或PDA。收集的关键在于把一切赶出你的大脑，记录下所有的工作。\n\n整理：将stuff放入inbox之后，就需要定期或不定期地进行整理，清空inbox。将这些stuff按是否可以付诸行动进行区分整理，对于不能付诸行动的内容，可以进一步分为参考资料、日后可能需要处理以及垃圾类，而对可行动的内容再考虑是否可在两分钟内完成，如果可以则立即行动完成它，如果不行对下一步行动进行组织。\n\n组织：个人感觉组织是GTD中的最核心的步骤，组织主要分成对参考资料的组织与对下一步行动的组织。对参考资料的组织主要就是一个文档管理系统，而对下一步行动的组织则一般可分为：下一步行动清单，等待清单和未来/某天清单。\n\n等待清单主要是记录那些委派他人去做的工作，未来/某天清单则是记录延迟处理且没有具体的完成日期的未来计划、电子等等。而下一步清单则是具体的下一步工作，而且如果一个项目涉及到多步骤的工作，那么需要将其细化成具体的工作。\n\nGTD对下一步清单的处理与一般的to-do list最大的不同在于，它作了进一步的细化，比如按照地点(context)（电脑旁、办公室、电话旁、家里、超市）分别记录只有在这些地方才可以执行的行动，而当你到这些地点后也就能够一目了然地知道应该做那些工作。\n\n回顾：回顾也是GTD中的一个重要步骤，一般需要每周进行回顾与检查，通过回顾及检查你的所有清单并进行更新，可以确保GTD系统的运作，而且在回顾的同时可能还需要进行未来一周的计划工作。\n\n执行：你可以按照每份清单开始行动了，在具体行动中可能会需要根据所处的环境，时间的多少，精力情况以及重要性来选择清单以及清单上的事项来行动。\n\n##Taskpaper\n\n\n>参考\n\n>[Taskpaper简介](http://www.waerfa.com/taskpaper)\n\n>[Taskpaper官网](http://www.hogbaysoftware.com/)\n\n不同平常的OmniFocus、Clear和Good Task工具，这是一个纯文本的GTD工具。给你无限的空间去组织你的任务。\n\n![Taskpaper mainframe](http://pix.waerfa.com//2014/03/CfakepathTaskPaper2.png)\n\n我的组织形式包括：`Inbox` `Project` `Someday/Maybe` `Waitting-For`\n\n一般有任何需要完成的事情，我会首先将其放入`Inbox`中，然后对其进行分类，如果是参考资料，我会将其放入evernote中保管。如果是立刻可以完成的，我就立刻去做，然后打上`@done`的标签。如果是不能立刻完成的，我会对其进行分类，放入`Project`中的`Personal`列表或者`Work`列表中。如果是委托给他人完成的事情放入`Waitting-For`中，加上`@delegate`标签和委托人。如果是以后需要完成的事情，我会放入`Someday/Maybe`列表中，等待以后分配和完成。每一次通过从Project中选择事情完成，完成后打上`@done`的标签。每天晚上通过内置的archieve功能对所有完成的事情进行回收和总结。\n\n##与Reminder同步，实现手机端提示\n\n首先上代码\n\n```\ntell (current date) as «class isot» as string to set current_date to text 1 thru 10\nto joinList(aList, delimiter)\n\tset retVal to \"\"\n\tset prevDelimiter to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to delimiter\n\tset retVal to aList as string\n\tset AppleScript's text item delimiters to prevDelimiter\n\treturn retVal\nend joinList\nto splitString(aString, delimiter)\n\tset retVal to {}\n\tset prevDelimiter to AppleScript's text item delimiters\n\tlog delimiter\n\tset AppleScript's text item delimiters to {delimiter}\n\tset retVal to every text item of aString\n\tset AppleScript's text item delimiters to prevDelimiter\n\treturn retVal\nend splitString\n\n\n# See if any tasks in Reminders.app \"Next-Actions\" list are completed\n# Mark those that are as @done in TaskPaper\n# Delete tasks currently in Reminders.app \"Now\" list\ntell application \"TaskPaper\" to run\ntell application \"Reminders\"\n\trun\n\ttell account \"iCloud\"\n\t\ttell list \"Next-Actions\"\n\t\t\tset tasks to get reminders\n\t\t\trepeat with k from 1 to length of tasks\n\t\t\t\tset this_task to item k of tasks\n\t\t\t\tset is_completed to get completed of this_task\n\t\t\t\tif is_completed is true then\n\t\t\t\t\tset this_task_name_and_project to get name of this_task\n\t\t\t\t\tset tmp to my splitString(this_task_name_and_project as text, \": \")\n\t\t\t\t\tset this_task_name to item 2 of tmp\n\t\t\t\t\ttell application \"TaskPaper\"\n\t\t\t\t\t\ttell document \"todo.taskpaper\"\n\t\t\t\t\t\t\trepeat with each in search with query this_task_name\n\t\t\t\t\t\t\t\ttell each\n\t\t\t\t\t\t\t\t\tif entry type of each is not project type then\n\t\t\t\t\t\t\t\t\t\tmake tag with properties {name:\"done\", value:current_date}\n\t\t\t\t\t\t\t\t\t\texit repeat\n\t\t\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\tend tell\n\t\t\t\t\t\t\tend repeat\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\tend if\n\t\t\tend repeat\n\t\t\tdelete reminders\n\t\tend tell\n\tend tell\nend tell\n\n# Move \"Next-Actions\" tasks from TaskPaper to Reminders.app\ntell application \"TaskPaper\"\n\trun\n\ttell document \"todo.taskpaper\"\n\t\tset debug to \"\"\n\t\trepeat with each in search with query \"((@today or @overdue or @due <= \" & current_date & \" ) and not @done)+d\"\n\t\t\tif (containing project of each is not missing value) and (entry type of each is not project type) and (entry type of each is not note type) then\n\t\t\t\tset containing_project to name of containing project of each\n\t\t\t\tif containing project of (containing project of each) is not missing value then\n\t\t\t\t\tset containing_project to (name of containing project of containing project of each) & \"/\" & name of containing project of each\n\t\t\t\tend if\n\t\t\t\tset the_task to containing_project & \": \" & name of each\n\t\t\t\tset the_priority to 0\n\t\t\t\tset the_note to \"\"\n\t\t\t\tif exists (tag named \"priority\" of each) then\n\t\t\t\t\tset the_priority to value of tag named \"priority\" of each\n\t\t\t\tend if\n\t\t\t\tif exists (note of each) then\n\t\t\t\t\tset the_note to name of note of each\n\t\t\t\tend if\n\t\t\t\ttell application \"Reminders\"\n\t\t\t\t\trun\n\t\t\t\t\ttell account \"iCloud\"\n\t\t\t\t\t\ttell list \"Next-Actions\"\n\t\t\t\t\t\t\tset newremin to make new reminder\n\t\t\t\t\t\t\tset name of newremin to the_task\n\t\t\t\t\t\t\tset priority of newremin to the_priority as number\n\t\t\t\t\t\t\tset body of newremin to the_note\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\tend tell\n\t\t\tend if\n\t\tend repeat\n\tend tell\nend tell\n\n# Move Reminders.app inbox to TaskPaper\n# Include the due date, if there is one\ntell application \"Reminders\"\n\ttell account \"iCloud\"\n\t\ttell list \"Inbox\"\n\t\t\tset inbox_contents to (get reminders)\n\t\t\tif length of inbox_contents is greater than 0 then\n\t\t\t\trepeat with k from 1 to length of inbox_contents\n\t\t\t\t\tset this_todo to item k of inbox_contents\n\t\t\t\t\tset inbox_item to \"- \" & (get name of this_todo)\n\t\t\t\t\tset due_date to (get due date of this_todo)\n\t\t\t\t\tset due_date_string to \"\"\n\t\t\t\t\tif due_date is not missing value then\n\t\t\t\t\t\tset y to text -4 thru -1 of (\"0000\" & (year of due_date))\n\t\t\t\t\t\tset m to text -2 thru -1 of (\"00\" & ((month of due_date) as integer))\n\t\t\t\t\t\tset d to text -2 thru -1 of (\"00\" & (day of due_date))\n\t\t\t\t\t\tset due_date_string to \" @due(\" & y & \"-\" & m & \"-\" & d & \")\"\n\t\t\t\t\tend if\n\t\t\t\t\tset inbox_item to inbox_item & due_date_string\n\t\t\t\t\ttell application \"TaskPaper\"\n\t\t\t\t\t\ttell document \"todo.taskpaper\"\n\t\t\t\t\t\t\ttell project \"Inbox\"\n\t\t\t\t\t\t\t\tmake new entry with properties {name:inbox_item}\n\t\t\t\t\t\t\tend tell\n\t\t\t\t\t\t\tsave\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\t\tdelete this_todo\n\t\t\t\tend repeat\n\t\t\tend if\n\t\tend tell\n\tend tell\nend tell\ntell application \"Reminders\" to quit\n```\n\n这段AppleScript代码实现从IOS端的Inbox中同步到Taskpaper文件中的Inbox，将标上`@today` `@overdue` `@due<current time` `not @done`的任务从Taskpaper同步到IOS端，并将IOS端完成的事情在Taskpaper上打上`@done`的标签。","source":"_posts/我的日程安排-Taskpaper和Reminder.md","raw":"title: 我的日程安排-Taskpaper和Reminder\ndate: 2015-07-30 16:09:31\ntags: [tools,Taskpaper]\ncategories: tools\ndescription: 谈一谈我对GTD的理解，以及使用Taskpaper和Reminder实现MAC端和手机端任务的同步。\n---\n\n## GTD\n\n>参考 \n\n>[褪墨 时间管理](http://www.mifengtd.cn/)\n\n>《尽管去做：无压工作的艺术》[美]戴维艾伦\n\n首先谈一谈GTD。\n\nGTD全称为Get Things Done，GTD的核心理念概括就是必须记录下来要做的事，然后整理安排并自己一一去执行。GTD的五个核心原则是：收集、整理、组织、回顾、执行。\n\n![GTD工作流](http://images.mifengtd.cn/37/3726/2007/11/o_gtd.JPG)\n\nGTD的具体做法可以分成收集、整理、组织、回顾与行动五个步骤。\n\n收集：就是将你能够想到的所有的未尽事宜（未整理的念头）（GTD中称为stuff）\n统统罗列出来，放入inbox中，这个inbox既可以是用来放置各种实物的实际的文件夹或者篮子，也需要有用来记录各种事项的纸张或PDA。收集的关键在于把一切赶出你的大脑，记录下所有的工作。\n\n整理：将stuff放入inbox之后，就需要定期或不定期地进行整理，清空inbox。将这些stuff按是否可以付诸行动进行区分整理，对于不能付诸行动的内容，可以进一步分为参考资料、日后可能需要处理以及垃圾类，而对可行动的内容再考虑是否可在两分钟内完成，如果可以则立即行动完成它，如果不行对下一步行动进行组织。\n\n组织：个人感觉组织是GTD中的最核心的步骤，组织主要分成对参考资料的组织与对下一步行动的组织。对参考资料的组织主要就是一个文档管理系统，而对下一步行动的组织则一般可分为：下一步行动清单，等待清单和未来/某天清单。\n\n等待清单主要是记录那些委派他人去做的工作，未来/某天清单则是记录延迟处理且没有具体的完成日期的未来计划、电子等等。而下一步清单则是具体的下一步工作，而且如果一个项目涉及到多步骤的工作，那么需要将其细化成具体的工作。\n\nGTD对下一步清单的处理与一般的to-do list最大的不同在于，它作了进一步的细化，比如按照地点(context)（电脑旁、办公室、电话旁、家里、超市）分别记录只有在这些地方才可以执行的行动，而当你到这些地点后也就能够一目了然地知道应该做那些工作。\n\n回顾：回顾也是GTD中的一个重要步骤，一般需要每周进行回顾与检查，通过回顾及检查你的所有清单并进行更新，可以确保GTD系统的运作，而且在回顾的同时可能还需要进行未来一周的计划工作。\n\n执行：你可以按照每份清单开始行动了，在具体行动中可能会需要根据所处的环境，时间的多少，精力情况以及重要性来选择清单以及清单上的事项来行动。\n\n##Taskpaper\n\n\n>参考\n\n>[Taskpaper简介](http://www.waerfa.com/taskpaper)\n\n>[Taskpaper官网](http://www.hogbaysoftware.com/)\n\n不同平常的OmniFocus、Clear和Good Task工具，这是一个纯文本的GTD工具。给你无限的空间去组织你的任务。\n\n![Taskpaper mainframe](http://pix.waerfa.com//2014/03/CfakepathTaskPaper2.png)\n\n我的组织形式包括：`Inbox` `Project` `Someday/Maybe` `Waitting-For`\n\n一般有任何需要完成的事情，我会首先将其放入`Inbox`中，然后对其进行分类，如果是参考资料，我会将其放入evernote中保管。如果是立刻可以完成的，我就立刻去做，然后打上`@done`的标签。如果是不能立刻完成的，我会对其进行分类，放入`Project`中的`Personal`列表或者`Work`列表中。如果是委托给他人完成的事情放入`Waitting-For`中，加上`@delegate`标签和委托人。如果是以后需要完成的事情，我会放入`Someday/Maybe`列表中，等待以后分配和完成。每一次通过从Project中选择事情完成，完成后打上`@done`的标签。每天晚上通过内置的archieve功能对所有完成的事情进行回收和总结。\n\n##与Reminder同步，实现手机端提示\n\n首先上代码\n\n```\ntell (current date) as «class isot» as string to set current_date to text 1 thru 10\nto joinList(aList, delimiter)\n\tset retVal to \"\"\n\tset prevDelimiter to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to delimiter\n\tset retVal to aList as string\n\tset AppleScript's text item delimiters to prevDelimiter\n\treturn retVal\nend joinList\nto splitString(aString, delimiter)\n\tset retVal to {}\n\tset prevDelimiter to AppleScript's text item delimiters\n\tlog delimiter\n\tset AppleScript's text item delimiters to {delimiter}\n\tset retVal to every text item of aString\n\tset AppleScript's text item delimiters to prevDelimiter\n\treturn retVal\nend splitString\n\n\n# See if any tasks in Reminders.app \"Next-Actions\" list are completed\n# Mark those that are as @done in TaskPaper\n# Delete tasks currently in Reminders.app \"Now\" list\ntell application \"TaskPaper\" to run\ntell application \"Reminders\"\n\trun\n\ttell account \"iCloud\"\n\t\ttell list \"Next-Actions\"\n\t\t\tset tasks to get reminders\n\t\t\trepeat with k from 1 to length of tasks\n\t\t\t\tset this_task to item k of tasks\n\t\t\t\tset is_completed to get completed of this_task\n\t\t\t\tif is_completed is true then\n\t\t\t\t\tset this_task_name_and_project to get name of this_task\n\t\t\t\t\tset tmp to my splitString(this_task_name_and_project as text, \": \")\n\t\t\t\t\tset this_task_name to item 2 of tmp\n\t\t\t\t\ttell application \"TaskPaper\"\n\t\t\t\t\t\ttell document \"todo.taskpaper\"\n\t\t\t\t\t\t\trepeat with each in search with query this_task_name\n\t\t\t\t\t\t\t\ttell each\n\t\t\t\t\t\t\t\t\tif entry type of each is not project type then\n\t\t\t\t\t\t\t\t\t\tmake tag with properties {name:\"done\", value:current_date}\n\t\t\t\t\t\t\t\t\t\texit repeat\n\t\t\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\tend tell\n\t\t\t\t\t\t\tend repeat\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\tend if\n\t\t\tend repeat\n\t\t\tdelete reminders\n\t\tend tell\n\tend tell\nend tell\n\n# Move \"Next-Actions\" tasks from TaskPaper to Reminders.app\ntell application \"TaskPaper\"\n\trun\n\ttell document \"todo.taskpaper\"\n\t\tset debug to \"\"\n\t\trepeat with each in search with query \"((@today or @overdue or @due <= \" & current_date & \" ) and not @done)+d\"\n\t\t\tif (containing project of each is not missing value) and (entry type of each is not project type) and (entry type of each is not note type) then\n\t\t\t\tset containing_project to name of containing project of each\n\t\t\t\tif containing project of (containing project of each) is not missing value then\n\t\t\t\t\tset containing_project to (name of containing project of containing project of each) & \"/\" & name of containing project of each\n\t\t\t\tend if\n\t\t\t\tset the_task to containing_project & \": \" & name of each\n\t\t\t\tset the_priority to 0\n\t\t\t\tset the_note to \"\"\n\t\t\t\tif exists (tag named \"priority\" of each) then\n\t\t\t\t\tset the_priority to value of tag named \"priority\" of each\n\t\t\t\tend if\n\t\t\t\tif exists (note of each) then\n\t\t\t\t\tset the_note to name of note of each\n\t\t\t\tend if\n\t\t\t\ttell application \"Reminders\"\n\t\t\t\t\trun\n\t\t\t\t\ttell account \"iCloud\"\n\t\t\t\t\t\ttell list \"Next-Actions\"\n\t\t\t\t\t\t\tset newremin to make new reminder\n\t\t\t\t\t\t\tset name of newremin to the_task\n\t\t\t\t\t\t\tset priority of newremin to the_priority as number\n\t\t\t\t\t\t\tset body of newremin to the_note\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\tend tell\n\t\t\tend if\n\t\tend repeat\n\tend tell\nend tell\n\n# Move Reminders.app inbox to TaskPaper\n# Include the due date, if there is one\ntell application \"Reminders\"\n\ttell account \"iCloud\"\n\t\ttell list \"Inbox\"\n\t\t\tset inbox_contents to (get reminders)\n\t\t\tif length of inbox_contents is greater than 0 then\n\t\t\t\trepeat with k from 1 to length of inbox_contents\n\t\t\t\t\tset this_todo to item k of inbox_contents\n\t\t\t\t\tset inbox_item to \"- \" & (get name of this_todo)\n\t\t\t\t\tset due_date to (get due date of this_todo)\n\t\t\t\t\tset due_date_string to \"\"\n\t\t\t\t\tif due_date is not missing value then\n\t\t\t\t\t\tset y to text -4 thru -1 of (\"0000\" & (year of due_date))\n\t\t\t\t\t\tset m to text -2 thru -1 of (\"00\" & ((month of due_date) as integer))\n\t\t\t\t\t\tset d to text -2 thru -1 of (\"00\" & (day of due_date))\n\t\t\t\t\t\tset due_date_string to \" @due(\" & y & \"-\" & m & \"-\" & d & \")\"\n\t\t\t\t\tend if\n\t\t\t\t\tset inbox_item to inbox_item & due_date_string\n\t\t\t\t\ttell application \"TaskPaper\"\n\t\t\t\t\t\ttell document \"todo.taskpaper\"\n\t\t\t\t\t\t\ttell project \"Inbox\"\n\t\t\t\t\t\t\t\tmake new entry with properties {name:inbox_item}\n\t\t\t\t\t\t\tend tell\n\t\t\t\t\t\t\tsave\n\t\t\t\t\t\tend tell\n\t\t\t\t\tend tell\n\t\t\t\t\tdelete this_todo\n\t\t\t\tend repeat\n\t\t\tend if\n\t\tend tell\n\tend tell\nend tell\ntell application \"Reminders\" to quit\n```\n\n这段AppleScript代码实现从IOS端的Inbox中同步到Taskpaper文件中的Inbox，将标上`@today` `@overdue` `@due<current time` `not @done`的任务从Taskpaper同步到IOS端，并将IOS端完成的事情在Taskpaper上打上`@done`的标签。","slug":"我的日程安排-Taskpaper和Reminder","published":1,"updated":"2015-07-30T09:59:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n33001g0xsemo21017a"},{"title":"慢跑鞋入门","date":"2015-07-18T15:19:12.000Z","description":"慢跑鞋入手指南","_content":"\n## 如何测试自己适合的慢跑鞋\n\n通常我们买跑鞋,一般指的是慢跑鞋.慢跑鞋的设计理念是保护为主,让你在跑步时身体不受到伤害,而并不是为了追求速度.人在走或者跑的时候,脚在落地时会有一个旋转的动作(pronation),这个动作加上足弓的下陷就成了人体的脚部缓震系统.慢跑鞋的保护就是对这个缓震系统的一个加强与矫正.\n\n大部分慢跑鞋分了三类:缓震(cushion),稳定(stability),步态控制(motion control).这个分类就是根据人的pronation的程度来分的(而不是足弓的高低,平足者一样可以有完全正常的pronation).Pronation分了三类:underpronation(pronation不足),neutral(正常),overpronation(pronation过度).缓震系针对的是underpronation与neutral,而稳定系与控制系针对的是不同程度的overpronation.这里有解析pronation的图片.\n\n![img](http://i2.hoopchina.com.cn/blogfile/201309/02/137812802545688.jpg \"这张图就是有不同程度pronation的人站立时的图片\")\n\n大家应该也听过慢跑鞋有不同等级的划分,有人用\"入门级,实用级,顶级,超顶级\"来形容,而也有人用\"轻量级(minimum)中量级(moderate)重量级(maximum)\"这类的专业名词.但总的来说他们说的都是一个东西:跑鞋根据不同缓震强度来划分的等级.缓震强度越高,能承受的体重也就越大,但相对的一般来说鞋也就越重.有很多人说\"轻体重踩不动顶级鞋\"其实是一个误区,顶级鞋的吸震能力更高,但不代表顶级鞋肯定就比中级鞋更硬.举个例子:在几大跑鞋厂家里,Brooks在这点上体现的最明显,Brooks的稳定系顶级款Trance要明显比他们的稳定系实用级款Adrenaline GTS要软很多,不管什么体重踩上去都是这种感觉,这是不同的设计理念导致的差距:GTS追求的是跑步时的回弹,而Trance追求的是顶级的保护与舒适度.尽管如此,根据自己的体重选择适合自己的鞋而不是盲目追求顶级款还是很重要的.\n\n总结一下,跑鞋根据体重等级和pronation类型各分了三类,组成了一个九宫格.而想要知道自己处于这个九宫格的什么位置,可以去美津浓的网站上做一个测试,根据这个测试的结果来选择自己的慢跑鞋对新手来说是非常稳妥的了\n\n[美津浓测试地址](www.myprecisionfit.com)\n\n## 跑鞋分类介绍\n\n接下来,我对各大品牌的公路慢跑鞋做了一个大体总结,参考了runningwarehouse的资料.其中不包括越野跑竞速跑赤足跑等等等等,只有最基本的普通慢跑鞋,给刚入门的新手当一个参考,型号可能有不全.\n\nAsics与Brooks:跑鞋领域的代表,产品线最齐全 \n\nNew Balance与Saucony:前些年很好,最近下滑严重,但依然保证了一线大厂的水平 \n\nNike与Adidas:面对年轻人的时尚“跑鞋”居多,但是专业产品也有很高水准 \n\nMizuno:实用系,坚持结构缓震\n\n然后是具体的产品型号,依照pronation分类以及产品定价来排序:\n\n### Asics\n\n特点是鞋楦非常适合亚洲人,当家技术Gel吸震能力极强,脚感极其出色,也因此有不少鞋款“只有吸,没有回弹”,但总的来说,Asics是最舒适的选择.\n#### 缓震系\nGel Kinsei系列:200美元级别,Maximum级,脚感软.稍微偏离普通慢跑鞋的定义.\nGel Nimbus系列:145美元级别,Maximum级,脚感软.\nGel Cumulus系列:115美元级别,Moderate级,脚感较软.\nGel Oracle:110美元级别,为了平足neutral跑者设计,Maximum级,脚感较软.\nGel Flux:100美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nGel Kayano系列:150美元级别,Asics跑鞋的象征,以前被吹的没边了的“跑王”,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nGT 2000系列:120美元级别,相当于以前的Gel 21X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nGT 1000系列:100美元级别,相当于以前的Gel 11X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nGel Forte:110美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\n \n### Brooks\n国内比较难购买,相比Asics来说更偏向纯跑步的跑友,鞋款普遍包裹能力强,当家技术DNA兼顾吸震与回弹,产品普遍内侧支撑强,是做控制系跑鞋最专业的厂家.\n\n#### 缓震系\nGlycerin系列:150美元级别,Maximum级,脚感软.\nGhost系列:110美元级别,Moderate级,脚感较软.\nDefyance系列,110美元级别,这个系列是Brooks稳定系的Adrenaline GTS的一个缓震系版本,除了中底没有内侧额外支撑之外一切都是一样的.Moderate级,脚感较硬.\nDyad系列,110美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nLaunch:90美元级别,可兼职竞速鞋,Moderate级,脚感较软,轻量设计.\n \n#### 稳定系\nTrance系列:150美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nAdrenaline GTS系列:110美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较硬.\nRavenna系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nBeast系列:140美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\nAddiction系列:110美元级别,为了平足并有较重overpronation跑者设计,Moderate级,脚感较软.\n \n### New Balance\n每隔几年都换一次当家技术,现在的最新技术是N2近地缓冲,吸震能力非常好,脚感不输于asics,同asics一样在鞋楦上有优势.\n\n#### 缓震系\n1080系列:135美元级别,Maximum级,脚感软,轻量设计.\n840系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\n1260系列:145美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\n940系列:120美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感较软.\n870系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软,轻量设计.\n \n#### 控制系\n1340:135美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感软.\n \n### Saucony\n国内一样不好买,当家技术powergrid兼具吸震与回弹,产品脚感普遍偏软.\n\n#### 缓震系\nCortana系列:150美元级别,Maximum级,脚感较软,轻量设计.\nTriumph系列:130美元级别,Maximum级,脚感非常软.\nEchelon系列,120美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nRide系列:110美元级别,Moderate级,脚感软.\n \n#### 稳定系\nHurricane系列:140美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nOmni系列:120美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.\nGuide系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nStabil CS系列:130美元级别,为了平足并有较重overpronation跑者设计,Maximum级,脚感软.\n \n### Nike\n气垫系产品回弹极强,lunar系回弹稍弱但吸震更好,产品普遍偏软并且内侧支撑较差.\n\n#### 缓震系\nAir Max+系列:180美元级别,Maximum级,脚感较软,不太能算是跑鞋.\nFlyknit Lunar1+:160美元级别,Moderate级,脚感软,轻量设计.\nZoom Vomero+系列:130美元级别,Maximum级,脚感非常软.\nAir Pegasus+系列:100美元级别,Moderate级,脚感软.\n \n#### 稳定系\nLunarEclipse+系列:135美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软.\nZoom Structure+系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nLunarGlide+系列:110美元级别,为了轻度overpronation跑者设计,Moderate级,脚感软.\n \n### Adidas\n阿迪的科技介绍都很多,总的来说传统鞋款里的formotion提供了额外的步态控制,而boost材料在吸震和回弹上都表现极为出色.新的Boost系列有取代Supernova系列旗舰的势头,Ride和Salvation系列生死不明.\n\n#### 缓震系\nEnergy Boost:150美元级别,Maximum级,脚感软,轻量设计.\nSupernova Glide系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nadistar Boost:170美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软,轻量设计.\nSupernova Sequence系列:120美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n### Mizuno\n唯一一个还在坚持结构缓震的厂家,产品普遍脚感较硬同时缺少内侧支撑能力,和Brooks一样包裹性强,更适合纯跑友.\n\n#### 缓震系\nWave Prophecy系列:200美元级别,Maximum级,脚感较硬.稍微偏离普通慢跑鞋的定义.\nWave Creation系列:150美元级别,Maximum级,脚感较软.\nWave Enigma系列:135美元级别,Maximum级,脚感较软.\nWave Rider系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nNirvara系列生死不明,先不放这\nWave Inspire系列:115美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nWave Alchemy系列:115美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.被各大网站归到稳定系类,支撑比起别的控制系实在是不够.","source":"_posts/慢跑鞋入门.md","raw":"title: 慢跑鞋入门\ndate: 2015-07-18 23:19:12\ntags: [life,running]\ncategories: life\ndescription: 慢跑鞋入手指南\n---\n\n## 如何测试自己适合的慢跑鞋\n\n通常我们买跑鞋,一般指的是慢跑鞋.慢跑鞋的设计理念是保护为主,让你在跑步时身体不受到伤害,而并不是为了追求速度.人在走或者跑的时候,脚在落地时会有一个旋转的动作(pronation),这个动作加上足弓的下陷就成了人体的脚部缓震系统.慢跑鞋的保护就是对这个缓震系统的一个加强与矫正.\n\n大部分慢跑鞋分了三类:缓震(cushion),稳定(stability),步态控制(motion control).这个分类就是根据人的pronation的程度来分的(而不是足弓的高低,平足者一样可以有完全正常的pronation).Pronation分了三类:underpronation(pronation不足),neutral(正常),overpronation(pronation过度).缓震系针对的是underpronation与neutral,而稳定系与控制系针对的是不同程度的overpronation.这里有解析pronation的图片.\n\n![img](http://i2.hoopchina.com.cn/blogfile/201309/02/137812802545688.jpg \"这张图就是有不同程度pronation的人站立时的图片\")\n\n大家应该也听过慢跑鞋有不同等级的划分,有人用\"入门级,实用级,顶级,超顶级\"来形容,而也有人用\"轻量级(minimum)中量级(moderate)重量级(maximum)\"这类的专业名词.但总的来说他们说的都是一个东西:跑鞋根据不同缓震强度来划分的等级.缓震强度越高,能承受的体重也就越大,但相对的一般来说鞋也就越重.有很多人说\"轻体重踩不动顶级鞋\"其实是一个误区,顶级鞋的吸震能力更高,但不代表顶级鞋肯定就比中级鞋更硬.举个例子:在几大跑鞋厂家里,Brooks在这点上体现的最明显,Brooks的稳定系顶级款Trance要明显比他们的稳定系实用级款Adrenaline GTS要软很多,不管什么体重踩上去都是这种感觉,这是不同的设计理念导致的差距:GTS追求的是跑步时的回弹,而Trance追求的是顶级的保护与舒适度.尽管如此,根据自己的体重选择适合自己的鞋而不是盲目追求顶级款还是很重要的.\n\n总结一下,跑鞋根据体重等级和pronation类型各分了三类,组成了一个九宫格.而想要知道自己处于这个九宫格的什么位置,可以去美津浓的网站上做一个测试,根据这个测试的结果来选择自己的慢跑鞋对新手来说是非常稳妥的了\n\n[美津浓测试地址](www.myprecisionfit.com)\n\n## 跑鞋分类介绍\n\n接下来,我对各大品牌的公路慢跑鞋做了一个大体总结,参考了runningwarehouse的资料.其中不包括越野跑竞速跑赤足跑等等等等,只有最基本的普通慢跑鞋,给刚入门的新手当一个参考,型号可能有不全.\n\nAsics与Brooks:跑鞋领域的代表,产品线最齐全 \n\nNew Balance与Saucony:前些年很好,最近下滑严重,但依然保证了一线大厂的水平 \n\nNike与Adidas:面对年轻人的时尚“跑鞋”居多,但是专业产品也有很高水准 \n\nMizuno:实用系,坚持结构缓震\n\n然后是具体的产品型号,依照pronation分类以及产品定价来排序:\n\n### Asics\n\n特点是鞋楦非常适合亚洲人,当家技术Gel吸震能力极强,脚感极其出色,也因此有不少鞋款“只有吸,没有回弹”,但总的来说,Asics是最舒适的选择.\n#### 缓震系\nGel Kinsei系列:200美元级别,Maximum级,脚感软.稍微偏离普通慢跑鞋的定义.\nGel Nimbus系列:145美元级别,Maximum级,脚感软.\nGel Cumulus系列:115美元级别,Moderate级,脚感较软.\nGel Oracle:110美元级别,为了平足neutral跑者设计,Maximum级,脚感较软.\nGel Flux:100美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nGel Kayano系列:150美元级别,Asics跑鞋的象征,以前被吹的没边了的“跑王”,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nGT 2000系列:120美元级别,相当于以前的Gel 21X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nGT 1000系列:100美元级别,相当于以前的Gel 11X0系列,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nGel Forte:110美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\n \n### Brooks\n国内比较难购买,相比Asics来说更偏向纯跑步的跑友,鞋款普遍包裹能力强,当家技术DNA兼顾吸震与回弹,产品普遍内侧支撑强,是做控制系跑鞋最专业的厂家.\n\n#### 缓震系\nGlycerin系列:150美元级别,Maximum级,脚感软.\nGhost系列:110美元级别,Moderate级,脚感较软.\nDefyance系列,110美元级别,这个系列是Brooks稳定系的Adrenaline GTS的一个缓震系版本,除了中底没有内侧额外支撑之外一切都是一样的.Moderate级,脚感较硬.\nDyad系列,110美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nLaunch:90美元级别,可兼职竞速鞋,Moderate级,脚感较软,轻量设计.\n \n#### 稳定系\nTrance系列:150美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nAdrenaline GTS系列:110美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较硬.\nRavenna系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nBeast系列:140美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感较软.\nAddiction系列:110美元级别,为了平足并有较重overpronation跑者设计,Moderate级,脚感较软.\n \n### New Balance\n每隔几年都换一次当家技术,现在的最新技术是N2近地缓冲,吸震能力非常好,脚感不输于asics,同asics一样在鞋楦上有优势.\n\n#### 缓震系\n1080系列:135美元级别,Maximum级,脚感软,轻量设计.\n840系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\n1260系列:145美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\n940系列:120美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感较软.\n870系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软,轻量设计.\n \n#### 控制系\n1340:135美元级别,为了平足并有严重overpronation跑者设计,Maximum级,脚感软.\n \n### Saucony\n国内一样不好买,当家技术powergrid兼具吸震与回弹,产品脚感普遍偏软.\n\n#### 缓震系\nCortana系列:150美元级别,Maximum级,脚感较软,轻量设计.\nTriumph系列:130美元级别,Maximum级,脚感非常软.\nEchelon系列,120美元级别,为了平足neutral跑者设计,Moderate级,脚感较软.\nRide系列:110美元级别,Moderate级,脚感软.\n \n#### 稳定系\nHurricane系列:140美元级别,为了中至重度overpronation跑者设计,Maximum级,脚感软.\nOmni系列:120美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.\nGuide系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nStabil CS系列:130美元级别,为了平足并有较重overpronation跑者设计,Maximum级,脚感软.\n \n### Nike\n气垫系产品回弹极强,lunar系回弹稍弱但吸震更好,产品普遍偏软并且内侧支撑较差.\n\n#### 缓震系\nAir Max+系列:180美元级别,Maximum级,脚感较软,不太能算是跑鞋.\nFlyknit Lunar1+:160美元级别,Moderate级,脚感软,轻量设计.\nZoom Vomero+系列:130美元级别,Maximum级,脚感非常软.\nAir Pegasus+系列:100美元级别,Moderate级,脚感软.\n \n#### 稳定系\nLunarEclipse+系列:135美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软.\nZoom Structure+系列:110美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\nLunarGlide+系列:110美元级别,为了轻度overpronation跑者设计,Moderate级,脚感软.\n \n### Adidas\n阿迪的科技介绍都很多,总的来说传统鞋款里的formotion提供了额外的步态控制,而boost材料在吸震和回弹上都表现极为出色.新的Boost系列有取代Supernova系列旗舰的势头,Ride和Salvation系列生死不明.\n\n#### 缓震系\nEnergy Boost:150美元级别,Maximum级,脚感软,轻量设计.\nSupernova Glide系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nadistar Boost:170美元级别,为了轻至中度overpronation跑者设计,Maximum级,脚感软,轻量设计.\nSupernova Sequence系列:120美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n### Mizuno\n唯一一个还在坚持结构缓震的厂家,产品普遍脚感较硬同时缺少内侧支撑能力,和Brooks一样包裹性强,更适合纯跑友.\n\n#### 缓震系\nWave Prophecy系列:200美元级别,Maximum级,脚感较硬.稍微偏离普通慢跑鞋的定义.\nWave Creation系列:150美元级别,Maximum级,脚感较软.\nWave Enigma系列:135美元级别,Maximum级,脚感较软.\nWave Rider系列:115美元级别,Moderate级,脚感较软.\n \n#### 稳定系\nNirvara系列生死不明,先不放这\nWave Inspire系列:115美元级别,为了轻至中度overpronation跑者设计,Moderate级,脚感较软.\n \n#### 控制系\nWave Alchemy系列:115美元级别,为了中至重度overpronation跑者设计,Moderate级,脚感较软.被各大网站归到稳定系类,支撑比起别的控制系实在是不够.","slug":"慢跑鞋入门","published":1,"updated":"2015-07-20T12:36:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n37001n0xse1d01nlj6"},{"title":"取代PPT的mdpress","date":"2015-07-25T10:26:44.000Z","description":"最近发现一款神器impress.js，然后特别想将markdown和impress.js结合起来，结果就发现了这货mdpress。","_content":"\n## 缘起\n\n还在用PPT吗？孩子，你快被淘汰了。impress.js绝对是你的不二选择。\n\nimpress.js 是国外一位开发者受 Prezi 启发，采用CSS3与JavaScript语言完成的一个可供开发者使用的表现层框架(演示工具)。现在普通开发者可以利用impress.js自己开发出类似效果的演示工具，但性能比基于FLASH的Prezi更优。其功能包括画布的无限旋转与缩放，任意角度放置任意大小的文字，CSS3 3D效果支持等。同时，也支持传统 PowerPoint 形式的幻灯演示。\n\n> [impress.js github库](https://github.com/bartaz/impress.js)\n\n> [官方demo](http://bartaz.github.com/impress.js)\n\n## 安装\n\n还是这句话，windows用户洗洗睡吧。Mac用户使用`sudo gem install mdpress`。Ubuntu用户首先安装需要的包`sudo apt-get install gem ruby-1.9.1-dev`，然后安装mdpress`sudo gem install mdpress\u0010`。\n\n## 使用\n\n1. 创建一个md文件，格式参考[mdpress full userage](http://egonschiele.github.io/mdpress/)\n2. 跳转到该文件目录下，使用`mdpress filename.md`生成。\n3. 在该目录下，你会发现一个与md文件同名的文件夹，点击其中的`index.html`文件展示。\n\n## 注意\n\n在该项目git库的issues存在`issues#41\u0010`,解决方法：\n\n> Hi,\nit seems it does not work with current redcarpet. As a workaround, I have installed redcarpet 3.1.2 manually and it works.\n\n>I'll try to make a fix later.\n\n>Best regards\n>Josef\n\n首先使用`gem uninstall redcarpet --v=3.3.2`删除`redcarpet 3.3.2`依赖库 ， 然后使用`gem install redcarpet -v 3.1.2`安装`redcarpet 3.1.2`依赖库。当然作者应该也会尽快修复这个问题的。\n\n\n\n\n\n\n\n\n\n","source":"_posts/取代PPT的mdpress.md","raw":"title: 取代PPT的mdpress\ndate: 2015-07-25 18:26:44\ntags: [tools, mdpress]\ncategories: tools\ndescription: 最近发现一款神器impress.js，然后特别想将markdown和impress.js结合起来，结果就发现了这货mdpress。\n---\n\n## 缘起\n\n还在用PPT吗？孩子，你快被淘汰了。impress.js绝对是你的不二选择。\n\nimpress.js 是国外一位开发者受 Prezi 启发，采用CSS3与JavaScript语言完成的一个可供开发者使用的表现层框架(演示工具)。现在普通开发者可以利用impress.js自己开发出类似效果的演示工具，但性能比基于FLASH的Prezi更优。其功能包括画布的无限旋转与缩放，任意角度放置任意大小的文字，CSS3 3D效果支持等。同时，也支持传统 PowerPoint 形式的幻灯演示。\n\n> [impress.js github库](https://github.com/bartaz/impress.js)\n\n> [官方demo](http://bartaz.github.com/impress.js)\n\n## 安装\n\n还是这句话，windows用户洗洗睡吧。Mac用户使用`sudo gem install mdpress`。Ubuntu用户首先安装需要的包`sudo apt-get install gem ruby-1.9.1-dev`，然后安装mdpress`sudo gem install mdpress\u0010`。\n\n## 使用\n\n1. 创建一个md文件，格式参考[mdpress full userage](http://egonschiele.github.io/mdpress/)\n2. 跳转到该文件目录下，使用`mdpress filename.md`生成。\n3. 在该目录下，你会发现一个与md文件同名的文件夹，点击其中的`index.html`文件展示。\n\n## 注意\n\n在该项目git库的issues存在`issues#41\u0010`,解决方法：\n\n> Hi,\nit seems it does not work with current redcarpet. As a workaround, I have installed redcarpet 3.1.2 manually and it works.\n\n>I'll try to make a fix later.\n\n>Best regards\n>Josef\n\n首先使用`gem uninstall redcarpet --v=3.3.2`删除`redcarpet 3.3.2`依赖库 ， 然后使用`gem install redcarpet -v 3.1.2`安装`redcarpet 3.1.2`依赖库。当然作者应该也会尽快修复这个问题的。\n\n\n\n\n\n\n\n\n\n","slug":"取代PPT的mdpress","published":1,"updated":"2015-07-25T16:46:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3b001u0xsemg4rd9lv"},{"title":"利用github和hexo搭建静态博客","date":"2015-07-09T12:22:55.000Z","description":"终于有空闲时间可以好好整理一下整个博客的搭建过程，长话短说，once upon a time ~ ~","_content":"\n# 安装过程参考\n\n>+ [Hexo在github上构建免费的Web应用](http://blog.fens.me/hexo-blog-github/)\n>+ [Hexo官网](https://hexo.io/)\n>+ [Hexo Next主题](https://github.com/iissnan/hexo-theme-next)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n>+ [Hexo自动添加ReadMore标记](http://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/)\n\n# 部署到github\n\nhexo d 报错 `ERROR deployer not found:github`\n\n错误原因：未安装hexo的git插件\n\n```\nnpm install hexo-deployer-git --save\n```\n站点_config.yml配置 `Note:每一个键值对中间有空格`\n\n```\ndeploy:\n\ttype: git\n\treposity: git@github.com:victoryxs/victoryxs.github.io.git\n\tbranch: master\n```\n\n# Next主题\n\n## 站点_config.yml\n\n主要添加了`feed` `sitemap` `wordcount`插件，设置了sidebar的`avatar` `friend_link` `social_link`以及配置了`多说评论`，\n\n>参考：\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n\n```\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Just a Blog But a Life\nsubtitle: Victoryxs  Blog \ndescription: 记录生活学习的点点滴滴\nauthor: Victoryxs\nlanguage: zh-Hans\nemail: victoryxs@qq.com\ntimezone: \n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://yoursite.com\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 5\npagination_dir: page\n\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\nPlugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n- hexo-wordcount\n\n# Feed Atom\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n\n#sitemap\nsitemap:\n  path: sitemap.xml\n\n#duoshuo\nduoshuo_shortname: victoryxs\n\n#cemiantouxiang\navatar: /images/avatar.jpg\n\n# Social links\nsocial:\n  Github: https://github.com/victoryxs\n  Twitter: https://twitter.com/victoryxs\n  Weibo: http://weibo.com/1628261543\n\n # title, chinese available\nlinks_title: 友情链接\n# links\nlinks:\n  MacTalk: http://macshuo.com/\n  Mac玩儿法: http://www.waerfa.com/\n  nikola: http://nikola.gitcafe.io/\n\n#blog create time\nsince: 2015\n\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:victoryxs/victoryxs.github.io.git\n  branch: master\n\n```\n\n## 主题_config.yml\n\n添加了`guestbook` `categories` `about` `tags` `腾讯公益404`，修改了代码高亮显示模式，添加了mathjax的latex支持\n\n>参考\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n\n\n```\n# when running hexo in a subdirectory (e.g. domain.tld/blog), remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  guestbook: /guestbook\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo,next\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss: atom.xml\n\n# Icon fonts\n# Place your font into next/source/fonts, specify directory-name and font-name here\n# Avialable: default | linecons | fifty-shades | feather\nicon_font: default\n#icon_font: fifty-shades\n#icon_font: feather\n#icon_font: linecons\n\n# Code Highlight theme\n# Available value: normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# MathJax Support\nmathjax: true\n\n\n# Schemes\n# scheme: Mist\n\n\n# Sidebar, available value:\n#  - post    expand on posts automatically. Default.\n#  - always  expand for all pages automatically\n#  - hide    expand only when click on the sidebar toggle icon.\n#sidebar: post\nsidebar: always\n#sidebar: hide\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically add list number to toc.\ntoc_list_number: true\n\n\n# Use Lato font\n# Note: this option is avialable only when the language is not `zh-Hans`\nuse_font_lato: true\n\n\n## DO NOT EDIT THE FOLLOWING SETTINGS\n## UNLESS YOU KNOW WHAT YOU ARE DOING\n\n# Use velocity to animate everything.\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.4.3\n\n```\n# 插件\n## wordcount插件\n\n>[Hexo文章计数插件WordCount](http://blog.willin.wang/posts/2015/hexo-wordcount/)\n\n安装\n\n```\nnpm i --save hexo-wordcount\n```\n\n使用\n\n修改`victoryxs.github.io/themes/layout/_macro/post.swig`文件\n\n\n```\n  <div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, config.date_format) }}\n        </span>\n        {% if post.categories and post.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n              <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n\n              {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      ---代码添加处---\n\n      <span id=\"busuanzi_container_page_pv\">\n      &nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C\n      </span>\n\n        {% if post.comments %}\n          {% if (config.duoshuo and config.duoshuo.shortname) or config.duoshuo_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count ds-thread-count\" data-thread-key=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% elseif config.disqus_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count disqus-comment-count\" data-disqus-identifier=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% endif %}\n        {% endif %}\n      </div>\n```\n\n在上图代码添加处，添加代码\n\n```\n<span class=\"post-count\">\n&nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n</span>\n```\n\n## 添加fork me on Github\n\n在`victoryxs.github.io/themes/next/layout/_layout.swig`\n\n```\n\n<body>\n  {% include '_partials/old-browsers.swig' %}\n\n  <div class=\"container one-column {% block page_class %}{% endblock %}\">\n    <div class=\"headband\"></div>\n\n---代码添加处---\n    <div id=\"header\" class=\"header\">\n      <div class=\"header-inner\">\n        {% include '_partials/header.swig' %}\n      </div>\n    </div>\n\n```\n在上图代码添加处添加\n\n```\n    <!-- add Fork me on Github -->\n<a href=\"https://github.com/victoryxs\"><img style=\"position: absolute; top: 500; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/8b6b8ccc6da3aa5722903da7b58eb5ab1081adee/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png\"></a>\n\n    <!-- add Fork me on Github-->\n\n```\n\n## 添加站点统计（不蒜子）\n\n在`victoryxs.github.io/themes/next/layout/_partials/footer.swig`中的末尾添加下面的js引用\n\n```\n\t<!-- busuanzi -->\n\t<script async src=\"https://dn-lbstatics.qbox.me/\tbusuanzi/2.3/busuanzi.pure.mini.js\">\n\t</script>\n\t<!-- busuanzi -->\n```\n在footer模板中添加访问量,原谅哥偷懒，没有写单独的css\n\n```\n\t<div class=\"copyright\">\n \t<span id=\"busuanzi_container_site_uv\">\n \t 本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n\t</span>\n\t</div>\n```\n## 单篇文章阅读量\n\n由于不蒜子不提供首页单页面和站点统计，所以对index页面做部分修改\n\n```\n\t{% if is_index %}\n\t<div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, \tconfig.date_format) }}\n        </span>\n\n        {% if post.categories and \tpost.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n   <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n   {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      <span class=\"post-count\">\n      &nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n      </span>\n      </div>\n      {% endif %}\n\n```\n\n然后在非首页的post-meta中添加阅读量，有没有觉得热度这个名字起得特别接地气\n\n```\n<span id=\"busuanzi_container_page_pv\">\n&nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C</span>\n```\n\n# Hexo模板系统\n\nHexo的基本原理就是根据解析_post中的md格式文件，参照md文件中的布局类型根据模板解析。\n\nHexo使用node.js模板文件，例如ejs，swig，doT，Jade。Hexo中有post、page、photo等不同布局，选用的布局类型会在md文件中声明。\n\n处理流程：Hexo首先解析md文件，然后根据layout.swig判断布局类型，再转发给其他的布局文件。\n\n![简要流程](http://cl.ly/bvGa/hexo_ejs_1.png)\n\n","source":"_posts/利用github和hexo搭建静态博客.md","raw":"title: 利用github和hexo搭建静态博客\ntags: [hexo,blog]\ndate: 2015-07-09 20:22:55\ncategories: hexo\ndescription: 终于有空闲时间可以好好整理一下整个博客的搭建过程，长话短说，once upon a time ~ ~\n\n---\n\n# 安装过程参考\n\n>+ [Hexo在github上构建免费的Web应用](http://blog.fens.me/hexo-blog-github/)\n>+ [Hexo官网](https://hexo.io/)\n>+ [Hexo Next主题](https://github.com/iissnan/hexo-theme-next)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n>+ [Hexo自动添加ReadMore标记](http://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/)\n\n# 部署到github\n\nhexo d 报错 `ERROR deployer not found:github`\n\n错误原因：未安装hexo的git插件\n\n```\nnpm install hexo-deployer-git --save\n```\n站点_config.yml配置 `Note:每一个键值对中间有空格`\n\n```\ndeploy:\n\ttype: git\n\treposity: git@github.com:victoryxs/victoryxs.github.io.git\n\tbranch: master\n```\n\n# Next主题\n\n## 站点_config.yml\n\n主要添加了`feed` `sitemap` `wordcount`插件，设置了sidebar的`avatar` `friend_link` `social_link`以及配置了`多说评论`，\n\n>参考：\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n\n```\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Just a Blog But a Life\nsubtitle: Victoryxs  Blog \ndescription: 记录生活学习的点点滴滴\nauthor: Victoryxs\nlanguage: zh-Hans\nemail: victoryxs@qq.com\ntimezone: \n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://yoursite.com\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 5\npagination_dir: page\n\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\nPlugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n- hexo-wordcount\n\n# Feed Atom\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n\n#sitemap\nsitemap:\n  path: sitemap.xml\n\n#duoshuo\nduoshuo_shortname: victoryxs\n\n#cemiantouxiang\navatar: /images/avatar.jpg\n\n# Social links\nsocial:\n  Github: https://github.com/victoryxs\n  Twitter: https://twitter.com/victoryxs\n  Weibo: http://weibo.com/1628261543\n\n # title, chinese available\nlinks_title: 友情链接\n# links\nlinks:\n  MacTalk: http://macshuo.com/\n  Mac玩儿法: http://www.waerfa.com/\n  nikola: http://nikola.gitcafe.io/\n\n#blog create time\nsince: 2015\n\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:victoryxs/victoryxs.github.io.git\n  branch: master\n\n```\n\n## 主题_config.yml\n\n添加了`guestbook` `categories` `about` `tags` `腾讯公益404`，修改了代码高亮显示模式，添加了mathjax的latex支持\n\n>参考\n\n>+ [Next wiki](https://github.com/iissnan/hexo-theme-next/wiki)\n>+ [动动手指，给你的Hexo站点添加最近访客（多说篇）](http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/)\n\n\n```\n# when running hexo in a subdirectory (e.g. domain.tld/blog), remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  guestbook: /guestbook\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo,next\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss: atom.xml\n\n# Icon fonts\n# Place your font into next/source/fonts, specify directory-name and font-name here\n# Avialable: default | linecons | fifty-shades | feather\nicon_font: default\n#icon_font: fifty-shades\n#icon_font: feather\n#icon_font: linecons\n\n# Code Highlight theme\n# Available value: normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# MathJax Support\nmathjax: true\n\n\n# Schemes\n# scheme: Mist\n\n\n# Sidebar, available value:\n#  - post    expand on posts automatically. Default.\n#  - always  expand for all pages automatically\n#  - hide    expand only when click on the sidebar toggle icon.\n#sidebar: post\nsidebar: always\n#sidebar: hide\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically add list number to toc.\ntoc_list_number: true\n\n\n# Use Lato font\n# Note: this option is avialable only when the language is not `zh-Hans`\nuse_font_lato: true\n\n\n## DO NOT EDIT THE FOLLOWING SETTINGS\n## UNLESS YOU KNOW WHAT YOU ARE DOING\n\n# Use velocity to animate everything.\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.4.3\n\n```\n# 插件\n## wordcount插件\n\n>[Hexo文章计数插件WordCount](http://blog.willin.wang/posts/2015/hexo-wordcount/)\n\n安装\n\n```\nnpm i --save hexo-wordcount\n```\n\n使用\n\n修改`victoryxs.github.io/themes/layout/_macro/post.swig`文件\n\n\n```\n  <div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, config.date_format) }}\n        </span>\n        {% if post.categories and post.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n              <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n\n              {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      ---代码添加处---\n\n      <span id=\"busuanzi_container_page_pv\">\n      &nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C\n      </span>\n\n        {% if post.comments %}\n          {% if (config.duoshuo and config.duoshuo.shortname) or config.duoshuo_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count ds-thread-count\" data-thread-key=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% elseif config.disqus_shortname %}\n            <span class=\"post-comments-count\">\n            &nbsp; | &nbsp;\n            <a href=\"{{ url_for(post.path) }}#comments\" >\n              <span class=\"post-comments-count disqus-comment-count\" data-disqus-identifier=\"{{ post.path }}\"></span>\n            </a>\n          </span>\n          {% endif %}\n        {% endif %}\n      </div>\n```\n\n在上图代码添加处，添加代码\n\n```\n<span class=\"post-count\">\n&nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n</span>\n```\n\n## 添加fork me on Github\n\n在`victoryxs.github.io/themes/next/layout/_layout.swig`\n\n```\n\n<body>\n  {% include '_partials/old-browsers.swig' %}\n\n  <div class=\"container one-column {% block page_class %}{% endblock %}\">\n    <div class=\"headband\"></div>\n\n---代码添加处---\n    <div id=\"header\" class=\"header\">\n      <div class=\"header-inner\">\n        {% include '_partials/header.swig' %}\n      </div>\n    </div>\n\n```\n在上图代码添加处添加\n\n```\n    <!-- add Fork me on Github -->\n<a href=\"https://github.com/victoryxs\"><img style=\"position: absolute; top: 500; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/8b6b8ccc6da3aa5722903da7b58eb5ab1081adee/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png\"></a>\n\n    <!-- add Fork me on Github-->\n\n```\n\n## 添加站点统计（不蒜子）\n\n在`victoryxs.github.io/themes/next/layout/_partials/footer.swig`中的末尾添加下面的js引用\n\n```\n\t<!-- busuanzi -->\n\t<script async src=\"https://dn-lbstatics.qbox.me/\tbusuanzi/2.3/busuanzi.pure.mini.js\">\n\t</script>\n\t<!-- busuanzi -->\n```\n在footer模板中添加访问量,原谅哥偷懒，没有写单独的css\n\n```\n\t<div class=\"copyright\">\n \t<span id=\"busuanzi_container_site_uv\">\n \t 本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n\t</span>\n\t</div>\n```\n## 单篇文章阅读量\n\n由于不蒜子不提供首页单页面和站点统计，所以对index页面做部分修改\n\n```\n\t{% if is_index %}\n\t<div class=\"post-meta\">\n        <span class=\"post-time\">\n          {{ __('post.posted') }} {{ date(post.date, \tconfig.date_format) }}\n        </span>\n\n        {% if post.categories and \tpost.categories.length %}\n          <span class=\"post-category\">\n            &nbsp; | &nbsp; {{ __('post.in') }}\n            {% for cat in post.categories %}\n   <a href=\"{{ url_for(cat.path) }}\">{{ cat.name }}</a>\n   {% set cat_length = post.categories.length %}\n              {% if cat_length > 1 and loop.index !== cat_length %}\n                {{ __('symbol.comma') }}\n              {% endif %}\n\n            {% endfor %}\n          </span>\n        {% endif %}\n\n      <span class=\"post-count\">\n      &nbsp; | &nbsp;{{ __('post.wordcount') }}{{ wordcount(post.content) }}\n      </span>\n      </div>\n      {% endif %}\n\n```\n\n然后在非首页的post-meta中添加阅读量，有没有觉得热度这个名字起得特别接地气\n\n```\n<span id=\"busuanzi_container_page_pv\">\n&nbsp; | &nbsp; 热度<span id=\"busuanzi_value_page_pv\"></span>°C</span>\n```\n\n# Hexo模板系统\n\nHexo的基本原理就是根据解析_post中的md格式文件，参照md文件中的布局类型根据模板解析。\n\nHexo使用node.js模板文件，例如ejs，swig，doT，Jade。Hexo中有post、page、photo等不同布局，选用的布局类型会在md文件中声明。\n\n处理流程：Hexo首先解析md文件，然后根据layout.swig判断布局类型，再转发给其他的布局文件。\n\n![简要流程](http://cl.ly/bvGa/hexo_ejs_1.png)\n\n","slug":"利用github和hexo搭建静态博客","published":1,"updated":"2015-07-09T13:49:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3f001z0xse3fe2t19i"},{"title":"iterm2+zsh+oh my zsh 配置","date":"2015-07-22T10:13:02.000Z","description":"mac OS X下 iterm2、zsh 和 oh my zsh 的配置。","_content":"\n## iterm2\n\n![iterm2](http://static.oschina.net/uploads/img/201412/17101432_iOgu.jpg)\n\n### 安装\n[iterm2官网](http://www.iterm2.com/)\n[官方文档](http://www.iterm2.com/documentation.html)\n\n### 特性\n\n+ 全键盘操作，无鼠标文本选择 `Cmd+f`\n+ 快捷分屏 `Cmd+d` `Cmd+Shift+d` `Cmd+[` `Cmd+]`\n+ 热键窗口，一键开启iterm2 \n+ 交换Cmd和Option键，满足个人习惯\n+ 支持标记和跳转到标记 `Cmd+Shift+M` `Cmd+Shift+J`\n+ 支持表达式搜索\n+ 自动补全 `Cmd+;`\n+ 粘贴历史 `Cmd+Shift+H`\n+ 立即重放 `Cmd+Opt+B`\n+ 全屏 `Cmd+Enter` \n+ 整合tmux\n\n### 快捷键\n\n+ ⌘ + 数字在各 tab 标签直接来回切换\n+ 选择即复制 + 鼠标中键粘贴，这个很实用\n+ ⌘ + f 所查找的内容会被自动复制\n+ ⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏\n+ ⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏\n+ ctrl + u 清空当前行，无论光标在什么位置\n+ 输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令\n+ ⌘ + shift + h 会列出剪切板历史\n+ ⌘← / ⌘→ 到一行命令最左边/最右边 ，这个功能同 C+a / C+e\n+ ⌥← / ⌥→ 按单词前移/后移，相当与 C+f / C+b，其实这个功能在Iterm中已经预定义好了，⌥f / ⌥b，看个人习惯了\n\n### tmux 整合\n\n`brew install tmux`，然后在oh my zsh的配置文件.zshrc中的plugins 中添加tmux插件\n\n## zsh\n![zsh](http://pic4.zhimg.com/b691b3fa0ffb6d6c90761a98d3afab1b_b.jpg)\n\n[终极 Shell--ZSH](http://zhuanlan.zhihu.com/mactalk/19556676)\n\n### 安装\n1. 查看本机自带shell\n`cat /etc/shells`\n\n2. 安装\nmac用户跳过，Redhat用户 `sudo yum install zsh`，Ubuntu用户 `sudo apt-get install zsh`\n\n3. 设置zsh为默认shell\n`chsh -s /bin/zsh`\n\n### 特性\n+ 兼容bash shell\n+ 输入Commnd，按住上下键查看匹配的 shell 命令\n+ 智能拼写纠正\n+ 各种补全，`Tab+Tab`触发路径、命令和命令参数\n+ 只能跳转，利用`z`和`autojump`实现\n+ `d` `..` `.` 文件目录跳转补充\n+ `ls -l **/*.sh` 递归显示当前目录下的shell文件\n+ 强大的alias系统 \n\n    我的别名，参考MacTalk的配置\n\n    ```\n    alias cls='clear'\n    alias ll='ls -l'\n    alias vi='vim'\n    alias javac=\"javac -J-Dfile.encoding=utf8\"\n    alias grep=\"grep --color=auto\"\n    alias -s html=vi   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开\n    alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似\n    alias -s js=vi\n    alias -s c=vi\n    alias -s java=vi\n    alias -s txt=vi\n    alias -s gz='tar -xzvf'\n    alias -s tgz='tar -xzvf'\n    alias -s zip='unzip'\n    alias -s bz2='tar -xjvf'\n    ```\n+ 插件，结合Oh my zsh实现\n\n## oh my zsh\n\n![oh my zsh](http://ohmyz.sh/img/OMZLogo_BnW.png)\n\n[oh my zsh官网](http://ohmyz.sh/)\n\n### 安装\n\n自动安装\n\n`wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh`\n\n手动安装\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 主题\n\n上个图\n\n![agnoster](https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\n1. 安装 Powerline\n    [Powerline 官网](http://powerline.readthedocs.org/en/latest/installation.html)\n\n    如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n    `pip install powerline-status`\n\n    如果没有，则先执行安装pip指令\n\n    `sudo easy_install pip`\n\n2. 下载安装字体库\n\n    + 将工程下载下来后cd到install.sh文件所在目录\n\n    + 执行指令安装字体库\n\n        执行./install.sh指令安装所有Powerline字体\n\n    + 安装完成后提示所有字体均已下载到/Users/superdanny/Library/Fonts路径下\n\n        `All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n3. 设置iterm2的Regular Font和Non-ASCII Font\n\n    安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n    \n4. 配色方案\n\n    + 安装配色方案\n\n        进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n    + 配置配色方案\n\n        通过load presets选择刚刚安装的配色主题即可\n        \n5. 使用agnoster主题\n    + 下载agnoster主题\n        \n        到下载的工程里面运行install文件,主题将安装到~/.oh-my-zsh/themes目录下\n\n    + 设置该主题\n        \n        进入~/.zshrc打开.zshrc文件，然后将ZSH_THEME后面的字段改为agnoster。ZSH_THEME=\"agnoster\"（agnoster即为要设置的主题）\n        \n6. 增加指令高亮效果 zsh-syntax-highlighting\n\n    指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n    + cd到.zshrc所在目录\n\n    + 执行指令将工程克隆到当前目录\n\n      `git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n    + 打开.zshrc文件，在最后添加下面内容\n\n      `source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`,保存文件。\n\n    + cd ~/.oh-my-zsh/custom/plugins\n\n    + 再次打开.zshrc文件，在最后面添加下面内容\n    \n      `plugins=(zsh-syntax-highlighting)`,保存文件。\n      \n### 插件\n\noh my zsh的插件在`~/.oh-my-zsh/plugins`目录下，默认有100多种。\n\n贴出我的配置\n\n`plugins=(git autojump osx mvn gradle z)`\n\n其中：\n\n1. osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。\n\n2. autojump：autojump是zsh下最强悍的插件。\n    + brew安装\n      \n      `brew install autojump`\n      \n    + 若无法安装，利用\n      \n      `wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.g`,解压缩后进入目录，执行`./install.sh`.\n      \n    + 最后把以下代码加入.zshrc：\n      \n      `[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh`\n      \n## fish shell\n\n![fish](http://fishshell.com/assets/img/Terminal_Logo_CRT_Small.png)\n\n[fishshell 官网](http://fishshell.com/)\n\n### 安装\n\n`brew install fish`\n\n### 切换\n\n`chsh -s /bin/fish`\n\n### 特点\n\n傻瓜式shell编程，相对应的现在有oh my fish，博客反馈不错，哪天装了试试。\n\n\n\n\n\n\n","source":"_posts/iterm2-zsh-oh-my-zsh-配置.md","raw":"title: iterm2+zsh+oh my zsh 配置\ndate: 2015-07-22 18:13:02\ntags: [tools,iterm2,zsh]\ncategories: tools\ndescription: mac OS X下 iterm2、zsh 和 oh my zsh 的配置。\n---\n\n## iterm2\n\n![iterm2](http://static.oschina.net/uploads/img/201412/17101432_iOgu.jpg)\n\n### 安装\n[iterm2官网](http://www.iterm2.com/)\n[官方文档](http://www.iterm2.com/documentation.html)\n\n### 特性\n\n+ 全键盘操作，无鼠标文本选择 `Cmd+f`\n+ 快捷分屏 `Cmd+d` `Cmd+Shift+d` `Cmd+[` `Cmd+]`\n+ 热键窗口，一键开启iterm2 \n+ 交换Cmd和Option键，满足个人习惯\n+ 支持标记和跳转到标记 `Cmd+Shift+M` `Cmd+Shift+J`\n+ 支持表达式搜索\n+ 自动补全 `Cmd+;`\n+ 粘贴历史 `Cmd+Shift+H`\n+ 立即重放 `Cmd+Opt+B`\n+ 全屏 `Cmd+Enter` \n+ 整合tmux\n\n### 快捷键\n\n+ ⌘ + 数字在各 tab 标签直接来回切换\n+ 选择即复制 + 鼠标中键粘贴，这个很实用\n+ ⌘ + f 所查找的内容会被自动复制\n+ ⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏\n+ ⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏\n+ ctrl + u 清空当前行，无论光标在什么位置\n+ 输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令\n+ ⌘ + shift + h 会列出剪切板历史\n+ ⌘← / ⌘→ 到一行命令最左边/最右边 ，这个功能同 C+a / C+e\n+ ⌥← / ⌥→ 按单词前移/后移，相当与 C+f / C+b，其实这个功能在Iterm中已经预定义好了，⌥f / ⌥b，看个人习惯了\n\n### tmux 整合\n\n`brew install tmux`，然后在oh my zsh的配置文件.zshrc中的plugins 中添加tmux插件\n\n## zsh\n![zsh](http://pic4.zhimg.com/b691b3fa0ffb6d6c90761a98d3afab1b_b.jpg)\n\n[终极 Shell--ZSH](http://zhuanlan.zhihu.com/mactalk/19556676)\n\n### 安装\n1. 查看本机自带shell\n`cat /etc/shells`\n\n2. 安装\nmac用户跳过，Redhat用户 `sudo yum install zsh`，Ubuntu用户 `sudo apt-get install zsh`\n\n3. 设置zsh为默认shell\n`chsh -s /bin/zsh`\n\n### 特性\n+ 兼容bash shell\n+ 输入Commnd，按住上下键查看匹配的 shell 命令\n+ 智能拼写纠正\n+ 各种补全，`Tab+Tab`触发路径、命令和命令参数\n+ 只能跳转，利用`z`和`autojump`实现\n+ `d` `..` `.` 文件目录跳转补充\n+ `ls -l **/*.sh` 递归显示当前目录下的shell文件\n+ 强大的alias系统 \n\n    我的别名，参考MacTalk的配置\n\n    ```\n    alias cls='clear'\n    alias ll='ls -l'\n    alias vi='vim'\n    alias javac=\"javac -J-Dfile.encoding=utf8\"\n    alias grep=\"grep --color=auto\"\n    alias -s html=vi   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开\n    alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似\n    alias -s js=vi\n    alias -s c=vi\n    alias -s java=vi\n    alias -s txt=vi\n    alias -s gz='tar -xzvf'\n    alias -s tgz='tar -xzvf'\n    alias -s zip='unzip'\n    alias -s bz2='tar -xjvf'\n    ```\n+ 插件，结合Oh my zsh实现\n\n## oh my zsh\n\n![oh my zsh](http://ohmyz.sh/img/OMZLogo_BnW.png)\n\n[oh my zsh官网](http://ohmyz.sh/)\n\n### 安装\n\n自动安装\n\n`wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh`\n\n手动安装\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 主题\n\n上个图\n\n![agnoster](https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\n1. 安装 Powerline\n    [Powerline 官网](http://powerline.readthedocs.org/en/latest/installation.html)\n\n    如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n    `pip install powerline-status`\n\n    如果没有，则先执行安装pip指令\n\n    `sudo easy_install pip`\n\n2. 下载安装字体库\n\n    + 将工程下载下来后cd到install.sh文件所在目录\n\n    + 执行指令安装字体库\n\n        执行./install.sh指令安装所有Powerline字体\n\n    + 安装完成后提示所有字体均已下载到/Users/superdanny/Library/Fonts路径下\n\n        `All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n3. 设置iterm2的Regular Font和Non-ASCII Font\n\n    安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n    \n4. 配色方案\n\n    + 安装配色方案\n\n        进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n    + 配置配色方案\n\n        通过load presets选择刚刚安装的配色主题即可\n        \n5. 使用agnoster主题\n    + 下载agnoster主题\n        \n        到下载的工程里面运行install文件,主题将安装到~/.oh-my-zsh/themes目录下\n\n    + 设置该主题\n        \n        进入~/.zshrc打开.zshrc文件，然后将ZSH_THEME后面的字段改为agnoster。ZSH_THEME=\"agnoster\"（agnoster即为要设置的主题）\n        \n6. 增加指令高亮效果 zsh-syntax-highlighting\n\n    指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n    + cd到.zshrc所在目录\n\n    + 执行指令将工程克隆到当前目录\n\n      `git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n    + 打开.zshrc文件，在最后添加下面内容\n\n      `source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`,保存文件。\n\n    + cd ~/.oh-my-zsh/custom/plugins\n\n    + 再次打开.zshrc文件，在最后面添加下面内容\n    \n      `plugins=(zsh-syntax-highlighting)`,保存文件。\n      \n### 插件\n\noh my zsh的插件在`~/.oh-my-zsh/plugins`目录下，默认有100多种。\n\n贴出我的配置\n\n`plugins=(git autojump osx mvn gradle z)`\n\n其中：\n\n1. osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。\n\n2. autojump：autojump是zsh下最强悍的插件。\n    + brew安装\n      \n      `brew install autojump`\n      \n    + 若无法安装，利用\n      \n      `wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.g`,解压缩后进入目录，执行`./install.sh`.\n      \n    + 最后把以下代码加入.zshrc：\n      \n      `[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh`\n      \n## fish shell\n\n![fish](http://fishshell.com/assets/img/Terminal_Logo_CRT_Small.png)\n\n[fishshell 官网](http://fishshell.com/)\n\n### 安装\n\n`brew install fish`\n\n### 切换\n\n`chsh -s /bin/fish`\n\n### 特点\n\n傻瓜式shell编程，相对应的现在有oh my fish，博客反馈不错，哪天装了试试。\n\n\n\n\n\n\n","slug":"iterm2-zsh-oh-my-zsh-配置","published":1,"updated":"2015-07-22T13:17:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3i00260xsekv6zn8gi"},{"title":"Mac软件推荐（一）","date":"2015-07-10T06:18:26.000Z","description":"题主有一年的mac经验，经常看池哥的mactalk和Brett大神的博客，感觉和mac比，windows就是bullshit，忠实mac粉~~","_content":"\n# 办公类\n\n先上图\n\n![img](http://cl.ly/bvD5/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-07-10%2014.23.24.png)\n\n## office办公系列 (推荐指数：★★★★★  好用指数：★)\n\n> safari for windows和office for mac简直就是Apple和Microsoft互黑的产品。----- 知乎文青\n\n该死的三贱客，用起来简直就是一种煎熬，卡到不行却又不能不用，这是一种无奈，也是一种妥协，算了，眼不见为净，此处省略一万字。  \n\n## iChm（推荐指数：★★★★★  好用指数：★★★★）\n\n绝对的chm文档小钢炮，显示一流，流畅度有待提高，但是绝对是查看chm文件的不二法门。该软件开源，不收费。\n\n## WizNote（推荐指数：★★★  好用指数：★★★）\n\n为知笔记，国内笔记的领头大哥。曾经试过无数的笔记软件，从最开始的evernote到麦库有道等。自从接触到markdown和latex后，发现富文本的笔记应用真的是不太好用，总是为tab键空几个、行间距多少等格式发愁，不关注内容本身。被markdown和latex洗脑后，就开始转战Brett大神家的nvALT笔记，奈何这货只能同步到simplenote，国内各种被墙。然后试过马克飞象，一直用到它开始收费为至，原本还想着咬咬牙买一年，奈何一看价格就歇菜啦。接着自己用sublime text的evernote插件，感觉特别好，奈何万恶的校园网无法上外网，被墙。所以只能用为知笔记，不过它家的mathjax支持还是很好的，就是字体有些丑。\n\n## MindNode（推荐指数：★★★★★  好用指数：★★★★★）\n\n强力推荐，mac上脑图的最佳软件，什么ithoughtX、MindMaple简直踢出一条街。简单的界面、简洁的操作以及后现代主义的脑图分支，其中不得不提它的分支很有神经元的感觉。强力推荐，脑图爱好者和喜欢总结的骚年们。\n\n","source":"_posts/Mac软件推荐.md","raw":"title: Mac软件推荐（一）\ntags: [tools,mac]\ndate: 2015-07-10 14:18:26\ncategories: tools\ndescription: 题主有一年的mac经验，经常看池哥的mactalk和Brett大神的博客，感觉和mac比，windows就是bullshit，忠实mac粉~~\n\n---\n\n# 办公类\n\n先上图\n\n![img](http://cl.ly/bvD5/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202015-07-10%2014.23.24.png)\n\n## office办公系列 (推荐指数：★★★★★  好用指数：★)\n\n> safari for windows和office for mac简直就是Apple和Microsoft互黑的产品。----- 知乎文青\n\n该死的三贱客，用起来简直就是一种煎熬，卡到不行却又不能不用，这是一种无奈，也是一种妥协，算了，眼不见为净，此处省略一万字。  \n\n## iChm（推荐指数：★★★★★  好用指数：★★★★）\n\n绝对的chm文档小钢炮，显示一流，流畅度有待提高，但是绝对是查看chm文件的不二法门。该软件开源，不收费。\n\n## WizNote（推荐指数：★★★  好用指数：★★★）\n\n为知笔记，国内笔记的领头大哥。曾经试过无数的笔记软件，从最开始的evernote到麦库有道等。自从接触到markdown和latex后，发现富文本的笔记应用真的是不太好用，总是为tab键空几个、行间距多少等格式发愁，不关注内容本身。被markdown和latex洗脑后，就开始转战Brett大神家的nvALT笔记，奈何这货只能同步到simplenote，国内各种被墙。然后试过马克飞象，一直用到它开始收费为至，原本还想着咬咬牙买一年，奈何一看价格就歇菜啦。接着自己用sublime text的evernote插件，感觉特别好，奈何万恶的校园网无法上外网，被墙。所以只能用为知笔记，不过它家的mathjax支持还是很好的，就是字体有些丑。\n\n## MindNode（推荐指数：★★★★★  好用指数：★★★★★）\n\n强力推荐，mac上脑图的最佳软件，什么ithoughtX、MindMaple简直踢出一条街。简单的界面、简洁的操作以及后现代主义的脑图分支，其中不得不提它的分支很有神经元的感觉。强力推荐，脑图爱好者和喜欢总结的骚年们。\n\n","slug":"Mac软件推荐","published":1,"updated":"2015-07-10T07:23:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3l002d0xsexuhd8ij9"},{"title":"KMP算法详解","date":"2015-08-01T13:28:04.000Z","description":"根据Jake Boxer的文章对KMP进行解析，并通过Java代码实现","_content":"\n# KMP思想\n\n> 参考\n\n> [The Knuth-Morris-Pratt Algorithm in my own words](http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/)\n\n## 部分匹配表\n\n对于KMP算法而言，最重要的就是部分匹配表。例如`abababca`，其部分匹配表如下\n\n```\nchar: |a|b|a|b|a|b|c|a|\nindex:|0|1|2|3|4|5|6|7|\nvalue:|0|0|1|2|3|4|0|1|\n```\n\n1. 对于匹配的某一位来说，我只是关心它前面的字符，不必去关心后面的字符。例如：匹配到`index = 5`时，我只是关心前面从0到4位字符串。\n\n2. 两个重要的概念：\n\n    + 适宜前缀（Proper prefix）：去除一位或多位结尾的所有字符。例如，对于`Snape`来说，它的适宜前缀就是`S` `Sn` `Sna` `Snap`.\n    > Proper prefix: All the characters in a string, with one or more cut off the end. \n    + 适宜后缀（Proper suffix）：去除一位或多位开始的所有字符。例如，对于`Snape`来说，它的适宜后缀就是`e` `pe` `ape` `nape`.\n    > Proper suffix: All the characters in a string, with one or more cut off the beginning.\n    \n3. 对于部分匹配表中的值我们是这样定义的：在子串中最长的适宜前缀匹配适宜后缀的长度.举个例子：对于字符串`abababca`其中的第4位来说，其子串为`ababa`，其中适宜前缀包括：`a` `ab` `aba` `abab`，适宜后缀包括：`a` `ba` `aba` `baba`，那么最长的匹配串就是`aba`，其长度为3.\n> The length of the longest proper prefix in the (sub)pattern that matches a proper suffix in the same (sub)pattern.\n\n## 匹配过程\n\n匹配需要两个条件：匹配上且该匹配位上的值大于1。\n\n滑动距离：匹配位置长度减去该位的值。\n\n举个例子：被匹配串为`bacbababaabcbab`，匹配串为`abababca`，当匹配到如下情景时：\n\n```\nbacbababaabcbab\n    |||||\n    abababca\n\n```\n\n这时候匹配子串长度为5，该位置上的值为3，那么就应该滑动 `5-3=2`，滑动结果如下：\n\n```\nbacbababaabcbab\n    **|||\n      abababca\n```\n\n> If a partial match of length partial_match_length is found and table[partial_match_length] > 1, we may skip ahead partial_match_length - table[partial_match_length - 1] characters.\n\n\n    ","source":"_posts/KMP算法详解.md","raw":"title: KMP算法详解\ndate: 2015-08-01 21:28:04\ntags: [algorithms, KMP]\ncategories: algorithms\ndescription: 根据Jake Boxer的文章对KMP进行解析，并通过Java代码实现\n---\n\n# KMP思想\n\n> 参考\n\n> [The Knuth-Morris-Pratt Algorithm in my own words](http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/)\n\n## 部分匹配表\n\n对于KMP算法而言，最重要的就是部分匹配表。例如`abababca`，其部分匹配表如下\n\n```\nchar: |a|b|a|b|a|b|c|a|\nindex:|0|1|2|3|4|5|6|7|\nvalue:|0|0|1|2|3|4|0|1|\n```\n\n1. 对于匹配的某一位来说，我只是关心它前面的字符，不必去关心后面的字符。例如：匹配到`index = 5`时，我只是关心前面从0到4位字符串。\n\n2. 两个重要的概念：\n\n    + 适宜前缀（Proper prefix）：去除一位或多位结尾的所有字符。例如，对于`Snape`来说，它的适宜前缀就是`S` `Sn` `Sna` `Snap`.\n    > Proper prefix: All the characters in a string, with one or more cut off the end. \n    + 适宜后缀（Proper suffix）：去除一位或多位开始的所有字符。例如，对于`Snape`来说，它的适宜后缀就是`e` `pe` `ape` `nape`.\n    > Proper suffix: All the characters in a string, with one or more cut off the beginning.\n    \n3. 对于部分匹配表中的值我们是这样定义的：在子串中最长的适宜前缀匹配适宜后缀的长度.举个例子：对于字符串`abababca`其中的第4位来说，其子串为`ababa`，其中适宜前缀包括：`a` `ab` `aba` `abab`，适宜后缀包括：`a` `ba` `aba` `baba`，那么最长的匹配串就是`aba`，其长度为3.\n> The length of the longest proper prefix in the (sub)pattern that matches a proper suffix in the same (sub)pattern.\n\n## 匹配过程\n\n匹配需要两个条件：匹配上且该匹配位上的值大于1。\n\n滑动距离：匹配位置长度减去该位的值。\n\n举个例子：被匹配串为`bacbababaabcbab`，匹配串为`abababca`，当匹配到如下情景时：\n\n```\nbacbababaabcbab\n    |||||\n    abababca\n\n```\n\n这时候匹配子串长度为5，该位置上的值为3，那么就应该滑动 `5-3=2`，滑动结果如下：\n\n```\nbacbababaabcbab\n    **|||\n      abababca\n```\n\n> If a partial match of length partial_match_length is found and table[partial_match_length] > 1, we may skip ahead partial_match_length - table[partial_match_length - 1] characters.\n\n\n    ","slug":"KMP算法详解","published":1,"updated":"2015-08-09T03:08:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3p002i0xsesm30qa75"},{"title":"Guice框架学习","date":"2015-08-09T01:01:17.000Z","description":"Guice框架的概述以及自己写的Demo。","_content":"\n## 概念\n\n1. UML类图常见关系(转载)\n\n    > [设计模式之UML类图的常见关系](http://www.cnblogs.com/zxj159/p/3399654.html)\n    \n    + 泛化关系(继承实现)\n    \n    泛化关系是继承和实现的关系。具体表现就是类和类的继承，接口和接口的继承以及类对接口的实现。\n    \n    ![泛化关系](http://images.cnitblog.com/blog/362290/201310/31171722-c9602d76cfdf41f3a528648095c91401.png)\n    \n    + 依赖关系(局部调用)\n    \n    依赖关系表示为一个类使用另一个类，这种使用关系是具有偶然性的、临时性的、非常弱的，一个类的变化会影响到另一个类，是use a关系，如果类A依赖于类B,那么类B可以是类A的局部变量，或类A方法的参数，或静态方法的调用。\n    \n    ![依赖关系](http://images.cnitblog.com/blog/362290/201310/31165559-4779e58a18e04d1da67a62a8c98cd63d.png)\n    \n    + 关联关系(全局调用)\n    \n    关联关系是一种强依赖关系，这种关系不存在依赖关系的偶然性，关系也不是临时的，是长期的，稳定的。双方的关系是平等的，可以单向关联也可以是双向关联。假如类A关联了类B,则类B是类A的全局变量（注意是全局变量，再看看上面的依赖关系），大多数关联都是单向关联，这比较容易维护，关于关联，在生活中我们常会说，类A持有类B的引用。\n    \n    ![关联关系](http://images.cnitblog.com/blog/362290/201310/31165613-3faec54ba2f94c589a43b224431a8fcc.png)\n    \n    + 聚合关系(setter方法)\n    \n    聚合关系是特殊的关联关系，是一种强的关联关系，他体现的是整体与部分关系，即has-a的关系，但是整体和部分是可以分离的，注意，是可以分离的。普通关联关系的两个类处于同一层次上，是平级的，而聚合关系的两个类处于不同的层次，一个是整体，一个是部分。同时，是一种弱的“拥有”关系。体现的是A对象可以包含B对象，但B对象不是A对象的必要的组成部分。具体表现为，如果A由B聚合成，表现为A包含有B的全局对象，但是B对象可以不在A创建的时刻创建，这句话非常有意义，它在代码中通常体现成依赖注入的setter方法，即A对象可以随时创建B对象，再想想这不就体现了整体和部分是可以分离了吗？创建整体的时候可以不创建部分。\n    \n    ![聚合关系](http://images.cnitblog.com/blog/362290/201310/31165626-ce36baaf7c2b44c9a997288184d65dd5.png)\n    \n    + 组合关系(构造器方法)\n    \n    组合关系也是特殊的关联关系，它体现一种contains a（拥有）关系，这种关系是比聚合还要强，也称为强聚合。体现了严格的整体和部分关系，两者是不可分割的，它们的生命周期是一致的。如果A由B组成，那么A就包含B的全局变量，并在创建A的同时创建B，在代码上我们通常是使用构造函数进行实现，也是依赖注入中构造函数的实现。\n    \n    ![组合关系](http://images.cnitblog.com/blog/362290/201310/31165647-2a0c584f1c5a4573a2b59f4ceceeee2b.png)\n    \n    + 总结\n    \n    依赖和关联是Class A度Class B持有引用的关系，而聚合和组合关系是Class A拥有Class B的关系\n    \n    依赖和关联的区别在依赖是一种弱引用，而关联关系是一种强引用。具体的表现为：依赖关系为局部变量，而关联关系是全部变量\n    \n    聚合和组合的区别在聚合是一种弱拥有，而组合是一种强拥有。具体的表示为：setter方法是可用可不用的，而构造器方法是随着类的创建而创建的。\n\n2. DI(依赖注入)和IOC(控制反转)\n\n    > [设计模式之初识IoC/DI](http://www.cnblogs.com/zxj159/p/3425168.html)\n\n    依赖注入是应用程序依赖于DI容器创建并注入它所需要的外部资源。\n    \n    控制反转是IoC容器控制应用程序，反向地向应用程序注入其需要的外部资源。\n\n    简单点说就是IoC/DI容器通过构造方法、setter方法和接口方法将外部资源注入对象。\n    \n    + 参与对象：对象、IoC/DI容器、对象的外部资源\n    + 创建过程：\n    \n    ![创建过程](http://images.cnitblog.com/blog/362290/201311/15131057-90c485a85176402293fc27fc8e5d1d2a.png)\n    \n    + 创建形式：构造函数注入、setter方法注入、接口注入\n    \n        - setter方法注入\n        ![setter方法注入](http://images.cnitblog.com/blog/362290/201310/31165626-ce36baaf7c2b44c9a997288184d65dd5.png)\n        \n        - 构造函数注入\n        ![构造函数注入](http://images.cnitblog.com/blog/362290/201310/31165647-2a0c584f1c5a4573a2b59f4ceceeee2b.png)\n        \n        - 接口注入\n        \n        ```\n        public interface InjectFinder {\n            void injectFinder(MovieFinder finder);\n        }\n    \n        class MovieLister: InjectFinder\n        {\n            private MovieFinder finder;\n            public void injectFinder(MovieFinder finder) {\n                this.finder = finder;\n            }\n        }\n        ```\n\n\n## DI容器 Google Guice\n\n> Google Guice (pronounced \"juice\") is an open source software framework for the Java platform released by Google under the Apache License. It provides support for dependency injection using annotations to configure Java objects. Dependency injection is a design pattern whose core principle is to separate behavior from dependency resolution.\n\n> Guice allows implementation classes to be bound programmatically to an interface, then injected into constructors, methods or fields using an `@Inject` annotation. When more than one implementation of the same interface is needed, the user can create custom annotations that identify an implementation, then use that annotation when injecting it.\n\n> From Wikipedia Google Guice\n\nGoogle Guice是一个Google发布的基于Java平台的DI容器(框架)。它将实现类通过一个`Module`文件绑定在接口上，然后通过适用`@Inject`标签来实现构造器注入、方法注入和属性注入。\n\n相关介绍及其使用如下：\n\n[Guice Demo github](https://github.com/victoryxs/GuiceDemo/tree/master/src/main)\n\n\n\n\n\n\n\n","source":"_posts/Guice框架学习.md","raw":"title: Guice框架学习\ndate: 2015-08-09 09:01:17\ntags: [framework,Guice]\ncategories: framework\ndescription: Guice框架的概述以及自己写的Demo。\n---\n\n## 概念\n\n1. UML类图常见关系(转载)\n\n    > [设计模式之UML类图的常见关系](http://www.cnblogs.com/zxj159/p/3399654.html)\n    \n    + 泛化关系(继承实现)\n    \n    泛化关系是继承和实现的关系。具体表现就是类和类的继承，接口和接口的继承以及类对接口的实现。\n    \n    ![泛化关系](http://images.cnitblog.com/blog/362290/201310/31171722-c9602d76cfdf41f3a528648095c91401.png)\n    \n    + 依赖关系(局部调用)\n    \n    依赖关系表示为一个类使用另一个类，这种使用关系是具有偶然性的、临时性的、非常弱的，一个类的变化会影响到另一个类，是use a关系，如果类A依赖于类B,那么类B可以是类A的局部变量，或类A方法的参数，或静态方法的调用。\n    \n    ![依赖关系](http://images.cnitblog.com/blog/362290/201310/31165559-4779e58a18e04d1da67a62a8c98cd63d.png)\n    \n    + 关联关系(全局调用)\n    \n    关联关系是一种强依赖关系，这种关系不存在依赖关系的偶然性，关系也不是临时的，是长期的，稳定的。双方的关系是平等的，可以单向关联也可以是双向关联。假如类A关联了类B,则类B是类A的全局变量（注意是全局变量，再看看上面的依赖关系），大多数关联都是单向关联，这比较容易维护，关于关联，在生活中我们常会说，类A持有类B的引用。\n    \n    ![关联关系](http://images.cnitblog.com/blog/362290/201310/31165613-3faec54ba2f94c589a43b224431a8fcc.png)\n    \n    + 聚合关系(setter方法)\n    \n    聚合关系是特殊的关联关系，是一种强的关联关系，他体现的是整体与部分关系，即has-a的关系，但是整体和部分是可以分离的，注意，是可以分离的。普通关联关系的两个类处于同一层次上，是平级的，而聚合关系的两个类处于不同的层次，一个是整体，一个是部分。同时，是一种弱的“拥有”关系。体现的是A对象可以包含B对象，但B对象不是A对象的必要的组成部分。具体表现为，如果A由B聚合成，表现为A包含有B的全局对象，但是B对象可以不在A创建的时刻创建，这句话非常有意义，它在代码中通常体现成依赖注入的setter方法，即A对象可以随时创建B对象，再想想这不就体现了整体和部分是可以分离了吗？创建整体的时候可以不创建部分。\n    \n    ![聚合关系](http://images.cnitblog.com/blog/362290/201310/31165626-ce36baaf7c2b44c9a997288184d65dd5.png)\n    \n    + 组合关系(构造器方法)\n    \n    组合关系也是特殊的关联关系，它体现一种contains a（拥有）关系，这种关系是比聚合还要强，也称为强聚合。体现了严格的整体和部分关系，两者是不可分割的，它们的生命周期是一致的。如果A由B组成，那么A就包含B的全局变量，并在创建A的同时创建B，在代码上我们通常是使用构造函数进行实现，也是依赖注入中构造函数的实现。\n    \n    ![组合关系](http://images.cnitblog.com/blog/362290/201310/31165647-2a0c584f1c5a4573a2b59f4ceceeee2b.png)\n    \n    + 总结\n    \n    依赖和关联是Class A度Class B持有引用的关系，而聚合和组合关系是Class A拥有Class B的关系\n    \n    依赖和关联的区别在依赖是一种弱引用，而关联关系是一种强引用。具体的表现为：依赖关系为局部变量，而关联关系是全部变量\n    \n    聚合和组合的区别在聚合是一种弱拥有，而组合是一种强拥有。具体的表示为：setter方法是可用可不用的，而构造器方法是随着类的创建而创建的。\n\n2. DI(依赖注入)和IOC(控制反转)\n\n    > [设计模式之初识IoC/DI](http://www.cnblogs.com/zxj159/p/3425168.html)\n\n    依赖注入是应用程序依赖于DI容器创建并注入它所需要的外部资源。\n    \n    控制反转是IoC容器控制应用程序，反向地向应用程序注入其需要的外部资源。\n\n    简单点说就是IoC/DI容器通过构造方法、setter方法和接口方法将外部资源注入对象。\n    \n    + 参与对象：对象、IoC/DI容器、对象的外部资源\n    + 创建过程：\n    \n    ![创建过程](http://images.cnitblog.com/blog/362290/201311/15131057-90c485a85176402293fc27fc8e5d1d2a.png)\n    \n    + 创建形式：构造函数注入、setter方法注入、接口注入\n    \n        - setter方法注入\n        ![setter方法注入](http://images.cnitblog.com/blog/362290/201310/31165626-ce36baaf7c2b44c9a997288184d65dd5.png)\n        \n        - 构造函数注入\n        ![构造函数注入](http://images.cnitblog.com/blog/362290/201310/31165647-2a0c584f1c5a4573a2b59f4ceceeee2b.png)\n        \n        - 接口注入\n        \n        ```\n        public interface InjectFinder {\n            void injectFinder(MovieFinder finder);\n        }\n    \n        class MovieLister: InjectFinder\n        {\n            private MovieFinder finder;\n            public void injectFinder(MovieFinder finder) {\n                this.finder = finder;\n            }\n        }\n        ```\n\n\n## DI容器 Google Guice\n\n> Google Guice (pronounced \"juice\") is an open source software framework for the Java platform released by Google under the Apache License. It provides support for dependency injection using annotations to configure Java objects. Dependency injection is a design pattern whose core principle is to separate behavior from dependency resolution.\n\n> Guice allows implementation classes to be bound programmatically to an interface, then injected into constructors, methods or fields using an `@Inject` annotation. When more than one implementation of the same interface is needed, the user can create custom annotations that identify an implementation, then use that annotation when injecting it.\n\n> From Wikipedia Google Guice\n\nGoogle Guice是一个Google发布的基于Java平台的DI容器(框架)。它将实现类通过一个`Module`文件绑定在接口上，然后通过适用`@Inject`标签来实现构造器注入、方法注入和属性注入。\n\n相关介绍及其使用如下：\n\n[Guice Demo github](https://github.com/victoryxs/GuiceDemo/tree/master/src/main)\n\n\n\n\n\n\n\n","slug":"Guice框架学习","published":1,"updated":"2015-08-09T03:15:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3t002p0xse1ygql2vg"},{"title":"FoldingText工具","date":"2015-07-09T02:03:55.000Z","description":"FoldingText 文本编辑工具的使用","_content":"\n## User Guide\n\n\n\n- Edit > Select > Expand Selection (Option-Command-Up)\n\n\n\n- Edit > Select > Contract Selection (Option-Command-Down)\n\n\n\n- Edit > Select > Undo Selection (Control-Z)\n\n\n\n- Edit > Select > Redo Selection (Control-Shift-Z)\n\n\n\n- Organize > Move Left (Command-[)\n\n\n\n- Organize > Move Right (Command-])\n\n\n\n- Organize > Move Up (Option-Command-[)\n\n\n\n- Organize > Move Down (Option-Command-[)\n\n\n\n- Organize > Move Branch Left (Control-Option-Left)\n\n\n\n- Organize > Move Branch Right (Control-Option-Right)\n\n\n\n- Organize > Move Branch Up (Control-Option-Up)\n\n\n\n- Organize > Move Branch Down (Control-Option-Down)\n\n\n\n- To open the command mode use the shortcut Command-'.\n\n\n\n- To create a property, type the property name (single word) followed by \" : \" (space, colon, space) on its own line.\n\n\n\n***\n\n##Node Path\n\n\n\nFoldingText是一个基于markdown语法的`#`级层组织的树形结构文档编辑器，其中的Node Path就像文档结构树的每个节点，其表现的形式类似文件系统的地址。\n\n\n\n```\n\n/myheading/subhead\n\n```\n\n###Node Path结构\n\n\n\n```\n\n//myheading/subhead\n\n```\n\n表示匹配所有一级标题是myheading的node path\n\n\n\n```\n\n/myheading//subheand\n\n```\n\n表示匹配myheading下所有subhead的node path\n\n\n\n```\n\n/myheading//subhead/@done/..*\n\n```\n\n表示匹配myheading下的subhead下@done的父类标题\n\n\n\n```\n\n/myheading///subhead\n\n```\n\n表示连同父标题一同显示\n\n\n\n```\n\n/myheading/ancestor::*\n\n```\n\n表示显示匹配断言的父节点\n\n\n\n```\n\n/myheading/ancestor-or-self::*\n\n```\n\n表示显示断言本身和它的父节点\n\n\n\n```\n\n/myheading/descendant::*\n\n```\n\n表示显示断言的后代\n\n\n\n```\n\n/myheading/descendant-or-self::*\n\n```\n\n表示显示断言的后代和本身\n\n\n\n```\n\n/myheading/following::*\n\n```\n\n表示显示断言后的所有节点\n\n\n\n```\n\n/myheading/following-sibling::*\n\n```\n\n表示断言后的所有兄弟节点\n\n\n\n```\n\n/myheading/preceding::*\n\n```\n\n表示显示断言前的所有节点\n\n\n\n```\n\n/myheading/preceding-sibling::*\n\n```\n\n表示显示断言前的所有兄弟节点\n\n\n\n```\n\n/myheading/child::*\n\n```\n\n表示显示断言的孩子节点\n\n\n\n```\n\n/myheading/parent::*\n\n```\n\n表示显示断言的父节点\n\n\n\n```\n\n/myheading/self::*\n\n```\n\n表示显示断言本身\n\n\n\n```\n\n/myheading/filter-descendants::*\n\n```\n\n表示连同后代节点一同显示\n\n\n\n###Node Path操作\n\n`union`交集\n\n`intersect`并集\n\n`except`除去\n\n\n\n###Node Path断言\n\n```\n\n@<attribute> <relation> <search>\n\n```\n\n#### attribute\n\n1. 内置属性\n\n\n\n+ `type`： `heading`;`ordered`;`unordered`;`blockquote`;`codeblock`;`linkdef`;`property`;`body`;`term`;`definition`;`horizontalrule`;`empty`;\n\n\n\n+ `line`\n\n\n\n+ `mode`\n\n\n\n+ `modeContext`\n\n\n\n+ `id`\n\n\n\n+ `property`\n\n\n\n2. 标签属性\n\n\n\n@priority(1)\n\n\n\n```\n\n@priority = 1\n\n```\n\n\n\n3. line的内置属性\n\n\n\n```\n\n@line:strong\n\n@line:text\n\n```\n\n\n\n4. Property属性\n\n\n\n```\n\n@property:myproperty = with value\n\n```\n\n\n\n####relation\n\n`=` `!=` `<` `>` `<=` `>=` `beginswith` `endswith` `matches` `contains`\n\n\n\n```\n\n@line contains [modifier] value\n\n```\n\n其中的modifer是修饰预，主要包括：\n\n\n\n+ `i`:转化为小写字母，默认修饰符\n\n+ `s`:不做任何修改\n\n+ `n`:数字模式比较\n\n+ `d`:日期模式比较\n\n\n\n####value\n\n如果是特殊的符号，必须用`\"\"`包裹\n\n\n\n```\n\n@line contains \"=\"\n\n```\n\n####布尔表达式\n\n`and` `or` `not`\n\n\n\n###结果分片\n\n`[0]`的使用\n\n\n\n```\n\n/project//task not @done[0]\n\n```\n\n返回每一个project目录下第一个未完成的任务\n\n\n\n```\n\n(//task not @done)[0]\n\n```\n\n返回第一个未完成的任务\n\n\n\n`[start:end]`\n\n\n\n`[start:]`\n\n\n\n`[:end]`\n\n\n\n`[:]`\n\n\n\n`[index]`\n\n***\n\n##相关资料\n\n[FoldingText, 伪装成 markdown 编辑器的 outliner](http://www.v2ex.com/t/123024)\n\n\n\n[FoldingText Support](http://support.foldingtext.com/)\n\n\n\n[FoldingText概述](https://velocityofrelease.wordpress.com/2014/06/13/foldingtext-2-%E6%A6%82%E8%AB%96/#foldingtext-2-概論)\n\n\n","source":"_posts/FoldingText工具.md","raw":"title: FoldingText工具\ndate: 2015-07-09 10:03:55\ncategories: tools\ntags: [tools,FoldingText]\ndescription: FoldingText 文本编辑工具的使用\n---\n\n## User Guide\n\n\n\n- Edit > Select > Expand Selection (Option-Command-Up)\n\n\n\n- Edit > Select > Contract Selection (Option-Command-Down)\n\n\n\n- Edit > Select > Undo Selection (Control-Z)\n\n\n\n- Edit > Select > Redo Selection (Control-Shift-Z)\n\n\n\n- Organize > Move Left (Command-[)\n\n\n\n- Organize > Move Right (Command-])\n\n\n\n- Organize > Move Up (Option-Command-[)\n\n\n\n- Organize > Move Down (Option-Command-[)\n\n\n\n- Organize > Move Branch Left (Control-Option-Left)\n\n\n\n- Organize > Move Branch Right (Control-Option-Right)\n\n\n\n- Organize > Move Branch Up (Control-Option-Up)\n\n\n\n- Organize > Move Branch Down (Control-Option-Down)\n\n\n\n- To open the command mode use the shortcut Command-'.\n\n\n\n- To create a property, type the property name (single word) followed by \" : \" (space, colon, space) on its own line.\n\n\n\n***\n\n##Node Path\n\n\n\nFoldingText是一个基于markdown语法的`#`级层组织的树形结构文档编辑器，其中的Node Path就像文档结构树的每个节点，其表现的形式类似文件系统的地址。\n\n\n\n```\n\n/myheading/subhead\n\n```\n\n###Node Path结构\n\n\n\n```\n\n//myheading/subhead\n\n```\n\n表示匹配所有一级标题是myheading的node path\n\n\n\n```\n\n/myheading//subheand\n\n```\n\n表示匹配myheading下所有subhead的node path\n\n\n\n```\n\n/myheading//subhead/@done/..*\n\n```\n\n表示匹配myheading下的subhead下@done的父类标题\n\n\n\n```\n\n/myheading///subhead\n\n```\n\n表示连同父标题一同显示\n\n\n\n```\n\n/myheading/ancestor::*\n\n```\n\n表示显示匹配断言的父节点\n\n\n\n```\n\n/myheading/ancestor-or-self::*\n\n```\n\n表示显示断言本身和它的父节点\n\n\n\n```\n\n/myheading/descendant::*\n\n```\n\n表示显示断言的后代\n\n\n\n```\n\n/myheading/descendant-or-self::*\n\n```\n\n表示显示断言的后代和本身\n\n\n\n```\n\n/myheading/following::*\n\n```\n\n表示显示断言后的所有节点\n\n\n\n```\n\n/myheading/following-sibling::*\n\n```\n\n表示断言后的所有兄弟节点\n\n\n\n```\n\n/myheading/preceding::*\n\n```\n\n表示显示断言前的所有节点\n\n\n\n```\n\n/myheading/preceding-sibling::*\n\n```\n\n表示显示断言前的所有兄弟节点\n\n\n\n```\n\n/myheading/child::*\n\n```\n\n表示显示断言的孩子节点\n\n\n\n```\n\n/myheading/parent::*\n\n```\n\n表示显示断言的父节点\n\n\n\n```\n\n/myheading/self::*\n\n```\n\n表示显示断言本身\n\n\n\n```\n\n/myheading/filter-descendants::*\n\n```\n\n表示连同后代节点一同显示\n\n\n\n###Node Path操作\n\n`union`交集\n\n`intersect`并集\n\n`except`除去\n\n\n\n###Node Path断言\n\n```\n\n@<attribute> <relation> <search>\n\n```\n\n#### attribute\n\n1. 内置属性\n\n\n\n+ `type`： `heading`;`ordered`;`unordered`;`blockquote`;`codeblock`;`linkdef`;`property`;`body`;`term`;`definition`;`horizontalrule`;`empty`;\n\n\n\n+ `line`\n\n\n\n+ `mode`\n\n\n\n+ `modeContext`\n\n\n\n+ `id`\n\n\n\n+ `property`\n\n\n\n2. 标签属性\n\n\n\n@priority(1)\n\n\n\n```\n\n@priority = 1\n\n```\n\n\n\n3. line的内置属性\n\n\n\n```\n\n@line:strong\n\n@line:text\n\n```\n\n\n\n4. Property属性\n\n\n\n```\n\n@property:myproperty = with value\n\n```\n\n\n\n####relation\n\n`=` `!=` `<` `>` `<=` `>=` `beginswith` `endswith` `matches` `contains`\n\n\n\n```\n\n@line contains [modifier] value\n\n```\n\n其中的modifer是修饰预，主要包括：\n\n\n\n+ `i`:转化为小写字母，默认修饰符\n\n+ `s`:不做任何修改\n\n+ `n`:数字模式比较\n\n+ `d`:日期模式比较\n\n\n\n####value\n\n如果是特殊的符号，必须用`\"\"`包裹\n\n\n\n```\n\n@line contains \"=\"\n\n```\n\n####布尔表达式\n\n`and` `or` `not`\n\n\n\n###结果分片\n\n`[0]`的使用\n\n\n\n```\n\n/project//task not @done[0]\n\n```\n\n返回每一个project目录下第一个未完成的任务\n\n\n\n```\n\n(//task not @done)[0]\n\n```\n\n返回第一个未完成的任务\n\n\n\n`[start:end]`\n\n\n\n`[start:]`\n\n\n\n`[:end]`\n\n\n\n`[:]`\n\n\n\n`[index]`\n\n***\n\n##相关资料\n\n[FoldingText, 伪装成 markdown 编辑器的 outliner](http://www.v2ex.com/t/123024)\n\n\n\n[FoldingText Support](http://support.foldingtext.com/)\n\n\n\n[FoldingText概述](https://velocityofrelease.wordpress.com/2014/06/13/foldingtext-2-%E6%A6%82%E8%AB%96/#foldingtext-2-概論)\n\n\n","slug":"FoldingText工具","published":1,"updated":"2015-07-10T07:28:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid3x3n3v002w0xseoly8l47n"}],"PostAsset":[],"PostCategory":[{"post_id":"cid3x3n1y00050xseqi1de5hz","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2500090xseiehx5e29"},{"post_id":"cid3x3n27000c0xsed2bf66re","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n28000d0xsertw73ml8"},{"post_id":"cid3x3n29000g0xse9k5hke00","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2a000h0xsewelsj8ut"},{"post_id":"cid3x3n2c000k0xsetkbnkdze","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2d000l0xse1ze9pms3"},{"post_id":"cid3x3n2f000o0xsecps5q3xu","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2g000p0xselgobeoht"},{"post_id":"cid3x3n2h000s0xsewbqph9w9","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2i000t0xsef9l3xe0k"},{"post_id":"cid3x3n2l000w0xseckaxgmen","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2m000x0xseb1zfgikz"},{"post_id":"cid3x3n2o00100xse1296hquh","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2q00110xseeuytvovo"},{"post_id":"cid3x3n2r00140xse8j76i016","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2u00150xseuf08697r"},{"post_id":"cid3x3n2w00180xse8v31yomr","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n2y00190xse08oee5ye"},{"post_id":"cid3x3n30001c0xsewapyqtz9","category_id":"cid3x3n2200060xsetmljh2fj","_id":"cid3x3n31001d0xseyiophybq"},{"post_id":"cid3x3n33001g0xsemo21017a","category_id":"cid3x3n34001h0xsewkvq1jnk","_id":"cid3x3n36001k0xse2y9wh3b3"},{"post_id":"cid3x3n37001n0xse1d01nlj6","category_id":"cid3x3n38001o0xse05q6rgoq","_id":"cid3x3n39001r0xsetbxlabf8"},{"post_id":"cid3x3n3b001u0xsemg4rd9lv","category_id":"cid3x3n34001h0xsewkvq1jnk","_id":"cid3x3n3c001v0xse1r5cdxz7"},{"post_id":"cid3x3n3f001z0xse3fe2t19i","category_id":"cid3x3n3g00200xsejfyu70wj","_id":"cid3x3n3h00230xseahe93onb"},{"post_id":"cid3x3n3i00260xsekv6zn8gi","category_id":"cid3x3n34001h0xsewkvq1jnk","_id":"cid3x3n3j00270xseko1pnckj"},{"post_id":"cid3x3n3l002d0xsexuhd8ij9","category_id":"cid3x3n34001h0xsewkvq1jnk","_id":"cid3x3n3o002e0xse15at9078"},{"post_id":"cid3x3n3p002i0xsesm30qa75","category_id":"cid3x3n3r002j0xse3u05u3zw","_id":"cid3x3n3s002m0xsexqtke7fy"},{"post_id":"cid3x3n3t002p0xse1ygql2vg","category_id":"cid3x3n3u002q0xselnrngspc","_id":"cid3x3n3u002t0xsec00s9w51"},{"post_id":"cid3x3n3v002w0xseoly8l47n","category_id":"cid3x3n34001h0xsewkvq1jnk","_id":"cid3x3n3x002x0xseqjc4v536"}],"PostTag":[{"post_id":"cid3x3n1y00050xseqi1de5hz","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n25000a0xse8oc3sa8i"},{"post_id":"cid3x3n1y00050xseqi1de5hz","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n25000b0xsepgqcnmp3"},{"post_id":"cid3x3n27000c0xsed2bf66re","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n28000e0xseaf4y1cxu"},{"post_id":"cid3x3n27000c0xsed2bf66re","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n28000f0xsew2n0p5nh"},{"post_id":"cid3x3n29000g0xse9k5hke00","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2b000i0xse4g18e3m7"},{"post_id":"cid3x3n29000g0xse9k5hke00","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2b000j0xse5wewyf91"},{"post_id":"cid3x3n2c000k0xsetkbnkdze","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2d000m0xsertjd8dcy"},{"post_id":"cid3x3n2c000k0xsetkbnkdze","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2d000n0xse7mywtxvj"},{"post_id":"cid3x3n2f000o0xsecps5q3xu","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2g000q0xsegdi9up5q"},{"post_id":"cid3x3n2f000o0xsecps5q3xu","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2g000r0xse74dfwrly"},{"post_id":"cid3x3n2h000s0xsewbqph9w9","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2j000u0xsev9j7injb"},{"post_id":"cid3x3n2h000s0xsewbqph9w9","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2j000v0xsejj4eq5md"},{"post_id":"cid3x3n2l000w0xseckaxgmen","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2m000y0xse7btnx0ci"},{"post_id":"cid3x3n2l000w0xseckaxgmen","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2m000z0xse511xvywm"},{"post_id":"cid3x3n2o00100xse1296hquh","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2q00120xseqplb1zml"},{"post_id":"cid3x3n2o00100xse1296hquh","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2q00130xse3uivwbei"},{"post_id":"cid3x3n2r00140xse8j76i016","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2u00160xsehc6qkd5w"},{"post_id":"cid3x3n2r00140xse8j76i016","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2v00170xse8zqbi5gh"},{"post_id":"cid3x3n2w00180xse8v31yomr","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n2y001a0xse1675u9xq"},{"post_id":"cid3x3n2w00180xse8v31yomr","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n2y001b0xsedvvc2c95"},{"post_id":"cid3x3n30001c0xsewapyqtz9","tag_id":"cid3x3n2300070xseabdsfzm2","_id":"cid3x3n32001e0xse2f9cb5mw"},{"post_id":"cid3x3n30001c0xsewapyqtz9","tag_id":"cid3x3n2400080xset0afz3mg","_id":"cid3x3n32001f0xsenhil77hb"},{"post_id":"cid3x3n33001g0xsemo21017a","tag_id":"cid3x3n34001i0xsev20bbgqw","_id":"cid3x3n36001l0xsecjafw4xq"},{"post_id":"cid3x3n33001g0xsemo21017a","tag_id":"cid3x3n35001j0xsekmte9qdc","_id":"cid3x3n36001m0xse4n3f1505"},{"post_id":"cid3x3n37001n0xse1d01nlj6","tag_id":"cid3x3n38001p0xsessgandxl","_id":"cid3x3n39001s0xse3hfhdphz"},{"post_id":"cid3x3n37001n0xse1d01nlj6","tag_id":"cid3x3n38001q0xsevb41qvlf","_id":"cid3x3n39001t0xse2qsntxeb"},{"post_id":"cid3x3n3b001u0xsemg4rd9lv","tag_id":"cid3x3n34001i0xsev20bbgqw","_id":"cid3x3n3d001x0xsevsac3wye"},{"post_id":"cid3x3n3b001u0xsemg4rd9lv","tag_id":"cid3x3n3c001w0xseedo1vogo","_id":"cid3x3n3d001y0xsef982sziu"},{"post_id":"cid3x3n3f001z0xse3fe2t19i","tag_id":"cid3x3n3g00210xser01b2zv9","_id":"cid3x3n3h00240xse5i06m2e7"},{"post_id":"cid3x3n3f001z0xse3fe2t19i","tag_id":"cid3x3n3g00220xsewx2y3lvh","_id":"cid3x3n3h00250xseea71vbe3"},{"post_id":"cid3x3n3i00260xsekv6zn8gi","tag_id":"cid3x3n34001i0xsev20bbgqw","_id":"cid3x3n3k002a0xsel0e5u4s9"},{"post_id":"cid3x3n3i00260xsekv6zn8gi","tag_id":"cid3x3n3j00280xsekg13q4nh","_id":"cid3x3n3k002b0xse1mil9u1d"},{"post_id":"cid3x3n3i00260xsekv6zn8gi","tag_id":"cid3x3n3j00290xseoz20dd1v","_id":"cid3x3n3k002c0xseimart6lc"},{"post_id":"cid3x3n3l002d0xsexuhd8ij9","tag_id":"cid3x3n34001i0xsev20bbgqw","_id":"cid3x3n3o002g0xseqhtf94v2"},{"post_id":"cid3x3n3l002d0xsexuhd8ij9","tag_id":"cid3x3n3o002f0xse1p2y2sud","_id":"cid3x3n3o002h0xserm3i9m0y"},{"post_id":"cid3x3n3p002i0xsesm30qa75","tag_id":"cid3x3n3r002k0xserbvc9zo5","_id":"cid3x3n3s002n0xse7c61n089"},{"post_id":"cid3x3n3p002i0xsesm30qa75","tag_id":"cid3x3n3r002l0xse6ioivoj0","_id":"cid3x3n3s002o0xseh89ihkv5"},{"post_id":"cid3x3n3t002p0xse1ygql2vg","tag_id":"cid3x3n3u002r0xse1kekc345","_id":"cid3x3n3u002u0xsefjhmk74f"},{"post_id":"cid3x3n3t002p0xse1ygql2vg","tag_id":"cid3x3n3u002s0xsep048bhak","_id":"cid3x3n3v002v0xse707gzw5s"},{"post_id":"cid3x3n3v002w0xseoly8l47n","tag_id":"cid3x3n34001i0xsev20bbgqw","_id":"cid3x3n3x002z0xsee86fd5ur"},{"post_id":"cid3x3n3v002w0xseoly8l47n","tag_id":"cid3x3n3x002y0xse0b2tdrsz","_id":"cid3x3n3y00300xse0b1goomj"}],"Tag":[{"name":"code","_id":"cid3x3n2300070xseabdsfzm2"},{"name":"leetcode","_id":"cid3x3n2400080xset0afz3mg"},{"name":"tools","_id":"cid3x3n34001i0xsev20bbgqw"},{"name":"Taskpaper","_id":"cid3x3n35001j0xsekmte9qdc"},{"name":"life","_id":"cid3x3n38001p0xsessgandxl"},{"name":"running","_id":"cid3x3n38001q0xsevb41qvlf"},{"name":"mdpress","_id":"cid3x3n3c001w0xseedo1vogo"},{"name":"hexo","_id":"cid3x3n3g00210xser01b2zv9"},{"name":"blog","_id":"cid3x3n3g00220xsewx2y3lvh"},{"name":"iterm2","_id":"cid3x3n3j00280xsekg13q4nh"},{"name":"zsh","_id":"cid3x3n3j00290xseoz20dd1v"},{"name":"mac","_id":"cid3x3n3o002f0xse1p2y2sud"},{"name":"algorithms","_id":"cid3x3n3r002k0xserbvc9zo5"},{"name":"KMP","_id":"cid3x3n3r002l0xse6ioivoj0"},{"name":"framework","_id":"cid3x3n3u002r0xse1kekc345"},{"name":"Guice","_id":"cid3x3n3u002s0xsep048bhak"},{"name":"FoldingText","_id":"cid3x3n3x002y0xse0b2tdrsz"}]}}